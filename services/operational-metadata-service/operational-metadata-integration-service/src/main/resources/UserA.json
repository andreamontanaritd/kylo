{
    "processors": [
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 5
            },
            "id": "fb29e060-14b9-3a6e-afdd-d193989207fe",
            "uri": "https://localhost:8179/nifi-api/processors/fb29e060-14b9-3a6e-afdd-d193989207fe",
            "position": {
                "x": 1129.854893075466,
                "y": 240.36730191487368
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "fb29e060-14b9-3a6e-afdd-d193989207fe",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 1129.854893075466,
                    "y": 240.36730191487368
                },
                "name": "Fetch RDBMS Data",
                "type": "com.thinkbiganalytics.nifi.v2.ingest.GetTableData",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#3cff00"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "nodata",
                        "description": "Successful but no new data to process.",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Successfully relationship.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Source Database Connection": "14a2aaca-6d30-3e3f-eee0-07c32c1d16de",
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "concerts",
                        "System feed name": "events",
                        "Source Table": "NA",
                        "Source Fields": "eventid\nvenueid\ncatid\ndateid\neventname\nstarttime",
                        "Load Strategy": "FULL_LOAD",
                        "High-Water Mark Property Name": "water.mark",
                        "Date Field": null,
                        "Overlap Period": "300 seconds",
                        "Max Wait Time": "0 seconds",
                        "Backoff Period": "300 seconds",
                        "Minimum Time Unit": "NONE",
                        "Output Type": "DELIMITED",
                        "Output Delimiter": ","
                    },
                    "descriptors": {
                        "Source Database Connection": {
                            "name": "Source Database Connection",
                            "displayName": "Source Database Connection",
                            "description": "The database where the source table resides",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo MySQL",
                                        "value": "14a2aaca-6d30-3e3f-eee0-07c32c1d16de"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo MySQL",
                                        "value": "adc4634a-0163-1000-81d8-40e5bab304cb"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source Table": {
                            "name": "Source Table",
                            "displayName": "Source Table",
                            "description": "Name of table including schema (if applicable)",
                            "defaultValue": "${metadata.table.sourceTableSchema.name}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source Fields": {
                            "name": "Source Fields",
                            "displayName": "Source Fields",
                            "description": "Field names (in order) to read from the source table. ie. the select fields. The format is separated by newline. Inconsistent order will cause corruption of the downstream Hive data.",
                            "defaultValue": "${metadata.table.sourceFields}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Load Strategy": {
                            "name": "Load Strategy",
                            "displayName": "Load Strategy",
                            "description": "Whether to load the entire table or perform an incremental extract",
                            "defaultValue": "FULL_LOAD",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "FULL_LOAD",
                                        "value": "FULL_LOAD"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "INCREMENTAL",
                                        "value": "INCREMENTAL"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "High-Water Mark Property Name": {
                            "name": "High-Water Mark Property Name",
                            "displayName": "High-Water Mark Property Name",
                            "description": "Name of the flow file attribute that should contain the current hig-water mark date, and which this processor will update with new values.  Required if the load strategy is set to INCREMENTAL.",
                            "defaultValue": "high.water.date",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Date Field": {
                            "name": "Date Field",
                            "displayName": "Date Field",
                            "description": "Source field containing a modified date for tracking incremental load",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Overlap Period": {
                            "name": "Overlap Period",
                            "displayName": "Overlap Period",
                            "description": "Amount of time to overlap into the last load date to ensure long running transactions missed by previous load weren't missed. Recommended: >0s",
                            "defaultValue": "0 seconds",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Wait Time": {
                            "name": "Max Wait Time",
                            "displayName": "Max Wait Time",
                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.",
                            "defaultValue": "0 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Backoff Period": {
                            "name": "Backoff Period",
                            "displayName": "Backoff Period",
                            "description": "Only records older than the backoff period will be eligible for pickup. This can be used in the ILM use case to define a retention period. Recommended: >5m",
                            "defaultValue": "300 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum Time Unit": {
                            "name": "Minimum Time Unit",
                            "displayName": "Minimum Time Unit",
                            "description": "The minimum unit of data eligible to load. For the ILM case, this would be DAY, WEEK, MONTH, YEAR , zero means there is no limit. Max time less than 1 second will be equal to zero.",
                            "defaultValue": "NONE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "NONE",
                                        "value": "NONE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "HOUR",
                                        "value": "HOUR"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DAY",
                                        "value": "DAY"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "WEEK",
                                        "value": "WEEK"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "MONTH",
                                        "value": "MONTH"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "YEAR",
                                        "value": "YEAR"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Output Type": {
                            "name": "Output Type",
                            "displayName": "Output Type",
                            "description": "How should the results be returned.  Either a Delimited output such as CSV, or AVRO.  If delimited you must specify the delimiter.",
                            "defaultValue": "DELIMITED",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DELIMITED",
                                        "value": "DELIMITED"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AVRO",
                                        "value": "AVRO"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Output Delimiter": {
                            "name": "Output Delimiter",
                            "displayName": "Output Delimiter",
                            "description": "Used only if the Output Type is 'Delimited'.  If this is empty and the Output Type is delimited it will default to a ','.  This property is not used if the Output Type is AVRO.",
                            "defaultValue": ",",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "fb29e060-14b9-3a6e-afdd-d193989207fe",
                "name": "Fetch RDBMS Data",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "fb29e060-14b9-3a6e-afdd-d193989207fe",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "Fetch RDBMS Data",
                    "type": "GetTableData",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 299,
                    "tasksDurationNanos": 24887996,
                    "tasks": "299",
                    "tasksDuration": "00:00:00.024",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "f0105b31-5113-3860-b31a-c294f5ade445",
            "uri": "https://localhost:8179/nifi-api/processors/f0105b31-5113-3860-b31a-c294f5ade445",
            "position": {
                "x": 1782.9553713302557,
                "y": 1354.9560579438003
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "f0105b31-5113-3860-b31a-c294f5ade445",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 1782.9553713302557,
                    "y": 1354.9560579438003
                },
                "name": "Initialize Cleanup Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "category": "${metadata.category.systemName}",
                        "feed": "${metadata.systemFeedName}",
                        "hdfs.ingest.root": "/etl",
                        "hive.ingest.root": "/model.db",
                        "hive.master.root": "/app/warehouse",
                        "hive.profile.root": "/model.db"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "category": {
                            "name": "category",
                            "displayName": "category",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "feed": {
                            "name": "feed",
                            "displayName": "feed",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "f0105b31-5113-3860-b31a-c294f5ade445",
                "name": "Initialize Cleanup Parameters",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "f0105b31-5113-3860-b31a-c294f5ade445",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "Initialize Cleanup Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "04ac1e08-f66d-39dc-6b8e-cd247ed55c94",
            "uri": "https://localhost:8179/nifi-api/processors/04ac1e08-f66d-39dc-6b8e-cd247ed55c94",
            "position": {
                "x": 16.205852895502176,
                "y": 755.3197421390705
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "04ac1e08-f66d-39dc-6b8e-cd247ed55c94",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 16.205852895502176,
                    "y": 755.3197421390705
                },
                "name": "S3",
                "type": "org.apache.nifi.processors.aws.s3.ListS3",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-aws-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "FlowFiles are routed to success relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": false,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Bucket": null,
                        "Region": "us-west-2",
                        "Access Key": null,
                        "Secret Key": null,
                        "Credentials File": null,
                        "AWS Credentials Provider service": "f06e7e4a-108d-38fd-0000-000000000000",
                        "Communications Timeout": "30 secs",
                        "SSL Context Service": null,
                        "Endpoint Override URL": null,
                        "Signer Override": "Default Signature",
                        "Proxy Host": null,
                        "Proxy Host Port": null,
                        "delimiter": null,
                        "prefix": null,
                        "use-versions": "false",
                        "list-type": "1",
                        "min-age": "0 sec"
                    },
                    "descriptors": {
                        "Bucket": {
                            "name": "Bucket",
                            "displayName": "Bucket",
                            "description": "",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Region": {
                            "name": "Region",
                            "displayName": "Region",
                            "description": "",
                            "defaultValue": "us-west-2",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "us-gov-west-1",
                                        "value": "us-gov-west-1",
                                        "description": "us-gov-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-1",
                                        "value": "us-east-1",
                                        "description": "us-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-2",
                                        "value": "us-east-2",
                                        "description": "us-east-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-1",
                                        "value": "us-west-1",
                                        "description": "us-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-2",
                                        "value": "us-west-2",
                                        "description": "us-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-1",
                                        "value": "eu-west-1",
                                        "description": "eu-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-2",
                                        "value": "eu-west-2",
                                        "description": "eu-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-central-1",
                                        "value": "eu-central-1",
                                        "description": "eu-central-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-south-1",
                                        "value": "ap-south-1",
                                        "description": "ap-south-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-1",
                                        "value": "ap-southeast-1",
                                        "description": "ap-southeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-2",
                                        "value": "ap-southeast-2",
                                        "description": "ap-southeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-1",
                                        "value": "ap-northeast-1",
                                        "description": "ap-northeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-2",
                                        "value": "ap-northeast-2",
                                        "description": "ap-northeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "sa-east-1",
                                        "value": "sa-east-1",
                                        "description": "sa-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "cn-north-1",
                                        "value": "cn-north-1",
                                        "description": "cn-north-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ca-central-1",
                                        "value": "ca-central-1",
                                        "description": "ca-central-1"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Access Key": {
                            "name": "Access Key",
                            "displayName": "Access Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Secret Key": {
                            "name": "Secret Key",
                            "displayName": "Secret Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Credentials File": {
                            "name": "Credentials File",
                            "displayName": "Credentials File",
                            "description": "Path to a file containing AWS access key and secret key in properties file format.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "AWS Credentials Provider service": {
                            "name": "AWS Credentials Provider service",
                            "displayName": "AWS Credentials Provider service",
                            "description": "The Controller Service that is used to obtain aws credentials provider",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "adc46394-0163-1000-4fc1-afbc4db6d274"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "b63b608a-40fb-3499-0efd-60054f62dade"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-aws-service-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Communications Timeout": {
                            "name": "Communications Timeout",
                            "displayName": "Communications Timeout",
                            "description": "",
                            "defaultValue": "30 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Endpoint Override URL": {
                            "name": "Endpoint Override URL",
                            "displayName": "Endpoint Override URL",
                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Signer Override": {
                            "name": "Signer Override",
                            "displayName": "Signer Override",
                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                            "defaultValue": "Default Signature",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Default Signature",
                                        "value": "Default Signature"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v4",
                                        "value": "AWSS3V4SignerType"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v2",
                                        "value": "S3SignerType"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "Proxy host name or IP",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Host Port": {
                            "name": "Proxy Host Port",
                            "displayName": "Proxy Host Port",
                            "description": "Proxy host port",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "delimiter": {
                            "name": "delimiter",
                            "displayName": "Delimiter",
                            "description": "The string used to delimit directories within the bucket. Please consult the AWS documentation for the correct use of this field.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "prefix": {
                            "name": "prefix",
                            "displayName": "Prefix",
                            "description": "The prefix used to filter the object list. In most cases, it should end with a forward slash ('/').",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "use-versions": {
                            "name": "use-versions",
                            "displayName": "Use Versions",
                            "description": "Specifies whether to use S3 versions, if applicable.  If false, only the latest version of each object will be returned.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "list-type": {
                            "name": "list-type",
                            "displayName": "List Type",
                            "description": "Specifies whether to use the original List Objects or the newer List Objects Version 2 endpoint.",
                            "defaultValue": "1",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "List Objects V1",
                                        "value": "1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "List Objects V2",
                                        "value": "2"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "min-age": {
                            "name": "min-age",
                            "displayName": "Minimum Object Age",
                            "description": "The minimum age that an S3 object must be in order to be considered; any object younger than this amount of time (according to last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "04ac1e08-f66d-39dc-6b8e-cd247ed55c94",
                "name": "S3",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "04ac1e08-f66d-39dc-6b8e-cd247ed55c94",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "S3",
                    "type": "ListS3",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "74d266de-2782-3972-58b6-0c9e693c374c",
            "uri": "https://localhost:8179/nifi-api/processors/74d266de-2782-3972-58b6-0c9e693c374c",
            "position": {
                "x": 479.72043836164266,
                "y": 752.3210350892696
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "74d266de-2782-3972-58b6-0c9e693c374c",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 479.72043836164266,
                    "y": 752.3210350892696
                },
                "name": "Fetch S3 Object",
                "type": "org.apache.nifi.processors.aws.s3.FetchS3Object",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-aws-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles are routed to failure relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "FlowFiles are routed to success relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Bucket": "${s3.bucket}",
                        "Object Key": "${filename}",
                        "Region": "us-west-2",
                        "Access Key": null,
                        "Secret Key": null,
                        "Credentials File": null,
                        "AWS Credentials Provider service": "b63b608a-40fb-3499-0efd-60054f62dade",
                        "Communications Timeout": "30 secs",
                        "Version": null,
                        "SSL Context Service": null,
                        "Endpoint Override URL": null,
                        "Signer Override": "Default Signature",
                        "Proxy Host": null,
                        "Proxy Host Port": null
                    },
                    "descriptors": {
                        "Bucket": {
                            "name": "Bucket",
                            "displayName": "Bucket",
                            "description": "",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Object Key": {
                            "name": "Object Key",
                            "displayName": "Object Key",
                            "description": "",
                            "defaultValue": "${filename}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Region": {
                            "name": "Region",
                            "displayName": "Region",
                            "description": "",
                            "defaultValue": "us-west-2",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "us-gov-west-1",
                                        "value": "us-gov-west-1",
                                        "description": "us-gov-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-1",
                                        "value": "us-east-1",
                                        "description": "us-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-2",
                                        "value": "us-east-2",
                                        "description": "us-east-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-1",
                                        "value": "us-west-1",
                                        "description": "us-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-2",
                                        "value": "us-west-2",
                                        "description": "us-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-1",
                                        "value": "eu-west-1",
                                        "description": "eu-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-2",
                                        "value": "eu-west-2",
                                        "description": "eu-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-central-1",
                                        "value": "eu-central-1",
                                        "description": "eu-central-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-south-1",
                                        "value": "ap-south-1",
                                        "description": "ap-south-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-1",
                                        "value": "ap-southeast-1",
                                        "description": "ap-southeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-2",
                                        "value": "ap-southeast-2",
                                        "description": "ap-southeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-1",
                                        "value": "ap-northeast-1",
                                        "description": "ap-northeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-2",
                                        "value": "ap-northeast-2",
                                        "description": "ap-northeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "sa-east-1",
                                        "value": "sa-east-1",
                                        "description": "sa-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "cn-north-1",
                                        "value": "cn-north-1",
                                        "description": "cn-north-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ca-central-1",
                                        "value": "ca-central-1",
                                        "description": "ca-central-1"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Access Key": {
                            "name": "Access Key",
                            "displayName": "Access Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Secret Key": {
                            "name": "Secret Key",
                            "displayName": "Secret Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Credentials File": {
                            "name": "Credentials File",
                            "displayName": "Credentials File",
                            "description": "Path to a file containing AWS access key and secret key in properties file format.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "AWS Credentials Provider service": {
                            "name": "AWS Credentials Provider service",
                            "displayName": "AWS Credentials Provider service",
                            "description": "The Controller Service that is used to obtain aws credentials provider",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "adc46394-0163-1000-4fc1-afbc4db6d274"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "b63b608a-40fb-3499-0efd-60054f62dade"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-aws-service-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Communications Timeout": {
                            "name": "Communications Timeout",
                            "displayName": "Communications Timeout",
                            "description": "",
                            "defaultValue": "30 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Version": {
                            "name": "Version",
                            "displayName": "Version",
                            "description": "The Version of the Object to download",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Endpoint Override URL": {
                            "name": "Endpoint Override URL",
                            "displayName": "Endpoint Override URL",
                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Signer Override": {
                            "name": "Signer Override",
                            "displayName": "Signer Override",
                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                            "defaultValue": "Default Signature",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Default Signature",
                                        "value": "Default Signature"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v4",
                                        "value": "AWSS3V4SignerType"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v2",
                                        "value": "S3SignerType"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "Proxy host name or IP",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Host Port": {
                            "name": "Proxy Host Port",
                            "displayName": "Proxy Host Port",
                            "description": "Proxy host port",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "validationErrors": [
                    "'AWS Credentials Provider service' validated against 'AWSCredentialsProviderControllerService' is invalid because Controller Service AWSCredentialsProviderService[id=b63b608a-40fb-3499-0efd-60054f62dade] is disabled"
                ],
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "74d266de-2782-3972-58b6-0c9e693c374c",
                "name": "Fetch S3 Object",
                "runStatus": "Invalid",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "74d266de-2782-3972-58b6-0c9e693c374c",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "Fetch S3 Object",
                    "type": "FetchS3Object",
                    "runStatus": "Invalid",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "6b1bd889-7fac-30db-656e-06665fd572ed",
            "uri": "https://localhost:8179/nifi-api/processors/6b1bd889-7fac-30db-656e-06665fd572ed",
            "position": {
                "x": 544.2288066350957,
                "y": 147.87639570983265
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "6b1bd889-7fac-30db-656e-06665fd572ed",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 544.2288066350957,
                    "y": 147.87639570983265
                },
                "name": "Set Feed Defaults",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "hdfs.archive.root": "${hdfs.archive.root:replaceEmpty('/archive')}",
                        "hdfs.ingest.root": "${hdfs.ingest.root:replaceEmpty('/etl')}",
                        "hive.ingest.root": "${hive.ingest.root:replaceEmpty('/model.db')}",
                        "hive.master.root": "${hive.master.root:replaceEmpty('/app/warehouse')}",
                        "hive.profile.root": "${hive.profile.root:replaceEmpty('/model.db')}",
                        "merge.correlation": "${category}.${feed}.correlation",
                        "nifi.home": "${nifi.home:replaceEmpty(\"/opt/nifi\")}",
                        "nifi.kylo.applicationJarDirectory": "${nifi.kylo.applicationJarDirectory:replaceEmpty('/opt/nifi/current/lib/app')}",
                        "savepoint.id": "${savepoint.id:isNull():ifElse(${uuid}, ${savepoint.id})}",
                        "skipHeader": "${skipHeader:replaceEmpty('false')}"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "hdfs.archive.root": {
                            "name": "hdfs.archive.root",
                            "displayName": "hdfs.archive.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "merge.correlation": {
                            "name": "merge.correlation",
                            "displayName": "merge.correlation",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.home": {
                            "name": "nifi.home",
                            "displayName": "nifi.home",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.kylo.applicationJarDirectory": {
                            "name": "nifi.kylo.applicationJarDirectory",
                            "displayName": "nifi.kylo.applicationJarDirectory",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "savepoint.id": {
                            "name": "savepoint.id",
                            "displayName": "savepoint.id",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "skipHeader": {
                            "name": "skipHeader",
                            "displayName": "skipHeader",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "6b1bd889-7fac-30db-656e-06665fd572ed",
                "name": "Set Feed Defaults",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "6b1bd889-7fac-30db-656e-06665fd572ed",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Set Feed Defaults",
                    "type": "UpdateAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 2
            },
            "id": "21a26466-6624-31f5-1fd4-90054ac4ba07",
            "uri": "https://localhost:8179/nifi-api/processors/21a26466-6624-31f5-1fd4-90054ac4ba07",
            "position": {
                "x": 641.0420883893967,
                "y": 936.1943391938012
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "21a26466-6624-31f5-1fd4-90054ac4ba07",
                "parentGroupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "position": {
                    "x": 641.0420883893967,
                    "y": 936.1943391938012
                },
                "name": "Initialize Cleanup Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "category": "website",
                        "feed": "testing_multi_b",
                        "hdfs.ingest.root": "/etl",
                        "hive.ingest.root": "/model.db",
                        "hive.master.root": "/app/warehouse",
                        "hive.profile.root": "/model.db"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "category": {
                            "name": "category",
                            "displayName": "category",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "feed": {
                            "name": "feed",
                            "displayName": "feed",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "id": "21a26466-6624-31f5-1fd4-90054ac4ba07",
                "name": "Initialize Cleanup Parameters",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "21a26466-6624-31f5-1fd4-90054ac4ba07",
                    "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                    "name": "Initialize Cleanup Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a4be7746-0165-1000-4a18-11c1909e5d4e",
                "version": 1
            },
            "id": "e0bbdca5-a13f-3a72-558d-e65e819165aa",
            "uri": "https://localhost:8179/nifi-api/processors/e0bbdca5-a13f-3a72-558d-e65e819165aa",
            "position": {
                "x": 541.8711432896453,
                "y": 375.29232844506805
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "e0bbdca5-a13f-3a72-558d-e65e819165aa",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 541.8711432896453,
                    "y": 375.29232844506805
                },
                "name": "Strip Header",
                "type": "com.thinkbiganalytics.nifi.v2.ingest.StripHeader",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "content",
                        "description": "The content (stripped of header if enabled) will be routed to this destination",
                        "autoTerminate": false
                    },
                    {
                        "name": "failure",
                        "description": "If a file cannot be split for some reason, the original file will be routed to this destination and nothing will be routed elsewhere",
                        "autoTerminate": false
                    },
                    {
                        "name": "header",
                        "description": "The header will be routed to this destination when header is stripped",
                        "autoTerminate": true
                    },
                    {
                        "name": "original",
                        "description": "The original input file will be routed to this destination",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Enable processing": "${skipHeader}",
                        "Header Line Count": "1"
                    },
                    "descriptors": {
                        "Enable processing": {
                            "name": "Enable processing",
                            "displayName": "Enable processing",
                            "description": "Whether to strip the header",
                            "defaultValue": "false",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Header Line Count": {
                            "name": "Header Line Count",
                            "displayName": "Header Line Count",
                            "description": "The number of lines that should be considered part of the header",
                            "defaultValue": "1",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "e0bbdca5-a13f-3a72-558d-e65e819165aa",
                "name": "Strip Header",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "e0bbdca5-a13f-3a72-558d-e65e819165aa",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Strip Header",
                    "type": "StripHeader",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "bc221293-a224-37b5-ec5a-96fe60f49264",
            "uri": "https://localhost:8179/nifi-api/processors/bc221293-a224-37b5-ec5a-96fe60f49264",
            "position": {
                "x": 480.61680814094143,
                "y": 1210.0718685985066
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "bc221293-a224-37b5-ec5a-96fe60f49264",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 480.61680814094143,
                    "y": 1210.0718685985066
                },
                "name": "FTP",
                "type": "org.apache.nifi.processors.standard.GetFTP",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Hostname": null,
                        "Port": "21",
                        "Username": null,
                        "Password": null,
                        "Connection Mode": "Passive",
                        "Transfer Mode": "Binary",
                        "Remote Path": null,
                        "File Filter Regex": null,
                        "Path Filter Regex": null,
                        "Polling Interval": "60 sec",
                        "Search Recursively": "false",
                        "Ignore Dotted Files": "true",
                        "Delete Original": "true",
                        "Connection Timeout": "30 sec",
                        "Data Timeout": "30 sec",
                        "Max Selects": "100",
                        "Remote Poll Batch Size": "5000",
                        "Use Natural Ordering": "false",
                        "Proxy Type": "DIRECT",
                        "Proxy Host": null,
                        "Proxy Port": null,
                        "Http Proxy Username": null,
                        "Http Proxy Password": null,
                        "Internal Buffer Size": "16KB",
                        "ftp-use-utf8": "false"
                    },
                    "descriptors": {
                        "Hostname": {
                            "name": "Hostname",
                            "displayName": "Hostname",
                            "description": "The fully qualified hostname or IP address of the remote system",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Port": {
                            "name": "Port",
                            "displayName": "Port",
                            "description": "The port that the remote system is listening on for file transfers",
                            "defaultValue": "21",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Username": {
                            "name": "Username",
                            "displayName": "Username",
                            "description": "Username",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "Password for the user account",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Connection Mode": {
                            "name": "Connection Mode",
                            "displayName": "Connection Mode",
                            "description": "The FTP Connection Mode",
                            "defaultValue": "Passive",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Active",
                                        "value": "Active"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Passive",
                                        "value": "Passive"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Transfer Mode": {
                            "name": "Transfer Mode",
                            "displayName": "Transfer Mode",
                            "description": "The FTP Transfer Mode",
                            "defaultValue": "Binary",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Binary",
                                        "value": "Binary"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ASCII",
                                        "value": "ASCII"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Path": {
                            "name": "Remote Path",
                            "displayName": "Remote Path",
                            "description": "The path on the remote system from which to pull or push files",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter Regex": {
                            "name": "File Filter Regex",
                            "displayName": "File Filter Regex",
                            "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter Regex": {
                            "name": "Path Filter Regex",
                            "displayName": "Path Filter Regex",
                            "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Determines how long to wait between fetching the listing for new files",
                            "defaultValue": "60 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Search Recursively": {
                            "name": "Search Recursively",
                            "displayName": "Search Recursively",
                            "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Dotted Files": {
                            "name": "Ignore Dotted Files",
                            "displayName": "Ignore Dotted Files",
                            "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Delete Original": {
                            "name": "Delete Original",
                            "displayName": "Delete Original",
                            "description": "Determines whether or not the file is deleted from the remote system after it has been successfully transferred",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Connection Timeout": {
                            "name": "Connection Timeout",
                            "displayName": "Connection Timeout",
                            "description": "Amount of time to wait before timing out while creating a connection",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Data Timeout": {
                            "name": "Data Timeout",
                            "displayName": "Data Timeout",
                            "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Selects": {
                            "name": "Max Selects",
                            "displayName": "Max Selects",
                            "description": "The maximum number of files to pull in a single connection",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Poll Batch Size": {
                            "name": "Remote Poll Batch Size",
                            "displayName": "Remote Poll Batch Size",
                            "description": "The value specifies how many file paths to find in a given directory on the remote system when doing a file listing. This value in general should not need to be modified but when polling against a remote system with a tremendous number of files this value can be critical.  Setting this value too high can result very poor performance and setting it too low can cause the flow to be slower than normal.",
                            "defaultValue": "5000",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Natural Ordering": {
                            "name": "Use Natural Ordering",
                            "displayName": "Use Natural Ordering",
                            "description": "If true, will pull files in the order in which they are naturally listed; otherwise, the order in which the files will be pulled is not defined",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Type": {
                            "name": "Proxy Type",
                            "displayName": "Proxy Type",
                            "description": "Proxy type used for file transfers",
                            "defaultValue": "DIRECT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DIRECT",
                                        "value": "DIRECT"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "HTTP",
                                        "value": "HTTP"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SOCKS",
                                        "value": "SOCKS"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "The fully qualified hostname or IP address of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Port": {
                            "name": "Proxy Port",
                            "displayName": "Proxy Port",
                            "description": "The port of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Http Proxy Username": {
                            "name": "Http Proxy Username",
                            "displayName": "Http Proxy Username",
                            "description": "Http Proxy Username",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Http Proxy Password": {
                            "name": "Http Proxy Password",
                            "displayName": "Http Proxy Password",
                            "description": "Http Proxy Password",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Internal Buffer Size": {
                            "name": "Internal Buffer Size",
                            "displayName": "Internal Buffer Size",
                            "description": "Set the internal buffer size for buffered data streams",
                            "defaultValue": "16KB",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "ftp-use-utf8": {
                            "name": "ftp-use-utf8",
                            "displayName": "Use UTF-8 Encoding",
                            "description": "Tells the client to use UTF-8 encoding when processing files and filenames. If set to true, the server must also support UTF-8 encoding.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "bc221293-a224-37b5-ec5a-96fe60f49264",
                "name": "FTP",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "bc221293-a224-37b5-ec5a-96fe60f49264",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "FTP",
                    "type": "GetFTP",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "f1abdf9c-dc08-3288-7e43-d9fd94279285",
            "uri": "https://localhost:8179/nifi-api/processors/f1abdf9c-dc08-3288-7e43-d9fd94279285",
            "position": {
                "x": 630.869929694145,
                "y": 1714.4215344140084
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "f1abdf9c-dc08-3288-7e43-d9fd94279285",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 630.869929694145,
                    "y": 1714.4215344140084
                },
                "name": "Set Cleanup Defaults",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#ff9900"
                },
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "hdfs.ingest.root": "${hdfs.ingest.root:replaceEmpty('/etl')}",
                        "hive.ingest.root": "${hive.ingest.root:replaceEmpty('/model.db')}",
                        "hive.master.root": "${hive.master.root:replaceEmpty('/app/warehouse')}",
                        "hive.profile.root": "${hive.profile.root:replaceEmpty('/model.db')}"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "f1abdf9c-dc08-3288-7e43-d9fd94279285",
                "name": "Set Cleanup Defaults",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "f1abdf9c-dc08-3288-7e43-d9fd94279285",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Set Cleanup Defaults",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "0602f31d-fe9f-3abc-bb3e-c40060857c19",
            "uri": "https://localhost:8179/nifi-api/processors/0602f31d-fe9f-3abc-bb3e-c40060857c19",
            "position": {
                "x": 1782.9553713302557,
                "y": 1354.9560579438003
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "0602f31d-fe9f-3abc-bb3e-c40060857c19",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 1782.9553713302557,
                    "y": 1354.9560579438003
                },
                "name": "Initialize Cleanup Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "category": "concerts",
                        "feed": "venues",
                        "hdfs.ingest.root": "/etl",
                        "hive.ingest.root": "/model.db",
                        "hive.master.root": "/app/warehouse",
                        "hive.profile.root": "/model.db"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "category": {
                            "name": "category",
                            "displayName": "category",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "feed": {
                            "name": "feed",
                            "displayName": "feed",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "0602f31d-fe9f-3abc-bb3e-c40060857c19",
                "name": "Initialize Cleanup Parameters",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "0602f31d-fe9f-3abc-bb3e-c40060857c19",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "Initialize Cleanup Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "4336a740-9b6c-3172-7f90-d32f80c800c6",
            "uri": "https://localhost:8179/nifi-api/processors/4336a740-9b6c-3172-7f90-d32f80c800c6",
            "position": {
                "x": 475.60957200335906,
                "y": 241.04846845100292
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "4336a740-9b6c-3172-7f90-d32f80c800c6",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 475.60957200335906,
                    "y": 241.04846845100292
                },
                "name": "Database",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.LoadHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "activeFailure",
                        "description": "The water mark is actively being processed and has not yet been committed or rejected",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "2ba62670-0360-353c-c37c-64d51cf1b0d6",
                        "System feed category": "${metadata.category.systemName}",
                        "System feed name": "${metadata.systemFeedName}",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Active Water Mark Strategy": "YIELD",
                        "Max Yield Count Strategy": "CANCEL_PREVIOUS",
                        "Max Yield Count": "50",
                        "Initial Value": "1970-01-01T00:00:00"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Active Water Mark Strategy": {
                            "name": "Active Water Mark Strategy",
                            "displayName": "Active Water Mark Strategy",
                            "description": "Specifies what strategy should be followed when an attempt to obtain the latest high-water mark fails because another flow file is already actively using it",
                            "defaultValue": "YIELD",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Yield",
                                        "value": "YIELD",
                                        "description": "Yield the processor so that another attempt to obtain the high-water mark can be made later."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Penalize",
                                        "value": "PENALIZE",
                                        "description": "Penalize the flow file and return it to the queue that it came from so that another attempt to obtain the high-water mark can be made later.  Behaves the same as \"Yield\" if this processor is the first one in the flow."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route",
                                        "value": "ROUTE",
                                        "description": "Route immediately to the \"activeFailure\" relationship."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Yield Count Strategy": {
                            "name": "Max Yield Count Strategy",
                            "displayName": "Max Yield Count Strategy",
                            "description": "Specifies what strategy should be followed when the maximum yield count (if used) is reached",
                            "defaultValue": "CANCEL_PREVIOUS",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to activeFailure",
                                        "value": "ROUTE_ACTIVE",
                                        "description": "Routes the flow file to the \"activeFailure\" relationship"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Cancel previous",
                                        "value": "CANCEL_PREVIOUS",
                                        "description": "Cancels the actived water mark of any previous flow file, reactivates the water mark for the next flow file, and routes it to the \"success\" relationship.  Any in-flight flow file with pending commits will be ignored in favor of the newly routed flow file "
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Yield Count": {
                            "name": "Max Yield Count",
                            "displayName": "Max Yield Count",
                            "description": "The maximum number of yields/penalizations, if the yield strategy is selected, that should be attempted before failures to obtain a high-water mark are handled according to the \"Max Yield Count Strategy\" setting (handling never occurs if unset or less than zero)",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Initial Value": {
                            "name": "Initial Value",
                            "displayName": "Initial Value",
                            "description": "The initial value for the water mark if none currently exists for the feed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "4336a740-9b6c-3172-7f90-d32f80c800c6",
                "name": "Database",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "4336a740-9b6c-3172-7f90-d32f80c800c6",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "Database",
                    "type": "LoadHighWaterMark",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "a02a9ce8-61b0-376f-1aa9-9a3ee991e45a",
            "uri": "https://localhost:8179/nifi-api/processors/a02a9ce8-61b0-376f-1aa9-9a3ee991e45a",
            "position": {
                "x": 1129.854893075466,
                "y": 240.36730191487368
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "a02a9ce8-61b0-376f-1aa9-9a3ee991e45a",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 1129.854893075466,
                    "y": 240.36730191487368
                },
                "name": "Fetch RDBMS Data",
                "type": "com.thinkbiganalytics.nifi.v2.ingest.GetTableData",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#3cff00"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "nodata",
                        "description": "Successful but no new data to process.",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Successfully relationship.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Source Database Connection": "adc4634a-0163-1000-81d8-40e5bab304cb",
                        "Metadata Service": "adc39d7a-0163-1000-5739-f8ab47ad267f",
                        "System feed category": "${metadata.category.systemName}",
                        "System feed name": "${metadata.systemFeedName}",
                        "Source Table": "${metadata.table.sourceTableSchema.name}",
                        "Source Fields": "${metadata.table.sourceFields}",
                        "Load Strategy": "FULL_LOAD",
                        "High-Water Mark Property Name": "water.mark",
                        "Date Field": null,
                        "Overlap Period": "300 seconds",
                        "Max Wait Time": "0 seconds",
                        "Backoff Period": "300 seconds",
                        "Minimum Time Unit": "NONE",
                        "Output Type": "DELIMITED",
                        "Output Delimiter": ","
                    },
                    "descriptors": {
                        "Source Database Connection": {
                            "name": "Source Database Connection",
                            "displayName": "Source Database Connection",
                            "description": "The database where the source table resides",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo MySQL",
                                        "value": "14a2aaca-6d30-3e3f-eee0-07c32c1d16de"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo MySQL",
                                        "value": "adc4634a-0163-1000-81d8-40e5bab304cb"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source Table": {
                            "name": "Source Table",
                            "displayName": "Source Table",
                            "description": "Name of table including schema (if applicable)",
                            "defaultValue": "${metadata.table.sourceTableSchema.name}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source Fields": {
                            "name": "Source Fields",
                            "displayName": "Source Fields",
                            "description": "Field names (in order) to read from the source table. ie. the select fields. The format is separated by newline. Inconsistent order will cause corruption of the downstream Hive data.",
                            "defaultValue": "${metadata.table.sourceFields}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Load Strategy": {
                            "name": "Load Strategy",
                            "displayName": "Load Strategy",
                            "description": "Whether to load the entire table or perform an incremental extract",
                            "defaultValue": "FULL_LOAD",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "FULL_LOAD",
                                        "value": "FULL_LOAD"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "INCREMENTAL",
                                        "value": "INCREMENTAL"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "High-Water Mark Property Name": {
                            "name": "High-Water Mark Property Name",
                            "displayName": "High-Water Mark Property Name",
                            "description": "Name of the flow file attribute that should contain the current hig-water mark date, and which this processor will update with new values.  Required if the load strategy is set to INCREMENTAL.",
                            "defaultValue": "high.water.date",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Date Field": {
                            "name": "Date Field",
                            "displayName": "Date Field",
                            "description": "Source field containing a modified date for tracking incremental load",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Overlap Period": {
                            "name": "Overlap Period",
                            "displayName": "Overlap Period",
                            "description": "Amount of time to overlap into the last load date to ensure long running transactions missed by previous load weren't missed. Recommended: >0s",
                            "defaultValue": "0 seconds",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Wait Time": {
                            "name": "Max Wait Time",
                            "displayName": "Max Wait Time",
                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.",
                            "defaultValue": "0 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Backoff Period": {
                            "name": "Backoff Period",
                            "displayName": "Backoff Period",
                            "description": "Only records older than the backoff period will be eligible for pickup. This can be used in the ILM use case to define a retention period. Recommended: >5m",
                            "defaultValue": "300 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum Time Unit": {
                            "name": "Minimum Time Unit",
                            "displayName": "Minimum Time Unit",
                            "description": "The minimum unit of data eligible to load. For the ILM case, this would be DAY, WEEK, MONTH, YEAR , zero means there is no limit. Max time less than 1 second will be equal to zero.",
                            "defaultValue": "NONE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "NONE",
                                        "value": "NONE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "HOUR",
                                        "value": "HOUR"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DAY",
                                        "value": "DAY"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "WEEK",
                                        "value": "WEEK"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "MONTH",
                                        "value": "MONTH"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "YEAR",
                                        "value": "YEAR"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Output Type": {
                            "name": "Output Type",
                            "displayName": "Output Type",
                            "description": "How should the results be returned.  Either a Delimited output such as CSV, or AVRO.  If delimited you must specify the delimiter.",
                            "defaultValue": "DELIMITED",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DELIMITED",
                                        "value": "DELIMITED"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AVRO",
                                        "value": "AVRO"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Output Delimiter": {
                            "name": "Output Delimiter",
                            "displayName": "Output Delimiter",
                            "description": "Used only if the Output Type is 'Delimited'.  If this is empty and the Output Type is delimited it will default to a ','.  This property is not used if the Output Type is AVRO.",
                            "defaultValue": ",",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "a02a9ce8-61b0-376f-1aa9-9a3ee991e45a",
                "name": "Fetch RDBMS Data",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "a02a9ce8-61b0-376f-1aa9-9a3ee991e45a",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "Fetch RDBMS Data",
                    "type": "GetTableData",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 300,
                    "tasksDurationNanos": 28547195,
                    "tasks": "300",
                    "tasksDuration": "00:00:00.028",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "fa8eb667-d08c-3873-cca7-fa25d6f6eb07",
            "uri": "https://localhost:8179/nifi-api/processors/fa8eb667-d08c-3873-cca7-fa25d6f6eb07",
            "position": {
                "x": 1243.8905284345851,
                "y": 1406.126205818593
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "fa8eb667-d08c-3873-cca7-fa25d6f6eb07",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 1243.8905284345851,
                    "y": 1406.126205818593
                },
                "name": "Route If Data To Be Indexed",
                "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "IndexColumns",
                        "description": "",
                        "autoTerminate": false
                    },
                    {
                        "name": "unmatched",
                        "description": "FlowFiles that do not match any user-define expression will be routed here",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Routing Strategy": "Route to Property name",
                        "IndexColumns": "${metadata.table.fieldIndexString:isEmpty():not()}"
                    },
                    "descriptors": {
                        "Routing Strategy": {
                            "name": "Routing Strategy",
                            "displayName": "Routing Strategy",
                            "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                            "defaultValue": "Route to Property name",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to Property name",
                                        "value": "Route to Property name",
                                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if all match",
                                        "value": "Route to 'match' if all match",
                                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if any matches",
                                        "value": "Route to 'match' if any matches",
                                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "IndexColumns": {
                            "name": "IndexColumns",
                            "displayName": "IndexColumns",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "fa8eb667-d08c-3873-cca7-fa25d6f6eb07",
                "name": "Route If Data To Be Indexed",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "fa8eb667-d08c-3873-cca7-fa25d6f6eb07",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Route If Data To Be Indexed",
                    "type": "RouteOnAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "86aed799-be54-34fb-03f2-eb71837094ea",
            "uri": "https://localhost:8179/nifi-api/processors/86aed799-be54-34fb-03f2-eb71837094ea",
            "position": {
                "x": 482.5220584116687,
                "y": 1059.2837036372548
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "86aed799-be54-34fb-03f2-eb71837094ea",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 482.5220584116687,
                    "y": 1059.2837036372548
                },
                "name": "SFTP",
                "type": "org.apache.nifi.processors.standard.GetSFTP",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Hostname": null,
                        "Port": "22",
                        "Username": null,
                        "Password": null,
                        "Private Key Path": null,
                        "Private Key Passphrase": null,
                        "Remote Path": null,
                        "File Filter Regex": null,
                        "Path Filter Regex": null,
                        "Polling Interval": "60 sec",
                        "Search Recursively": "false",
                        "Ignore Dotted Files": "true",
                        "Delete Original": "true",
                        "Connection Timeout": "30 sec",
                        "Data Timeout": "30 sec",
                        "Host Key File": null,
                        "Max Selects": "100",
                        "Remote Poll Batch Size": "5000",
                        "Strict Host Key Checking": "false",
                        "Send Keep Alive On Timeout": "true",
                        "Use Compression": "false",
                        "Use Natural Ordering": "false"
                    },
                    "descriptors": {
                        "Hostname": {
                            "name": "Hostname",
                            "displayName": "Hostname",
                            "description": "The fully qualified hostname or IP address of the remote system",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Port": {
                            "name": "Port",
                            "displayName": "Port",
                            "description": "The port that the remote system is listening on for file transfers",
                            "defaultValue": "22",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Username": {
                            "name": "Username",
                            "displayName": "Username",
                            "description": "Username",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "Password for the user account",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Private Key Path": {
                            "name": "Private Key Path",
                            "displayName": "Private Key Path",
                            "description": "The fully qualified path to the Private Key file",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Private Key Passphrase": {
                            "name": "Private Key Passphrase",
                            "displayName": "Private Key Passphrase",
                            "description": "Password for the private key",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Remote Path": {
                            "name": "Remote Path",
                            "displayName": "Remote Path",
                            "description": "The path on the remote system from which to pull or push files",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter Regex": {
                            "name": "File Filter Regex",
                            "displayName": "File Filter Regex",
                            "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter Regex": {
                            "name": "Path Filter Regex",
                            "displayName": "Path Filter Regex",
                            "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Determines how long to wait between fetching the listing for new files",
                            "defaultValue": "60 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Search Recursively": {
                            "name": "Search Recursively",
                            "displayName": "Search Recursively",
                            "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Dotted Files": {
                            "name": "Ignore Dotted Files",
                            "displayName": "Ignore Dotted Files",
                            "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Delete Original": {
                            "name": "Delete Original",
                            "displayName": "Delete Original",
                            "description": "Determines whether or not the file is deleted from the remote system after it has been successfully transferred",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Connection Timeout": {
                            "name": "Connection Timeout",
                            "displayName": "Connection Timeout",
                            "description": "Amount of time to wait before timing out while creating a connection",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Data Timeout": {
                            "name": "Data Timeout",
                            "displayName": "Data Timeout",
                            "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Host Key File": {
                            "name": "Host Key File",
                            "displayName": "Host Key File",
                            "description": "If supplied, the given file will be used as the Host Key; otherwise, no use host key file will be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Selects": {
                            "name": "Max Selects",
                            "displayName": "Max Selects",
                            "description": "The maximum number of files to pull in a single connection",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Poll Batch Size": {
                            "name": "Remote Poll Batch Size",
                            "displayName": "Remote Poll Batch Size",
                            "description": "The value specifies how many file paths to find in a given directory on the remote system when doing a file listing. This value in general should not need to be modified but when polling against a remote system with a tremendous number of files this value can be critical.  Setting this value too high can result very poor performance and setting it too low can cause the flow to be slower than normal.",
                            "defaultValue": "5000",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Strict Host Key Checking": {
                            "name": "Strict Host Key Checking",
                            "displayName": "Strict Host Key Checking",
                            "description": "Indicates whether or not strict enforcement of hosts keys should be applied",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Send Keep Alive On Timeout": {
                            "name": "Send Keep Alive On Timeout",
                            "displayName": "Send Keep Alive On Timeout",
                            "description": "Indicates whether or not to send a single Keep Alive message when SSH socket times out",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Compression": {
                            "name": "Use Compression",
                            "displayName": "Use Compression",
                            "description": "Indicates whether or not ZLIB compression should be used when transferring files",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Natural Ordering": {
                            "name": "Use Natural Ordering",
                            "displayName": "Use Natural Ordering",
                            "description": "If true, will pull files in the order in which they are naturally listed; otherwise, the order in which the files will be pulled is not defined",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "86aed799-be54-34fb-03f2-eb71837094ea",
                "name": "SFTP",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "86aed799-be54-34fb-03f2-eb71837094ea",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "SFTP",
                    "type": "GetSFTP",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "8626d2e9-0894-32e6-2fb3-b2cea677848d",
            "uri": "https://localhost:8179/nifi-api/processors/8626d2e9-0894-32e6-2fb3-b2cea677848d",
            "position": {
                "x": 10,
                "y": 916.7689598309134
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "8626d2e9-0894-32e6-2fb3-b2cea677848d",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 10,
                    "y": 916.7689598309134
                },
                "name": "Blob Azure",
                "type": "org.apache.nifi.processors.azure.storage.ListAzureBlobStorage",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-azure-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": false,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "container-name": null,
                        "storage-sas-token": null,
                        "storage-account-name": null,
                        "storage-account-key": null,
                        "prefix": null
                    },
                    "descriptors": {
                        "container-name": {
                            "name": "container-name",
                            "displayName": "Container Name",
                            "description": "Name of the Azure storage container",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-sas-token": {
                            "name": "storage-sas-token",
                            "displayName": "SAS Token",
                            "description": "Shared Access Signature token, including the leading '?'. Specify either SAS Token (recommended) or Account Key. There are certain risks in allowing the SAS token to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-name": {
                            "name": "storage-account-name",
                            "displayName": "Storage Account Name",
                            "description": "The storage account name.  There are certain risks in allowing the account name to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": true,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-key": {
                            "name": "storage-account-key",
                            "displayName": "Storage Account Key",
                            "description": "The storage account key. This is an admin-like password providing access to every container in this account. It is recommended one uses Shared Access Signature (SAS) token instead for fine-grained control with policies. There are certain risks in allowing the account key to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account key to be fetched dynamically from a flow file attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "prefix": {
                            "name": "prefix",
                            "displayName": "Prefix",
                            "description": "Search prefix for listing",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "8626d2e9-0894-32e6-2fb3-b2cea677848d",
                "name": "Blob Azure",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "8626d2e9-0894-32e6-2fb3-b2cea677848d",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "Blob Azure",
                    "type": "ListAzureBlobStorage",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "b7271804-8587-3db7-a641-776f66f907bd",
            "uri": "https://localhost:8179/nifi-api/processors/b7271804-8587-3db7-a641-776f66f907bd",
            "position": {
                "x": 1127.1487774900197,
                "y": 10
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "b7271804-8587-3db7-a641-776f66f907bd",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 1127.1487774900197,
                    "y": 10
                },
                "name": "Failed - Release Highwater Mark",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.ReleaseHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#f21308"
                },
                "relationships": [
                    {
                        "name": "cancelledWaterMark",
                        "description": "The active water mark for the flowfile was cancelled",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "adc39d7a-0163-1000-5739-f8ab47ad267f",
                        "System feed category": "${metadata.category.systemName}",
                        "System feed name": "${metadata.systemFeedName}",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Mode": "REJECT",
                        "Release All": "true"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Mode": {
                            "name": "Mode",
                            "displayName": "Mode",
                            "description": "Indicates whether this processor should commit or reject high-water mark updates",
                            "defaultValue": "COMMIT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Commit",
                                        "value": "COMMIT",
                                        "description": "Commits the updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Reject",
                                        "value": "REJECT",
                                        "description": "Rejects any updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Release All": {
                            "name": "Release All",
                            "displayName": "Release All",
                            "description": "If true, commits or rolls back all pending high-water marks.  Otherwise, commits/rolls back only the named water mark property.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "b7271804-8587-3db7-a641-776f66f907bd",
                "name": "Failed - Release Highwater Mark",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "b7271804-8587-3db7-a641-776f66f907bd",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "Failed - Release Highwater Mark",
                    "type": "ReleaseHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "f9f22217-3769-3f69-9390-dc2c41150989",
            "uri": "https://localhost:8179/nifi-api/processors/f9f22217-3769-3f69-9390-dc2c41150989",
            "position": {
                "x": 617.7675979174637,
                "y": 1186.4590624024204
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "f9f22217-3769-3f69-9390-dc2c41150989",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 617.7675979174637,
                    "y": 1186.4590624024204
                },
                "name": "Validate And Split Records",
                "type": "com.thinkbiganalytics.nifi.v2.spark.ExecuteSparkJob",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-spark-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#2bff05"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Spark execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Successful result.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "ApplicationJAR": "${nifi.kylo.applicationJarDirectory}/kylo-spark-validate-cleanse-jar-with-dependencies.jar",
                        "Extra JARs": "/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar",
                        "MainClass": "com.thinkbiganalytics.spark.datavalidator.Validator",
                        "MainArgs": "${category},${feed},${feedts},${table_field_policy_json_file}",
                        "SparkMaster": "local",
                        "Spark YARN Deploy Mode": null,
                        "SparkHome": "/usr/lib/spark2",
                        "Spark Process Timeout": "1 hr",
                        "Driver Memory": "1024m",
                        "Executor Memory": "512m",
                        "Number of Executors": "1",
                        "Spark Application Name": "Validator",
                        "Executor Cores": "1",
                        "Network Timeout": "120s",
                        "Hadoop Configuration Resources": null,
                        "Kerberos Principal": null,
                        "Kerberos Keytab": null,
                        "Yarn Queue": null,
                        "Spark Configurations": null,
                        "Extra Files": null,
                        "Data Sources": null,
                        "Metadata Service": null
                    },
                    "descriptors": {
                        "ApplicationJAR": {
                            "name": "ApplicationJAR",
                            "displayName": "ApplicationJAR",
                            "description": "Path to the JAR file containing the Spark job application",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Extra JARs": {
                            "name": "Extra JARs",
                            "displayName": "Extra JARs",
                            "description": "A file or a list of files separated by comma which should be added to the class path",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "MainClass": {
                            "name": "MainClass",
                            "displayName": "MainClass",
                            "description": "Qualified classname of the Spark job application class",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "MainArgs": {
                            "name": "MainArgs",
                            "displayName": "MainArgs",
                            "description": "Comma separated arguments to be passed into the main as args",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SparkMaster": {
                            "name": "SparkMaster",
                            "displayName": "SparkMaster",
                            "description": "The Spark master",
                            "defaultValue": "local",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark YARN Deploy Mode": {
                            "name": "Spark YARN Deploy Mode",
                            "displayName": "Spark YARN Deploy Mode",
                            "description": "The deploy mode for YARN master (client, cluster). Only applicable for yarn mode. NOTE: Please ensure that you have not set this in your application.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SparkHome": {
                            "name": "SparkHome",
                            "displayName": "SparkHome",
                            "description": "Path to the Spark Client directory",
                            "defaultValue": "/usr/hdp/current/spark-client",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Process Timeout": {
                            "name": "Spark Process Timeout",
                            "displayName": "Spark Process Timeout",
                            "description": "Time to wait for successful completion of Spark process. Routes to failure if Spark process runs for longer than expected here",
                            "defaultValue": "1 hr",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Driver Memory": {
                            "name": "Driver Memory",
                            "displayName": "Driver Memory",
                            "description": "How much RAM to allocate to the driver",
                            "defaultValue": "512m",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Executor Memory": {
                            "name": "Executor Memory",
                            "displayName": "Executor Memory",
                            "description": "How much RAM to allocate to the executor",
                            "defaultValue": "512m",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Number of Executors": {
                            "name": "Number of Executors",
                            "displayName": "Number of Executors",
                            "description": "The number of exectors to be used",
                            "defaultValue": "1",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Application Name": {
                            "name": "Spark Application Name",
                            "displayName": "Spark Application Name",
                            "description": "The name of the spark application",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Executor Cores": {
                            "name": "Executor Cores",
                            "displayName": "Executor Cores",
                            "description": "The number of executor cores to be used",
                            "defaultValue": "1",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Network Timeout": {
                            "name": "Network Timeout",
                            "displayName": "Network Timeout",
                            "description": "Default timeout for all network interactions. This config will be used in place of spark.core.connection.ack.wait.timeout, spark.akka.timeout, spark.storage.blockManagerSlaveTimeoutMs, spark.shuffle.io.connectionTimeout, spark.rpc.askTimeout or spark.rpc.lookupTimeout if they are not configured.",
                            "defaultValue": "120s",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Yarn Queue": {
                            "name": "Yarn Queue",
                            "displayName": "Yarn Queue",
                            "description": "Optional Yarn Queue",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Configurations": {
                            "name": "Spark Configurations",
                            "displayName": "Spark Configurations",
                            "description": "Pipe separated arguments to be passed into the Spark as configurations i.e <CONF1>=<VALUE1>|<CONF2>=<VALUE2>..",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Extra Files": {
                            "name": "Extra Files",
                            "displayName": "Extra Files",
                            "description": "Comma separated file paths to be passed to the Spark Executors",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Data Sources": {
                            "name": "Data Sources",
                            "displayName": "Data Sources",
                            "description": "A comma-separated list of data source ids to include in the environment for Spark.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Kylo metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 10,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "f9f22217-3769-3f69-9390-dc2c41150989",
                "name": "Validate And Split Records",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "f9f22217-3769-3f69-9390-dc2c41150989",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Validate And Split Records",
                    "type": "ExecuteSparkJob",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "0f0c569d-f761-3fd0-4a94-9a58f7a48240",
            "uri": "https://localhost:8179/nifi-api/processors/0f0c569d-f761-3fd0-4a94-9a58f7a48240",
            "position": {
                "x": 1752.136631493926,
                "y": 236.4176025390625
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "0f0c569d-f761-3fd0-4a94-9a58f7a48240",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 1752.136631493926,
                    "y": 236.4176025390625
                },
                "name": "No Data - Release Highwater Mark",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.ReleaseHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#f21308"
                },
                "relationships": [
                    {
                        "name": "cancelledWaterMark",
                        "description": "The active water mark for the flowfile was cancelled",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "toy_store",
                        "System feed name": "products",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Mode": "COMMIT",
                        "Release All": "true"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Mode": {
                            "name": "Mode",
                            "displayName": "Mode",
                            "description": "Indicates whether this processor should commit or reject high-water mark updates",
                            "defaultValue": "COMMIT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Commit",
                                        "value": "COMMIT",
                                        "description": "Commits the updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Reject",
                                        "value": "REJECT",
                                        "description": "Rejects any updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Release All": {
                            "name": "Release All",
                            "displayName": "Release All",
                            "description": "If true, commits or rolls back all pending high-water marks.  Otherwise, commits/rolls back only the named water mark property.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "0f0c569d-f761-3fd0-4a94-9a58f7a48240",
                "name": "No Data - Release Highwater Mark",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "0f0c569d-f761-3fd0-4a94-9a58f7a48240",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "No Data - Release Highwater Mark",
                    "type": "ReleaseHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "218ba11d-c71c-37cc-4ac5-a2568c71a14b",
            "uri": "https://localhost:8179/nifi-api/processors/218ba11d-c71c-37cc-4ac5-a2568c71a14b",
            "position": {
                "x": 1127.9087415437643,
                "y": 471.12646810005026
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "218ba11d-c71c-37cc-4ac5-a2568c71a14b",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 1127.9087415437643,
                    "y": 471.12646810005026
                },
                "name": "Initialize Feed Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Do not store state",
                        "Stateful Variables Initial Value": "",
                        "archiveId": "${now():format('yyyyMMddHHmmss')}_${UUID()}",
                        "category": "concerts",
                        "feed": "events",
                        "hdfs.archive.root": "/archive",
                        "hdfs.ingest.root": "/etl",
                        "hive.ingest.root": "/model.db",
                        "hive.master.root": "/app/warehouse",
                        "hive.profile.root": "/model.db",
                        "kylo.tmp.baseFolder": "/tmp/kylo-nifi",
                        "metadata.table.feedFieldStructure": "eventid|int||0|0|0|eventid\nvenueid|int||0|0|0|venueid\ncatid|int||0|0|0|catid\ndateid|int||0|0|0|dateid\neventname|string||0|0|0|eventname\nstarttime|string||0|0|0|starttime",
                        "metadata.table.feedFormat": "ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'\n WITH SERDEPROPERTIES ( 'separatorChar' = ',' ,'escapeChar' = '\\\\' ,'quoteChar' = '\\\"') STORED AS TEXTFILE",
                        "metadata.table.feedTblProperties": "${metadata.table.feedTblProperties}",
                        "metadata.table.fieldIndexString": "eventid,venueid,eventname,starttime",
                        "metadata.table.fieldPoliciesJson": "[{\"profile\":true,\"index\":true,\"fieldName\":\"eventid\",\"feedFieldName\":\"eventid\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":true,\"fieldName\":\"venueid\",\"feedFieldName\":\"venueid\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"catid\",\"feedFieldName\":\"catid\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"dateid\",\"feedFieldName\":\"dateid\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":true,\"fieldName\":\"eventname\",\"feedFieldName\":\"eventname\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":true,\"fieldName\":\"starttime\",\"feedFieldName\":\"starttime\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false}]",
                        "metadata.table.fieldStructure": "eventid|int||0|0|0|eventid\nvenueid|int||0|0|0|venueid\ncatid|int||0|0|0|catid\ndateid|int||0|0|0|dateid\neventname|string||0|0|0|eventname\nstarttime|string||0|0|0|starttime",
                        "metadata.table.targetFormat": "STORED AS ORC",
                        "metadata.table.targetMergeStrategy": "DEDUPE_AND_MERGE",
                        "nifi.home": "/opt/nifi",
                        "nifi.kylo.applicationJarDirectory": "/opt/nifi/current/lib/app",
                        "savepoint.id": "${UUID()}",
                        "skipHeader": "true",
                        "spark.input_folder": "/tmp/kylo-nifi/spark"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "archiveId": {
                            "name": "archiveId",
                            "displayName": "archiveId",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "category": {
                            "name": "category",
                            "displayName": "category",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "feed": {
                            "name": "feed",
                            "displayName": "feed",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.archive.root": {
                            "name": "hdfs.archive.root",
                            "displayName": "hdfs.archive.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "kylo.tmp.baseFolder": {
                            "name": "kylo.tmp.baseFolder",
                            "displayName": "kylo.tmp.baseFolder",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedFieldStructure": {
                            "name": "metadata.table.feedFieldStructure",
                            "displayName": "metadata.table.feedFieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedFormat": {
                            "name": "metadata.table.feedFormat",
                            "displayName": "metadata.table.feedFormat",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedTblProperties": {
                            "name": "metadata.table.feedTblProperties",
                            "displayName": "metadata.table.feedTblProperties",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldIndexString": {
                            "name": "metadata.table.fieldIndexString",
                            "displayName": "metadata.table.fieldIndexString",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldPoliciesJson": {
                            "name": "metadata.table.fieldPoliciesJson",
                            "displayName": "metadata.table.fieldPoliciesJson",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldStructure": {
                            "name": "metadata.table.fieldStructure",
                            "displayName": "metadata.table.fieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetFormat": {
                            "name": "metadata.table.targetFormat",
                            "displayName": "metadata.table.targetFormat",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetMergeStrategy": {
                            "name": "metadata.table.targetMergeStrategy",
                            "displayName": "metadata.table.targetMergeStrategy",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.home": {
                            "name": "nifi.home",
                            "displayName": "nifi.home",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.kylo.applicationJarDirectory": {
                            "name": "nifi.kylo.applicationJarDirectory",
                            "displayName": "nifi.kylo.applicationJarDirectory",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "savepoint.id": {
                            "name": "savepoint.id",
                            "displayName": "savepoint.id",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "skipHeader": {
                            "name": "skipHeader",
                            "displayName": "skipHeader",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "spark.input_folder": {
                            "name": "spark.input_folder",
                            "displayName": "spark.input_folder",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "218ba11d-c71c-37cc-4ac5-a2568c71a14b",
                "name": "Initialize Feed Parameters",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "218ba11d-c71c-37cc-4ac5-a2568c71a14b",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "Initialize Feed Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "ed9c7261-da8d-3bfc-e4f5-7024dab545b1",
            "uri": "https://localhost:8179/nifi-api/processors/ed9c7261-da8d-3bfc-e4f5-7024dab545b1",
            "position": {
                "x": 2128.6089265841365,
                "y": 2085.836308700712
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "ed9c7261-da8d-3bfc-e4f5-7024dab545b1",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 2128.6089265841365,
                    "y": 2085.836308700712
                },
                "name": "Profile Data",
                "type": "com.thinkbiganalytics.nifi.v2.spark.ExecuteSparkJob",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-spark-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#0a70f5"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Spark execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Successful result.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "ApplicationJAR": "${nifi.kylo.applicationJarDirectory}/kylo-spark-job-profiler-jar-with-dependencies.jar",
                        "Extra JARs": null,
                        "MainClass": "com.thinkbiganalytics.spark.dataprofiler.core.Profiler",
                        "MainArgs": "table,${category}.${feed}_valid,10,${category}.${feed}_profile,${table_field_policy_json_file},${feedts}",
                        "SparkMaster": "local",
                        "Spark YARN Deploy Mode": null,
                        "SparkHome": "/usr/lib/spark2",
                        "Spark Process Timeout": "1 hr",
                        "Driver Memory": "1024m",
                        "Executor Memory": "512m",
                        "Number of Executors": "1",
                        "Spark Application Name": "Profiler",
                        "Executor Cores": "1",
                        "Network Timeout": "120s",
                        "Hadoop Configuration Resources": null,
                        "Kerberos Principal": null,
                        "Kerberos Keytab": null,
                        "Yarn Queue": null,
                        "Spark Configurations": null,
                        "Extra Files": null,
                        "Data Sources": null,
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                    },
                    "descriptors": {
                        "ApplicationJAR": {
                            "name": "ApplicationJAR",
                            "displayName": "ApplicationJAR",
                            "description": "Path to the JAR file containing the Spark job application",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Extra JARs": {
                            "name": "Extra JARs",
                            "displayName": "Extra JARs",
                            "description": "A file or a list of files separated by comma which should be added to the class path",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "MainClass": {
                            "name": "MainClass",
                            "displayName": "MainClass",
                            "description": "Qualified classname of the Spark job application class",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "MainArgs": {
                            "name": "MainArgs",
                            "displayName": "MainArgs",
                            "description": "Comma separated arguments to be passed into the main as args",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SparkMaster": {
                            "name": "SparkMaster",
                            "displayName": "SparkMaster",
                            "description": "The Spark master",
                            "defaultValue": "local",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark YARN Deploy Mode": {
                            "name": "Spark YARN Deploy Mode",
                            "displayName": "Spark YARN Deploy Mode",
                            "description": "The deploy mode for YARN master (client, cluster). Only applicable for yarn mode. NOTE: Please ensure that you have not set this in your application.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SparkHome": {
                            "name": "SparkHome",
                            "displayName": "SparkHome",
                            "description": "Path to the Spark Client directory",
                            "defaultValue": "/usr/hdp/current/spark-client",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Process Timeout": {
                            "name": "Spark Process Timeout",
                            "displayName": "Spark Process Timeout",
                            "description": "Time to wait for successful completion of Spark process. Routes to failure if Spark process runs for longer than expected here",
                            "defaultValue": "1 hr",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Driver Memory": {
                            "name": "Driver Memory",
                            "displayName": "Driver Memory",
                            "description": "How much RAM to allocate to the driver",
                            "defaultValue": "512m",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Executor Memory": {
                            "name": "Executor Memory",
                            "displayName": "Executor Memory",
                            "description": "How much RAM to allocate to the executor",
                            "defaultValue": "512m",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Number of Executors": {
                            "name": "Number of Executors",
                            "displayName": "Number of Executors",
                            "description": "The number of exectors to be used",
                            "defaultValue": "1",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Application Name": {
                            "name": "Spark Application Name",
                            "displayName": "Spark Application Name",
                            "description": "The name of the spark application",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Executor Cores": {
                            "name": "Executor Cores",
                            "displayName": "Executor Cores",
                            "description": "The number of executor cores to be used",
                            "defaultValue": "1",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Network Timeout": {
                            "name": "Network Timeout",
                            "displayName": "Network Timeout",
                            "description": "Default timeout for all network interactions. This config will be used in place of spark.core.connection.ack.wait.timeout, spark.akka.timeout, spark.storage.blockManagerSlaveTimeoutMs, spark.shuffle.io.connectionTimeout, spark.rpc.askTimeout or spark.rpc.lookupTimeout if they are not configured.",
                            "defaultValue": "120s",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Yarn Queue": {
                            "name": "Yarn Queue",
                            "displayName": "Yarn Queue",
                            "description": "Optional Yarn Queue",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Configurations": {
                            "name": "Spark Configurations",
                            "displayName": "Spark Configurations",
                            "description": "Pipe separated arguments to be passed into the Spark as configurations i.e <CONF1>=<VALUE1>|<CONF2>=<VALUE2>..",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Extra Files": {
                            "name": "Extra Files",
                            "displayName": "Extra Files",
                            "description": "Comma separated file paths to be passed to the Spark Executors",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Data Sources": {
                            "name": "Data Sources",
                            "displayName": "Data Sources",
                            "description": "A comma-separated list of data source ids to include in the environment for Spark.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Kylo metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 10,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "ed9c7261-da8d-3bfc-e4f5-7024dab545b1",
                "name": "Profile Data",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "ed9c7261-da8d-3bfc-e4f5-7024dab545b1",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Profile Data",
                    "type": "ExecuteSparkJob",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 2
            },
            "id": "e06da61b-3a0c-30d4-a938-3db20d5d559e",
            "uri": "https://localhost:8179/nifi-api/processors/e06da61b-3a0c-30d4-a938-3db20d5d559e",
            "position": {
                "x": 10,
                "y": 241.04846845100292
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "e06da61b-3a0c-30d4-a938-3db20d5d559e",
                "parentGroupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "position": {
                    "x": 10,
                    "y": 241.04846845100292
                },
                "name": "Database",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.LoadHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "activeFailure",
                        "description": "The water mark is actively being processed and has not yet been committed or rejected",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "ca8970fd-8aa1-3623-714f-75df4705e3eb",
                        "System feed category": "website",
                        "System feed name": "testing_multi_b",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Active Water Mark Strategy": "YIELD",
                        "Max Yield Count Strategy": "CANCEL_PREVIOUS",
                        "Max Yield Count": "20",
                        "Initial Value": "1970-01-01T00:00:00"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Active Water Mark Strategy": {
                            "name": "Active Water Mark Strategy",
                            "displayName": "Active Water Mark Strategy",
                            "description": "Specifies what strategy should be followed when an attempt to obtain the latest high-water mark fails because another flow file is already actively using it",
                            "defaultValue": "YIELD",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Yield",
                                        "value": "YIELD",
                                        "description": "Yield the processor so that another attempt to obtain the high-water mark can be made later."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Penalize",
                                        "value": "PENALIZE",
                                        "description": "Penalize the flow file and return it to the queue that it came from so that another attempt to obtain the high-water mark can be made later.  Behaves the same as \"Yield\" if this processor is the first one in the flow."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route",
                                        "value": "ROUTE",
                                        "description": "Route immediately to the \"activeFailure\" relationship."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Yield Count Strategy": {
                            "name": "Max Yield Count Strategy",
                            "displayName": "Max Yield Count Strategy",
                            "description": "Specifies what strategy should be followed when the maximum yield count (if used) is reached",
                            "defaultValue": "CANCEL_PREVIOUS",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to activeFailure",
                                        "value": "ROUTE_ACTIVE",
                                        "description": "Routes the flow file to the \"activeFailure\" relationship"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Cancel previous",
                                        "value": "CANCEL_PREVIOUS",
                                        "description": "Cancels the actived water mark of any previous flow file, reactivates the water mark for the next flow file, and routes it to the \"success\" relationship.  Any in-flight flow file with pending commits will be ignored in favor of the newly routed flow file "
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Yield Count": {
                            "name": "Max Yield Count",
                            "displayName": "Max Yield Count",
                            "description": "The maximum number of yields/penalizations, if the yield strategy is selected, that should be attempted before failures to obtain a high-water mark are handled according to the \"Max Yield Count Strategy\" setting (handling never occurs if unset or less than zero)",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Initial Value": {
                            "name": "Initial Value",
                            "displayName": "Initial Value",
                            "description": "The initial value for the water mark if none currently exists for the feed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "30 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "id": "e06da61b-3a0c-30d4-a938-3db20d5d559e",
                "name": "Database",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "e06da61b-3a0c-30d4-a938-3db20d5d559e",
                    "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                    "name": "Database",
                    "type": "LoadHighWaterMark",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "ec85ab12-3f72-382b-baee-76dc3d8fb647",
            "uri": "https://localhost:8179/nifi-api/processors/ec85ab12-3f72-382b-baee-76dc3d8fb647",
            "position": {
                "x": 480.61680814094143,
                "y": 1210.0718685985066
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "ec85ab12-3f72-382b-baee-76dc3d8fb647",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 480.61680814094143,
                    "y": 1210.0718685985066
                },
                "name": "FTP",
                "type": "org.apache.nifi.processors.standard.GetFTP",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Hostname": null,
                        "Port": "21",
                        "Username": null,
                        "Password": null,
                        "Connection Mode": "Passive",
                        "Transfer Mode": "Binary",
                        "Remote Path": null,
                        "File Filter Regex": null,
                        "Path Filter Regex": null,
                        "Polling Interval": "60 sec",
                        "Search Recursively": "false",
                        "Ignore Dotted Files": "true",
                        "Delete Original": "true",
                        "Connection Timeout": "30 sec",
                        "Data Timeout": "30 sec",
                        "Max Selects": "100",
                        "Remote Poll Batch Size": "5000",
                        "Use Natural Ordering": "false",
                        "Proxy Type": "DIRECT",
                        "Proxy Host": null,
                        "Proxy Port": null,
                        "Http Proxy Username": null,
                        "Http Proxy Password": null,
                        "Internal Buffer Size": "16KB",
                        "ftp-use-utf8": "false"
                    },
                    "descriptors": {
                        "Hostname": {
                            "name": "Hostname",
                            "displayName": "Hostname",
                            "description": "The fully qualified hostname or IP address of the remote system",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Port": {
                            "name": "Port",
                            "displayName": "Port",
                            "description": "The port that the remote system is listening on for file transfers",
                            "defaultValue": "21",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Username": {
                            "name": "Username",
                            "displayName": "Username",
                            "description": "Username",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "Password for the user account",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Connection Mode": {
                            "name": "Connection Mode",
                            "displayName": "Connection Mode",
                            "description": "The FTP Connection Mode",
                            "defaultValue": "Passive",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Active",
                                        "value": "Active"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Passive",
                                        "value": "Passive"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Transfer Mode": {
                            "name": "Transfer Mode",
                            "displayName": "Transfer Mode",
                            "description": "The FTP Transfer Mode",
                            "defaultValue": "Binary",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Binary",
                                        "value": "Binary"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ASCII",
                                        "value": "ASCII"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Path": {
                            "name": "Remote Path",
                            "displayName": "Remote Path",
                            "description": "The path on the remote system from which to pull or push files",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter Regex": {
                            "name": "File Filter Regex",
                            "displayName": "File Filter Regex",
                            "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter Regex": {
                            "name": "Path Filter Regex",
                            "displayName": "Path Filter Regex",
                            "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Determines how long to wait between fetching the listing for new files",
                            "defaultValue": "60 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Search Recursively": {
                            "name": "Search Recursively",
                            "displayName": "Search Recursively",
                            "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Dotted Files": {
                            "name": "Ignore Dotted Files",
                            "displayName": "Ignore Dotted Files",
                            "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Delete Original": {
                            "name": "Delete Original",
                            "displayName": "Delete Original",
                            "description": "Determines whether or not the file is deleted from the remote system after it has been successfully transferred",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Connection Timeout": {
                            "name": "Connection Timeout",
                            "displayName": "Connection Timeout",
                            "description": "Amount of time to wait before timing out while creating a connection",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Data Timeout": {
                            "name": "Data Timeout",
                            "displayName": "Data Timeout",
                            "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Selects": {
                            "name": "Max Selects",
                            "displayName": "Max Selects",
                            "description": "The maximum number of files to pull in a single connection",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Poll Batch Size": {
                            "name": "Remote Poll Batch Size",
                            "displayName": "Remote Poll Batch Size",
                            "description": "The value specifies how many file paths to find in a given directory on the remote system when doing a file listing. This value in general should not need to be modified but when polling against a remote system with a tremendous number of files this value can be critical.  Setting this value too high can result very poor performance and setting it too low can cause the flow to be slower than normal.",
                            "defaultValue": "5000",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Natural Ordering": {
                            "name": "Use Natural Ordering",
                            "displayName": "Use Natural Ordering",
                            "description": "If true, will pull files in the order in which they are naturally listed; otherwise, the order in which the files will be pulled is not defined",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Type": {
                            "name": "Proxy Type",
                            "displayName": "Proxy Type",
                            "description": "Proxy type used for file transfers",
                            "defaultValue": "DIRECT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DIRECT",
                                        "value": "DIRECT"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "HTTP",
                                        "value": "HTTP"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SOCKS",
                                        "value": "SOCKS"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "The fully qualified hostname or IP address of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Port": {
                            "name": "Proxy Port",
                            "displayName": "Proxy Port",
                            "description": "The port of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Http Proxy Username": {
                            "name": "Http Proxy Username",
                            "displayName": "Http Proxy Username",
                            "description": "Http Proxy Username",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Http Proxy Password": {
                            "name": "Http Proxy Password",
                            "displayName": "Http Proxy Password",
                            "description": "Http Proxy Password",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Internal Buffer Size": {
                            "name": "Internal Buffer Size",
                            "displayName": "Internal Buffer Size",
                            "description": "Set the internal buffer size for buffered data streams",
                            "defaultValue": "16KB",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "ftp-use-utf8": {
                            "name": "ftp-use-utf8",
                            "displayName": "Use UTF-8 Encoding",
                            "description": "Tells the client to use UTF-8 encoding when processing files and filenames. If set to true, the server must also support UTF-8 encoding.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "ec85ab12-3f72-382b-baee-76dc3d8fb647",
                "name": "FTP",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "ec85ab12-3f72-382b-baee-76dc3d8fb647",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "FTP",
                    "type": "GetFTP",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "a3548654-4bda-30ef-6164-e4a4b9f41ce0",
            "uri": "https://localhost:8179/nifi-api/processors/a3548654-4bda-30ef-6164-e4a4b9f41ce0",
            "position": {
                "x": 475.60957200335906,
                "y": 241.04846845100292
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "a3548654-4bda-30ef-6164-e4a4b9f41ce0",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 475.60957200335906,
                    "y": 241.04846845100292
                },
                "name": "Database",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.LoadHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "activeFailure",
                        "description": "The water mark is actively being processed and has not yet been committed or rejected",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "toy_store",
                        "System feed name": "products",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Active Water Mark Strategy": "YIELD",
                        "Max Yield Count Strategy": "CANCEL_PREVIOUS",
                        "Max Yield Count": "50",
                        "Initial Value": "1970-01-01T00:00:00"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Active Water Mark Strategy": {
                            "name": "Active Water Mark Strategy",
                            "displayName": "Active Water Mark Strategy",
                            "description": "Specifies what strategy should be followed when an attempt to obtain the latest high-water mark fails because another flow file is already actively using it",
                            "defaultValue": "YIELD",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Yield",
                                        "value": "YIELD",
                                        "description": "Yield the processor so that another attempt to obtain the high-water mark can be made later."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Penalize",
                                        "value": "PENALIZE",
                                        "description": "Penalize the flow file and return it to the queue that it came from so that another attempt to obtain the high-water mark can be made later.  Behaves the same as \"Yield\" if this processor is the first one in the flow."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route",
                                        "value": "ROUTE",
                                        "description": "Route immediately to the \"activeFailure\" relationship."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Yield Count Strategy": {
                            "name": "Max Yield Count Strategy",
                            "displayName": "Max Yield Count Strategy",
                            "description": "Specifies what strategy should be followed when the maximum yield count (if used) is reached",
                            "defaultValue": "CANCEL_PREVIOUS",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to activeFailure",
                                        "value": "ROUTE_ACTIVE",
                                        "description": "Routes the flow file to the \"activeFailure\" relationship"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Cancel previous",
                                        "value": "CANCEL_PREVIOUS",
                                        "description": "Cancels the actived water mark of any previous flow file, reactivates the water mark for the next flow file, and routes it to the \"success\" relationship.  Any in-flight flow file with pending commits will be ignored in favor of the newly routed flow file "
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Yield Count": {
                            "name": "Max Yield Count",
                            "displayName": "Max Yield Count",
                            "description": "The maximum number of yields/penalizations, if the yield strategy is selected, that should be attempted before failures to obtain a high-water mark are handled according to the \"Max Yield Count Strategy\" setting (handling never occurs if unset or less than zero)",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Initial Value": {
                            "name": "Initial Value",
                            "displayName": "Initial Value",
                            "description": "The initial value for the water mark if none currently exists for the feed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "5 days",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "a3548654-4bda-30ef-6164-e4a4b9f41ce0",
                "name": "Database",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "a3548654-4bda-30ef-6164-e4a4b9f41ce0",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "Database",
                    "type": "LoadHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a4be7746-0165-1000-4a18-11c1909e5d4e",
                "version": 2
            },
            "id": "92702e1a-2eb7-35b8-cf2f-eb72a94dc657",
            "uri": "https://localhost:8179/nifi-api/processors/92702e1a-2eb7-35b8-cf2f-eb72a94dc657",
            "position": {
                "x": 569.6230282551005,
                "y": 1588.3544228086384
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "92702e1a-2eb7-35b8-cf2f-eb72a94dc657",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 569.6230282551005,
                    "y": 1588.3544228086384
                },
                "name": "Auto Retry Savepoint",
                "type": "com.thinkbiganalytics.nifi.v2.savepoint.TriggerSavepoint",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles will be routed to this relationship if the route_to_failure property is true or an error occurs",
                        "autoTerminate": true
                    },
                    {
                        "name": "max retries",
                        "description": "FlowFiles that exceeded maximum retries are routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "A successful operation will result in FlowFile on this relationship",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "savepoint-service": "520f2529-14b8-37bb-57d5-8f2da65b5e93",
                        "savepoint-id": "${savepoint.id}",
                        "behavior": "RETRY",
                        "max-retries": "3"
                    },
                    "descriptors": {
                        "savepoint-service": {
                            "name": "savepoint-service",
                            "displayName": "Savepoint service",
                            "description": "The Controller Service used to manage retry and release signals for savepoints.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "adc39cd8-0163-1000-9c83-676226a01aa6"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.core.savepoint.SavepointController",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "savepoint-id": {
                            "name": "savepoint-id",
                            "displayName": "Savepoint Id",
                            "description": "A value, or the results of an Attribute Expression Language statement, which will be evaluated against a FlowFile in order to determine the savepoint key",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "behavior": {
                            "name": "behavior",
                            "displayName": "Behavior",
                            "description": "The behavior to apply to the setpoint",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "RETRY",
                                        "value": "RETRY"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "RELEASE",
                                        "value": "RELEASE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "FAIL",
                                        "value": "FAIL"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "max-retries": {
                            "name": "max-retries",
                            "displayName": "Max Retries",
                            "description": "Maximum number of retries before flowfile is routed to failure.",
                            "defaultValue": "10",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 2000,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "92702e1a-2eb7-35b8-cf2f-eb72a94dc657",
                "name": "Auto Retry Savepoint",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "92702e1a-2eb7-35b8-cf2f-eb72a94dc657",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Auto Retry Savepoint",
                    "type": "TriggerSavepoint",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "abbaf1ec-af98-3722-7c5b-87f78222f4c6",
            "uri": "https://localhost:8179/nifi-api/processors/abbaf1ec-af98-3722-7c5b-87f78222f4c6",
            "position": {
                "x": 475.60957200335906,
                "y": 241.04846845100292
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "abbaf1ec-af98-3722-7c5b-87f78222f4c6",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 475.60957200335906,
                    "y": 241.04846845100292
                },
                "name": "Database",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.LoadHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "activeFailure",
                        "description": "The water mark is actively being processed and has not yet been committed or rejected",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "2129b859-70ec-317b-0000-000000000000",
                        "System feed category": "concerts",
                        "System feed name": "venues",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Active Water Mark Strategy": "YIELD",
                        "Max Yield Count Strategy": "CANCEL_PREVIOUS",
                        "Max Yield Count": "50",
                        "Initial Value": "1970-01-01T00:00:00"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Active Water Mark Strategy": {
                            "name": "Active Water Mark Strategy",
                            "displayName": "Active Water Mark Strategy",
                            "description": "Specifies what strategy should be followed when an attempt to obtain the latest high-water mark fails because another flow file is already actively using it",
                            "defaultValue": "YIELD",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Yield",
                                        "value": "YIELD",
                                        "description": "Yield the processor so that another attempt to obtain the high-water mark can be made later."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Penalize",
                                        "value": "PENALIZE",
                                        "description": "Penalize the flow file and return it to the queue that it came from so that another attempt to obtain the high-water mark can be made later.  Behaves the same as \"Yield\" if this processor is the first one in the flow."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route",
                                        "value": "ROUTE",
                                        "description": "Route immediately to the \"activeFailure\" relationship."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Yield Count Strategy": {
                            "name": "Max Yield Count Strategy",
                            "displayName": "Max Yield Count Strategy",
                            "description": "Specifies what strategy should be followed when the maximum yield count (if used) is reached",
                            "defaultValue": "CANCEL_PREVIOUS",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to activeFailure",
                                        "value": "ROUTE_ACTIVE",
                                        "description": "Routes the flow file to the \"activeFailure\" relationship"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Cancel previous",
                                        "value": "CANCEL_PREVIOUS",
                                        "description": "Cancels the actived water mark of any previous flow file, reactivates the water mark for the next flow file, and routes it to the \"success\" relationship.  Any in-flight flow file with pending commits will be ignored in favor of the newly routed flow file "
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Yield Count": {
                            "name": "Max Yield Count",
                            "displayName": "Max Yield Count",
                            "description": "The maximum number of yields/penalizations, if the yield strategy is selected, that should be attempted before failures to obtain a high-water mark are handled according to the \"Max Yield Count Strategy\" setting (handling never occurs if unset or less than zero)",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Initial Value": {
                            "name": "Initial Value",
                            "displayName": "Initial Value",
                            "description": "The initial value for the water mark if none currently exists for the feed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "abbaf1ec-af98-3722-7c5b-87f78222f4c6",
                "name": "Database",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "abbaf1ec-af98-3722-7c5b-87f78222f4c6",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "Database",
                    "type": "LoadHighWaterMark",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "4dbd8188-d01a-3b1f-b8dd-646c94330081",
            "uri": "https://localhost:8179/nifi-api/processors/4dbd8188-d01a-3b1f-b8dd-646c94330081",
            "position": {
                "x": 677.4852474104159,
                "y": 751.238353971758
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "4dbd8188-d01a-3b1f-b8dd-646c94330081",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 677.4852474104159,
                    "y": 751.238353971758
                },
                "name": "Hash Data (Elasticsearch)",
                "type": "org.apache.nifi.processors.standard.HashContent",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Any FlowFile that cannot be processed successfully will be sent to this relationship without any attribute being added",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "FlowFiles that are process successfully will be sent to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Hash Attribute Name": "hash.value",
                        "Hash Algorithm": "MD5"
                    },
                    "descriptors": {
                        "Hash Attribute Name": {
                            "name": "Hash Attribute Name",
                            "displayName": "Hash Attribute Name",
                            "description": "The name of the FlowFile Attribute into which the Hash Value should be written. If the value already exists, it will be overwritten",
                            "defaultValue": "hash.value",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Hash Algorithm": {
                            "name": "Hash Algorithm",
                            "displayName": "Hash Algorithm",
                            "description": "Determines what hashing algorithm should be used to perform the hashing function",
                            "defaultValue": "MD5",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "SHA-1",
                                        "value": "SHA-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SHA-384",
                                        "value": "SHA-384"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-512-256",
                                        "value": "SKEIN-512-256"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-1024-384",
                                        "value": "SKEIN-1024-384"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BLAKE2B-160",
                                        "value": "BLAKE2B-160"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SHA",
                                        "value": "SHA"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "KECCAK-288",
                                        "value": "KECCAK-288"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "WHIRLPOOL",
                                        "value": "WHIRLPOOL"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-512-384",
                                        "value": "SKEIN-512-384"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SHA-224",
                                        "value": "SHA-224"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SM3",
                                        "value": "SM3"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BLAKE2B-512",
                                        "value": "BLAKE2B-512"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "GOST3411-2012-512",
                                        "value": "GOST3411-2012-512"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "KECCAK-256",
                                        "value": "KECCAK-256"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-512-128",
                                        "value": "SKEIN-512-128"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BLAKE2B-384",
                                        "value": "BLAKE2B-384"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-256-160",
                                        "value": "SKEIN-256-160"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "OID.2.16.840.1.101.3.4.2.10",
                                        "value": "OID.2.16.840.1.101.3.4.2.10"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DSTU7564-256",
                                        "value": "DSTU7564-256"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SHA-256",
                                        "value": "SHA-256"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BLAKE2S-224",
                                        "value": "BLAKE2S-224"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SHA3-256",
                                        "value": "SHA3-256"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "KECCAK-384",
                                        "value": "KECCAK-384"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-256-128",
                                        "value": "SKEIN-256-128"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DSTU7564-384",
                                        "value": "DSTU7564-384"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "KECCAK-224",
                                        "value": "KECCAK-224"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-512-512",
                                        "value": "SKEIN-512-512"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-1024-512",
                                        "value": "SKEIN-1024-512"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-512-160",
                                        "value": "SKEIN-512-160"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "OID.1.2.804.2.1.1.1.1.2.2.3",
                                        "value": "OID.1.2.804.2.1.1.1.1.2.2.3"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "GOST3411",
                                        "value": "GOST3411"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "1.2.804.2.1.1.1.1.2.2.3",
                                        "value": "1.2.804.2.1.1.1.1.2.2.3"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BLAKE2B-256",
                                        "value": "BLAKE2B-256"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "OID.1.2.804.2.1.1.1.1.2.2.2",
                                        "value": "OID.1.2.804.2.1.1.1.1.2.2.2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-1024-1024",
                                        "value": "SKEIN-1024-1024"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "OID.1.2.804.2.1.1.1.1.2.2.1",
                                        "value": "OID.1.2.804.2.1.1.1.1.2.2.1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SHA3-384",
                                        "value": "SHA3-384"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "OID.2.16.840.1.101.3.4.2.9",
                                        "value": "OID.2.16.840.1.101.3.4.2.9"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BLAKE2S-256",
                                        "value": "BLAKE2S-256"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SHA-512/224",
                                        "value": "SHA-512/224"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "OID.2.16.840.1.101.3.4.2.8",
                                        "value": "OID.2.16.840.1.101.3.4.2.8"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "OID.2.16.840.1.101.3.4.2.7",
                                        "value": "OID.2.16.840.1.101.3.4.2.7"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "TIGER",
                                        "value": "TIGER"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "RIPEMD256",
                                        "value": "RIPEMD256"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-256-256",
                                        "value": "SKEIN-256-256"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SHA3-224",
                                        "value": "SHA3-224"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SHA3-512",
                                        "value": "SHA3-512"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "RIPEMD320",
                                        "value": "RIPEMD320"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "2.16.840.1.101.3.4.2.9",
                                        "value": "2.16.840.1.101.3.4.2.9"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "RIPEMD160",
                                        "value": "RIPEMD160"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "GOST3411-2012-256",
                                        "value": "GOST3411-2012-256"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "2.16.840.1.101.3.4.2.8",
                                        "value": "2.16.840.1.101.3.4.2.8"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "1.2.804.2.1.1.1.1.2.2.1",
                                        "value": "1.2.804.2.1.1.1.1.2.2.1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "KECCAK-512",
                                        "value": "KECCAK-512"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-512-224",
                                        "value": "SKEIN-512-224"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "2.16.840.1.101.3.4.2.7",
                                        "value": "2.16.840.1.101.3.4.2.7"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "1.2.804.2.1.1.1.1.2.2.2",
                                        "value": "1.2.804.2.1.1.1.1.2.2.2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "2.16.840.1.101.3.4.2.10",
                                        "value": "2.16.840.1.101.3.4.2.10"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BLAKE2S-160",
                                        "value": "BLAKE2S-160"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SHA-512/256",
                                        "value": "SHA-512/256"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "MD2",
                                        "value": "MD2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "RIPEMD128",
                                        "value": "RIPEMD128"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "MD4",
                                        "value": "MD4"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SHA-512",
                                        "value": "SHA-512"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SKEIN-256-224",
                                        "value": "SKEIN-256-224"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "MD5",
                                        "value": "MD5"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BLAKE2S-128",
                                        "value": "BLAKE2S-128"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DSTU7564-512",
                                        "value": "DSTU7564-512"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "4dbd8188-d01a-3b1f-b8dd-646c94330081",
                "name": "Hash Data (Elasticsearch)",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "4dbd8188-d01a-3b1f-b8dd-646c94330081",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Hash Data (Elasticsearch)",
                    "type": "HashContent",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "fc8c23ea-c3c2-3817-489b-f091a56d0315",
            "uri": "https://localhost:8179/nifi-api/processors/fc8c23ea-c3c2-3817-489b-f091a56d0315",
            "position": {
                "x": 617.0457486084633,
                "y": 953.5186452969319
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "fc8c23ea-c3c2-3817-489b-f091a56d0315",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 617.0457486084633,
                    "y": 953.5186452969319
                },
                "name": "RouteOnAttribute",
                "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#2bff05"
                },
                "relationships": [
                    {
                        "name": "ProfileColumns",
                        "description": "",
                        "autoTerminate": false
                    },
                    {
                        "name": "unmatched",
                        "description": "FlowFiles that do not match any user-define expression will be routed here",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Routing Strategy": "Route to Property name",
                        "ProfileColumns": "${table_field_policy_json_file:isEmpty():not()}"
                    },
                    "descriptors": {
                        "Routing Strategy": {
                            "name": "Routing Strategy",
                            "displayName": "Routing Strategy",
                            "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                            "defaultValue": "Route to Property name",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to Property name",
                                        "value": "Route to Property name",
                                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if all match",
                                        "value": "Route to 'match' if all match",
                                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if any matches",
                                        "value": "Route to 'match' if any matches",
                                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "ProfileColumns": {
                            "name": "ProfileColumns",
                            "displayName": "ProfileColumns",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "fc8c23ea-c3c2-3817-489b-f091a56d0315",
                "name": "RouteOnAttribute",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "fc8c23ea-c3c2-3817-489b-f091a56d0315",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "RouteOnAttribute",
                    "type": "RouteOnAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 3
            },
            "id": "86372a36-29fc-3eda-116b-ca2183fa865b",
            "uri": "https://localhost:8179/nifi-api/processors/86372a36-29fc-3eda-116b-ca2183fa865b",
            "position": {
                "x": 1264.793905193692,
                "y": 235.0592041015625
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "86372a36-29fc-3eda-116b-ca2183fa865b",
                "parentGroupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "position": {
                    "x": 1264.793905193692,
                    "y": 235.0592041015625
                },
                "name": "No Data - Release Highwater Mark",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.ReleaseHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#f21308"
                },
                "relationships": [
                    {
                        "name": "cancelledWaterMark",
                        "description": "The active water mark for the flowfile was cancelled",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "website",
                        "System feed name": "testing_multi_b",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Mode": "COMMIT",
                        "Release All": "true"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Mode": {
                            "name": "Mode",
                            "displayName": "Mode",
                            "description": "Indicates whether this processor should commit or reject high-water mark updates",
                            "defaultValue": "COMMIT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Commit",
                                        "value": "COMMIT",
                                        "description": "Commits the updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Reject",
                                        "value": "REJECT",
                                        "description": "Rejects any updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Release All": {
                            "name": "Release All",
                            "displayName": "Release All",
                            "description": "If true, commits or rolls back all pending high-water marks.  Otherwise, commits/rolls back only the named water mark property.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "id": "86372a36-29fc-3eda-116b-ca2183fa865b",
                "name": "No Data - Release Highwater Mark",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "86372a36-29fc-3eda-116b-ca2183fa865b",
                    "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                    "name": "No Data - Release Highwater Mark",
                    "type": "ReleaseHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a4be7746-0165-1000-4a18-11c1909e5d4e",
                "version": 3
            },
            "id": "d0f4c7da-125e-348a-58a2-ebb0ca6b037f",
            "uri": "https://localhost:8179/nifi-api/processors/d0f4c7da-125e-348a-58a2-ebb0ca6b037f",
            "position": {
                "x": 963.3484268033026,
                "y": 638.4382881662168
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "d0f4c7da-125e-348a-58a2-ebb0ca6b037f",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 963.3484268033026,
                    "y": 638.4382881662168
                },
                "name": "Archive Originals",
                "type": "org.apache.nifi.processors.hadoop.PutHDFS",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-hadoop-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#e6f205"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Hadoop Configuration Resources": "/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml",
                        "kerberos-credentials-service": "618a3674-0165-1000-3e4e-f6dfd8dff05f",
                        "Kerberos Principal": null,
                        "Kerberos Keytab": null,
                        "Kerberos Relogin Period": "4 hours",
                        "Additional Classpath Resources": null,
                        "Directory": "${hdfs.archive.root}/${category}/${feed}/${archiveId}",
                        "Conflict Resolution Strategy": "fail",
                        "Block Size": null,
                        "IO Buffer Size": null,
                        "Replication": null,
                        "Permissions umask": null,
                        "Remote Owner": null,
                        "Remote Group": null,
                        "Compression codec": "BZIP"
                    },
                    "descriptors": {
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration. To use swebhdfs, see 'Additional Details' section of PutHDFS's documentation.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "kerberos-credentials-service": {
                            "name": "kerberos-credentials-service",
                            "displayName": "Kerberos Credentials Service",
                            "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "KeytabCredentialsService",
                                        "value": "618a3674-0165-1000-3e4e-f6dfd8dff05f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Kerberos Relogin Period": {
                            "name": "Kerberos Relogin Period",
                            "displayName": "Kerberos Relogin Period",
                            "description": "Period of time which should pass before attempting a kerberos relogin.\n\nThis property has been deprecated, and has no effect on processing. Relogins now occur automatically.",
                            "defaultValue": "4 hours",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Additional Classpath Resources": {
                            "name": "Additional Classpath Resources",
                            "displayName": "Additional Classpath Resources",
                            "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Directory": {
                            "name": "Directory",
                            "displayName": "Directory",
                            "description": "The parent HDFS directory to which files should be written. The directory will be created if it doesn't exist.",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Conflict Resolution Strategy": {
                            "name": "Conflict Resolution Strategy",
                            "displayName": "Conflict Resolution Strategy",
                            "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                            "defaultValue": "fail",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "replace",
                                        "value": "replace",
                                        "description": "Replaces the existing file if any."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ignore",
                                        "value": "ignore",
                                        "description": "Ignores the flow file and routes it to success."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "fail",
                                        "value": "fail",
                                        "description": "Penalizes the flow file and routes it to failure."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "append",
                                        "value": "append",
                                        "description": "Appends to the existing file if any, creates a new file otherwise."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Block Size": {
                            "name": "Block Size",
                            "displayName": "Block Size",
                            "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "IO Buffer Size": {
                            "name": "IO Buffer Size",
                            "displayName": "IO Buffer Size",
                            "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Replication": {
                            "name": "Replication",
                            "displayName": "Replication",
                            "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Permissions umask": {
                            "name": "Permissions umask",
                            "displayName": "Permissions umask",
                            "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Owner": {
                            "name": "Remote Owner",
                            "displayName": "Remote Owner",
                            "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Remote Group": {
                            "name": "Remote Group",
                            "displayName": "Remote Group",
                            "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Compression codec": {
                            "name": "Compression codec",
                            "displayName": "Compression codec",
                            "description": "",
                            "defaultValue": "NONE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "NONE",
                                        "value": "NONE",
                                        "description": "No compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DEFAULT",
                                        "value": "DEFAULT",
                                        "description": "Default ZLIB compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BZIP",
                                        "value": "BZIP",
                                        "description": "BZIP compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "GZIP",
                                        "value": "GZIP",
                                        "description": "GZIP compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "LZ4",
                                        "value": "LZ4",
                                        "description": "LZ4 compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "LZO",
                                        "value": "LZO",
                                        "description": "LZO compression - it assumes LD_LIBRARY_PATH has been set and jar is available"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SNAPPY",
                                        "value": "SNAPPY",
                                        "description": "Snappy compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AUTOMATIC",
                                        "value": "AUTOMATIC",
                                        "description": "Will attempt to automatically detect the compression codec."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 10,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "d0f4c7da-125e-348a-58a2-ebb0ca6b037f",
                "name": "Archive Originals",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "d0f4c7da-125e-348a-58a2-ebb0ca6b037f",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Archive Originals",
                    "type": "PutHDFS",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "438ec0ae-5333-3e1f-1056-03691ced701f",
            "uri": "https://localhost:8179/nifi-api/processors/438ec0ae-5333-3e1f-1056-03691ced701f",
            "position": {
                "x": 10,
                "y": 916.7689598309134
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "438ec0ae-5333-3e1f-1056-03691ced701f",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 10,
                    "y": 916.7689598309134
                },
                "name": "Blob Azure",
                "type": "org.apache.nifi.processors.azure.storage.ListAzureBlobStorage",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-azure-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": false,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "container-name": null,
                        "storage-sas-token": null,
                        "storage-account-name": null,
                        "storage-account-key": null,
                        "prefix": null
                    },
                    "descriptors": {
                        "container-name": {
                            "name": "container-name",
                            "displayName": "Container Name",
                            "description": "Name of the Azure storage container",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-sas-token": {
                            "name": "storage-sas-token",
                            "displayName": "SAS Token",
                            "description": "Shared Access Signature token, including the leading '?'. Specify either SAS Token (recommended) or Account Key. There are certain risks in allowing the SAS token to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-name": {
                            "name": "storage-account-name",
                            "displayName": "Storage Account Name",
                            "description": "The storage account name.  There are certain risks in allowing the account name to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": true,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-key": {
                            "name": "storage-account-key",
                            "displayName": "Storage Account Key",
                            "description": "The storage account key. This is an admin-like password providing access to every container in this account. It is recommended one uses Shared Access Signature (SAS) token instead for fine-grained control with policies. There are certain risks in allowing the account key to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account key to be fetched dynamically from a flow file attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "prefix": {
                            "name": "prefix",
                            "displayName": "Prefix",
                            "description": "Search prefix for listing",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "438ec0ae-5333-3e1f-1056-03691ced701f",
                "name": "Blob Azure",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "438ec0ae-5333-3e1f-1056-03691ced701f",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "Blob Azure",
                    "type": "ListAzureBlobStorage",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "c1a61096-9c4f-3b7e-a744-2486ba56e260",
            "uri": "https://localhost:8179/nifi-api/processors/c1a61096-9c4f-3b7e-a744-2486ba56e260",
            "position": {
                "x": 484.6596097638876,
                "y": 1379.7242560733466
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "c1a61096-9c4f-3b7e-a744-2486ba56e260",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 484.6596097638876,
                    "y": 1379.7242560733466
                },
                "name": "REST Service",
                "type": "org.apache.nifi.processors.standard.InvokeHTTP",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "Failure",
                        "description": "The original FlowFile will be routed on any type of connection failure, timeout or general exception. It will have new attributes detailing the request.",
                        "autoTerminate": true
                    },
                    {
                        "name": "No Retry",
                        "description": "The original FlowFile will be routed on any status code that should NOT be retried (1xx, 3xx, 4xx status codes).  It will have new attributes detailing the request.",
                        "autoTerminate": true
                    },
                    {
                        "name": "Original",
                        "description": "The original FlowFile will be routed upon success (2xx status codes). It will have new attributes detailing the success of the request.",
                        "autoTerminate": true
                    },
                    {
                        "name": "Response",
                        "description": "A Response FlowFile will be routed upon success (2xx status codes). If the 'Output Response Regardless' property is true then the response will be sent to this relationship regardless of the status code received.",
                        "autoTerminate": false
                    },
                    {
                        "name": "Retry",
                        "description": "The original FlowFile will be routed on any status code that can be retried (5xx status codes). It will have new attributes detailing the request.",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "HTTP Method": "GET",
                        "Remote URL": null,
                        "SSL Context Service": null,
                        "Connection Timeout": "5 secs",
                        "Read Timeout": "15 secs",
                        "Include Date Header": "True",
                        "Follow Redirects": "True",
                        "Attributes to Send": null,
                        "Basic Authentication Username": null,
                        "Basic Authentication Password": null,
                        "Proxy Host": null,
                        "Proxy Port": null,
                        "Proxy Type": "http",
                        "invokehttp-proxy-user": null,
                        "invokehttp-proxy-password": null,
                        "Put Response Body In Attribute": null,
                        "Max Length To Put In Attribute": "256",
                        "Digest Authentication": "false",
                        "Always Output Response": "false",
                        "Trusted Hostname": null,
                        "Add Response Headers to Request": "false",
                        "Content-Type": "${mime.type}",
                        "send-message-body": "true",
                        "Use Chunked Encoding": "false",
                        "Penalize on \"No Retry\"": "false",
                        "use-etag": "false",
                        "etag-max-cache-size": "10MB"
                    },
                    "descriptors": {
                        "HTTP Method": {
                            "name": "HTTP Method",
                            "displayName": "HTTP Method",
                            "description": "HTTP request method (GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS). Arbitrary methods are also supported. Methods other than POST, PUT and PATCH will be sent without a message body.",
                            "defaultValue": "GET",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Remote URL": {
                            "name": "Remote URL",
                            "displayName": "Remote URL",
                            "description": "Remote URL which will be connected to, including scheme, host, port, path.",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "The SSL Context Service used to provide client certificate information for TLS/SSL (https) connections. It is also used to connect to HTTPS Proxy.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Connection Timeout": {
                            "name": "Connection Timeout",
                            "displayName": "Connection Timeout",
                            "description": "Max wait time for connection to remote service.",
                            "defaultValue": "5 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Read Timeout": {
                            "name": "Read Timeout",
                            "displayName": "Read Timeout",
                            "description": "Max wait time for response from remote service.",
                            "defaultValue": "15 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Include Date Header": {
                            "name": "Include Date Header",
                            "displayName": "Include Date Header",
                            "description": "Include an RFC-2616 Date header in the request.",
                            "defaultValue": "True",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "True"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "False"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Follow Redirects": {
                            "name": "Follow Redirects",
                            "displayName": "Follow Redirects",
                            "description": "Follow HTTP redirects issued by remote server.",
                            "defaultValue": "True",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "True"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "False"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Attributes to Send": {
                            "name": "Attributes to Send",
                            "displayName": "Attributes to Send",
                            "description": "Regular expression that defines which attributes to send as HTTP headers in the request. If not defined, no attributes are sent as headers. Also any dynamic properties set will be sent as headers. The dynamic property key will be the header key and the dynamic property value will be interpreted as expression language will be the header value.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Basic Authentication Username": {
                            "name": "Basic Authentication Username",
                            "displayName": "Basic Authentication Username",
                            "description": "The username to be used by the client to authenticate against the Remote URL.  Cannot include control characters (0-31), ':', or DEL (127).",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Basic Authentication Password": {
                            "name": "Basic Authentication Password",
                            "displayName": "Basic Authentication Password",
                            "description": "The password to be used by the client to authenticate against the Remote URL.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "The fully qualified hostname or IP address of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Port": {
                            "name": "Proxy Port",
                            "displayName": "Proxy Port",
                            "description": "The port of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Type": {
                            "name": "Proxy Type",
                            "displayName": "Proxy Type",
                            "description": "The type of the proxy we are connecting to. Must be either http or https",
                            "defaultValue": "http",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "invokehttp-proxy-user": {
                            "name": "invokehttp-proxy-user",
                            "displayName": "Proxy Username",
                            "description": "Username to set when authenticating against proxy",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "invokehttp-proxy-password": {
                            "name": "invokehttp-proxy-password",
                            "displayName": "Proxy Password",
                            "description": "Password to set when authenticating against proxy",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Put Response Body In Attribute": {
                            "name": "Put Response Body In Attribute",
                            "displayName": "Put Response Body In Attribute",
                            "description": "If set, the response body received back will be put into an attribute of the original FlowFile instead of a separate FlowFile. The attribute key to put to is determined by evaluating value of this property. ",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Length To Put In Attribute": {
                            "name": "Max Length To Put In Attribute",
                            "displayName": "Max Length To Put In Attribute",
                            "description": "If routing the response body to an attribute of the original (by setting the \"Put response body in attribute\" property or by receiving an error status code), the number of characters put to the attribute value will be at most this amount. This is important because attributes are held in memory and large attributes will quickly cause out of memory issues. If the output goes longer than this value, it will be truncated to fit. Consider making this smaller if able.",
                            "defaultValue": "256",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Digest Authentication": {
                            "name": "Digest Authentication",
                            "displayName": "Use Digest Authentication",
                            "description": "Whether to communicate with the website using Digest Authentication. 'Basic Authentication Username' and 'Basic Authentication Password' are used for authentication.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Always Output Response": {
                            "name": "Always Output Response",
                            "displayName": "Always Output Response",
                            "description": "Will force a response FlowFile to be generated and routed to the 'Response' relationship regardless of what the server status code received is or if the processor is configured to put the server response body in the request attribute. In the later configuration a request FlowFile with the response body in the attribute and a typical response FlowFile will be emitted to their respective relationships.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Trusted Hostname": {
                            "name": "Trusted Hostname",
                            "displayName": "Trusted Hostname",
                            "description": "Bypass the normal truststore hostname verifier to allow the specified remote hostname as trusted. Enabling this property has MITM security implications, use wisely. Will still accept other connections based on the normal truststore hostname verifier. Only valid with SSL (HTTPS) connections.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Add Response Headers to Request": {
                            "name": "Add Response Headers to Request",
                            "displayName": "Add Response Headers to Request",
                            "description": "Enabling this property saves all the response headers to the original request. This may be when the response headers are needed but a response is not generated due to the status code received.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Content-Type": {
                            "name": "Content-Type",
                            "displayName": "Content-Type",
                            "description": "The Content-Type to specify for when content is being transmitted through a PUT, POST or PATCH. In the case of an empty value after evaluating an expression language expression, Content-Type defaults to application/octet-stream",
                            "defaultValue": "${mime.type}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "send-message-body": {
                            "name": "send-message-body",
                            "displayName": "Send Message Body",
                            "description": "If true, sends the HTTP message body on POST/PUT/PATCH requests (default).  If false, suppresses the message body and content-type header for these requests.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Chunked Encoding": {
                            "name": "Use Chunked Encoding",
                            "displayName": "Use Chunked Encoding",
                            "description": "When POST'ing, PUT'ing or PATCH'ing content set this property to true in order to not pass the 'Content-length' header and instead send 'Transfer-Encoding' with a value of 'chunked'. This will enable the data transfer mechanism which was introduced in HTTP 1.1 to pass data of unknown lengths in chunks.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Penalize on \"No Retry\"": {
                            "name": "Penalize on \"No Retry\"",
                            "displayName": "Penalize on \"No Retry\"",
                            "description": "Enabling this property will penalize FlowFiles that are routed to the \"No Retry\" relationship.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "use-etag": {
                            "name": "use-etag",
                            "displayName": "Use HTTP ETag",
                            "description": "Enable HTTP entity tag (ETag) support for HTTP requests.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "etag-max-cache-size": {
                            "name": "etag-max-cache-size",
                            "displayName": "Maximum ETag Cache Size",
                            "description": "The maximum size that the ETag cache should be allowed to grow to. The default size is 10MB.",
                            "defaultValue": "10MB",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "c1a61096-9c4f-3b7e-a744-2486ba56e260",
                "name": "REST Service",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "c1a61096-9c4f-3b7e-a744-2486ba56e260",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "REST Service",
                    "type": "InvokeHTTP",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "051d62e6-c58e-3219-7cc4-ad759bd246ce",
            "uri": "https://localhost:8179/nifi-api/processors/051d62e6-c58e-3219-7cc4-ad759bd246ce",
            "position": {
                "x": 1752.136631493926,
                "y": 236.4176025390625
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "051d62e6-c58e-3219-7cc4-ad759bd246ce",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 1752.136631493926,
                    "y": 236.4176025390625
                },
                "name": "No Data - Release Highwater Mark",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.ReleaseHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#f21308"
                },
                "relationships": [
                    {
                        "name": "cancelledWaterMark",
                        "description": "The active water mark for the flowfile was cancelled",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "concerts",
                        "System feed name": "venues",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Mode": "COMMIT",
                        "Release All": "true"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Mode": {
                            "name": "Mode",
                            "displayName": "Mode",
                            "description": "Indicates whether this processor should commit or reject high-water mark updates",
                            "defaultValue": "COMMIT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Commit",
                                        "value": "COMMIT",
                                        "description": "Commits the updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Reject",
                                        "value": "REJECT",
                                        "description": "Rejects any updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Release All": {
                            "name": "Release All",
                            "displayName": "Release All",
                            "description": "If true, commits or rolls back all pending high-water marks.  Otherwise, commits/rolls back only the named water mark property.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "051d62e6-c58e-3219-7cc4-ad759bd246ce",
                "name": "No Data - Release Highwater Mark",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "051d62e6-c58e-3219-7cc4-ad759bd246ce",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "No Data - Release Highwater Mark",
                    "type": "ReleaseHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "5563de11-dabd-3e0a-a92a-03d9b66a9d8d",
            "uri": "https://localhost:8179/nifi-api/processors/5563de11-dabd-3e0a-a92a-03d9b66a9d8d",
            "position": {
                "x": 1127.1487774900197,
                "y": 10
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "5563de11-dabd-3e0a-a92a-03d9b66a9d8d",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 1127.1487774900197,
                    "y": 10
                },
                "name": "Failed - Release Highwater Mark",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.ReleaseHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#f21308"
                },
                "relationships": [
                    {
                        "name": "cancelledWaterMark",
                        "description": "The active water mark for the flowfile was cancelled",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "toy_store",
                        "System feed name": "products",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Mode": "REJECT",
                        "Release All": "true"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Mode": {
                            "name": "Mode",
                            "displayName": "Mode",
                            "description": "Indicates whether this processor should commit or reject high-water mark updates",
                            "defaultValue": "COMMIT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Commit",
                                        "value": "COMMIT",
                                        "description": "Commits the updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Reject",
                                        "value": "REJECT",
                                        "description": "Rejects any updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Release All": {
                            "name": "Release All",
                            "displayName": "Release All",
                            "description": "If true, commits or rolls back all pending high-water marks.  Otherwise, commits/rolls back only the named water mark property.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "5563de11-dabd-3e0a-a92a-03d9b66a9d8d",
                "name": "Failed - Release Highwater Mark",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "5563de11-dabd-3e0a-a92a-03d9b66a9d8d",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "Failed - Release Highwater Mark",
                    "type": "ReleaseHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "7c25438d-4310-3a8c-349a-e5645a00977b",
            "uri": "https://localhost:8179/nifi-api/processors/7c25438d-4310-3a8c-349a-e5645a00977b",
            "position": {
                "x": 477.3463277278479,
                "y": 911.9318201342085
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "7c25438d-4310-3a8c-349a-e5645a00977b",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 477.3463277278479,
                    "y": 911.9318201342085
                },
                "name": "Fetch Azure BLOB",
                "type": "org.apache.nifi.processors.azure.storage.FetchAzureBlobStorage",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-azure-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Unsuccessful operations will be transferred to the failure relationship.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successfully processed FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "container-name": "${azure.container}",
                        "storage-sas-token": null,
                        "storage-account-name": null,
                        "storage-account-key": null,
                        "blob": "${azure.blobname}"
                    },
                    "descriptors": {
                        "container-name": {
                            "name": "container-name",
                            "displayName": "Container Name",
                            "description": "Name of the Azure storage container",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-sas-token": {
                            "name": "storage-sas-token",
                            "displayName": "SAS Token",
                            "description": "Shared Access Signature token, including the leading '?'. Specify either SAS Token (recommended) or Account Key. There are certain risks in allowing the SAS token to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-name": {
                            "name": "storage-account-name",
                            "displayName": "Storage Account Name",
                            "description": "The storage account name.  There are certain risks in allowing the account name to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": true,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-key": {
                            "name": "storage-account-key",
                            "displayName": "Storage Account Key",
                            "description": "The storage account key. This is an admin-like password providing access to every container in this account. It is recommended one uses Shared Access Signature (SAS) token instead for fine-grained control with policies. There are certain risks in allowing the account key to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account key to be fetched dynamically from a flow file attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "blob": {
                            "name": "blob",
                            "displayName": "Blob",
                            "description": "The filename of the blob",
                            "defaultValue": "${azure.blobname}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "validationErrors": [
                    "'Storage Account Name' is invalid because Storage Account Name is required"
                ],
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "7c25438d-4310-3a8c-349a-e5645a00977b",
                "name": "Fetch Azure BLOB",
                "runStatus": "Invalid",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "7c25438d-4310-3a8c-349a-e5645a00977b",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "Fetch Azure BLOB",
                    "type": "FetchAzureBlobStorage",
                    "runStatus": "Invalid",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "779d4aad-40cd-38c9-c3ec-5d0c1e3af1a8",
            "uri": "https://localhost:8179/nifi-api/processors/779d4aad-40cd-38c9-c3ec-5d0c1e3af1a8",
            "position": {
                "x": 1206.4221691768507,
                "y": 1358.5903981118263
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "779d4aad-40cd-38c9-c3ec-5d0c1e3af1a8",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 1206.4221691768507,
                    "y": 1358.5903981118263
                },
                "name": "TriggerCleanup",
                "type": "com.thinkbiganalytics.nifi.v2.metadata.TriggerCleanup",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "DISABLED",
                "style": {
                    "background-color": "#ff9900"
                },
                "relationships": [
                    {
                        "name": "Success",
                        "description": "Relationship followed on successful precondition event.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Feed Cleanup Event Service": "d791170d-8275-3f04-815c-05d79c0dc931",
                        "Metadata Provider Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "concerts",
                        "System feed name": "events"
                    },
                    "descriptors": {
                        "Feed Cleanup Event Service": {
                            "name": "Feed Cleanup Event Service",
                            "displayName": "Feed Cleanup Event Service",
                            "description": "Service that manages the cleanup of feeds.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Cleanup Service",
                                        "value": "adc464ec-0163-1000-c5ab-a6429af8c498"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Cleanup Service",
                                        "value": "d791170d-8275-3f04-815c-05d79c0dc931"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.cleanup.CleanupEventService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "Metadata Provider Service": {
                            "name": "Metadata Provider Service",
                            "displayName": "Metadata Provider Service",
                            "description": "Service supplying the implementations of the various metadata providers.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "The category name of this feed. The default is to have this name automatically set when the feed is created. Normally you do not need to change the default value.",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "The system name of this feed. The default is to have this name automatically set when the feed is created. Normally you do not need to change the default value.",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "779d4aad-40cd-38c9-c3ec-5d0c1e3af1a8",
                "name": "TriggerCleanup",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "779d4aad-40cd-38c9-c3ec-5d0c1e3af1a8",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "TriggerCleanup",
                    "type": "TriggerCleanup",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "c4260190-2932-3340-b91f-0e6548487083",
            "uri": "https://localhost:8179/nifi-api/processors/c4260190-2932-3340-b91f-0e6548487083",
            "position": {
                "x": 484.6596097638876,
                "y": 1379.7242560733466
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "c4260190-2932-3340-b91f-0e6548487083",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 484.6596097638876,
                    "y": 1379.7242560733466
                },
                "name": "REST Service",
                "type": "org.apache.nifi.processors.standard.InvokeHTTP",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "Failure",
                        "description": "The original FlowFile will be routed on any type of connection failure, timeout or general exception. It will have new attributes detailing the request.",
                        "autoTerminate": true
                    },
                    {
                        "name": "No Retry",
                        "description": "The original FlowFile will be routed on any status code that should NOT be retried (1xx, 3xx, 4xx status codes).  It will have new attributes detailing the request.",
                        "autoTerminate": true
                    },
                    {
                        "name": "Original",
                        "description": "The original FlowFile will be routed upon success (2xx status codes). It will have new attributes detailing the success of the request.",
                        "autoTerminate": true
                    },
                    {
                        "name": "Response",
                        "description": "A Response FlowFile will be routed upon success (2xx status codes). If the 'Output Response Regardless' property is true then the response will be sent to this relationship regardless of the status code received.",
                        "autoTerminate": false
                    },
                    {
                        "name": "Retry",
                        "description": "The original FlowFile will be routed on any status code that can be retried (5xx status codes). It will have new attributes detailing the request.",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "HTTP Method": "GET",
                        "Remote URL": null,
                        "SSL Context Service": null,
                        "Connection Timeout": "5 secs",
                        "Read Timeout": "15 secs",
                        "Include Date Header": "True",
                        "Follow Redirects": "True",
                        "Attributes to Send": null,
                        "Basic Authentication Username": null,
                        "Basic Authentication Password": null,
                        "Proxy Host": null,
                        "Proxy Port": null,
                        "Proxy Type": "http",
                        "invokehttp-proxy-user": null,
                        "invokehttp-proxy-password": null,
                        "Put Response Body In Attribute": null,
                        "Max Length To Put In Attribute": "256",
                        "Digest Authentication": "false",
                        "Always Output Response": "false",
                        "Trusted Hostname": null,
                        "Add Response Headers to Request": "false",
                        "Content-Type": "${mime.type}",
                        "send-message-body": "true",
                        "Use Chunked Encoding": "false",
                        "Penalize on \"No Retry\"": "false",
                        "use-etag": "false",
                        "etag-max-cache-size": "10MB"
                    },
                    "descriptors": {
                        "HTTP Method": {
                            "name": "HTTP Method",
                            "displayName": "HTTP Method",
                            "description": "HTTP request method (GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS). Arbitrary methods are also supported. Methods other than POST, PUT and PATCH will be sent without a message body.",
                            "defaultValue": "GET",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Remote URL": {
                            "name": "Remote URL",
                            "displayName": "Remote URL",
                            "description": "Remote URL which will be connected to, including scheme, host, port, path.",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "The SSL Context Service used to provide client certificate information for TLS/SSL (https) connections. It is also used to connect to HTTPS Proxy.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Connection Timeout": {
                            "name": "Connection Timeout",
                            "displayName": "Connection Timeout",
                            "description": "Max wait time for connection to remote service.",
                            "defaultValue": "5 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Read Timeout": {
                            "name": "Read Timeout",
                            "displayName": "Read Timeout",
                            "description": "Max wait time for response from remote service.",
                            "defaultValue": "15 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Include Date Header": {
                            "name": "Include Date Header",
                            "displayName": "Include Date Header",
                            "description": "Include an RFC-2616 Date header in the request.",
                            "defaultValue": "True",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "True"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "False"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Follow Redirects": {
                            "name": "Follow Redirects",
                            "displayName": "Follow Redirects",
                            "description": "Follow HTTP redirects issued by remote server.",
                            "defaultValue": "True",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "True"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "False"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Attributes to Send": {
                            "name": "Attributes to Send",
                            "displayName": "Attributes to Send",
                            "description": "Regular expression that defines which attributes to send as HTTP headers in the request. If not defined, no attributes are sent as headers. Also any dynamic properties set will be sent as headers. The dynamic property key will be the header key and the dynamic property value will be interpreted as expression language will be the header value.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Basic Authentication Username": {
                            "name": "Basic Authentication Username",
                            "displayName": "Basic Authentication Username",
                            "description": "The username to be used by the client to authenticate against the Remote URL.  Cannot include control characters (0-31), ':', or DEL (127).",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Basic Authentication Password": {
                            "name": "Basic Authentication Password",
                            "displayName": "Basic Authentication Password",
                            "description": "The password to be used by the client to authenticate against the Remote URL.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "The fully qualified hostname or IP address of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Port": {
                            "name": "Proxy Port",
                            "displayName": "Proxy Port",
                            "description": "The port of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Type": {
                            "name": "Proxy Type",
                            "displayName": "Proxy Type",
                            "description": "The type of the proxy we are connecting to. Must be either http or https",
                            "defaultValue": "http",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "invokehttp-proxy-user": {
                            "name": "invokehttp-proxy-user",
                            "displayName": "Proxy Username",
                            "description": "Username to set when authenticating against proxy",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "invokehttp-proxy-password": {
                            "name": "invokehttp-proxy-password",
                            "displayName": "Proxy Password",
                            "description": "Password to set when authenticating against proxy",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Put Response Body In Attribute": {
                            "name": "Put Response Body In Attribute",
                            "displayName": "Put Response Body In Attribute",
                            "description": "If set, the response body received back will be put into an attribute of the original FlowFile instead of a separate FlowFile. The attribute key to put to is determined by evaluating value of this property. ",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Length To Put In Attribute": {
                            "name": "Max Length To Put In Attribute",
                            "displayName": "Max Length To Put In Attribute",
                            "description": "If routing the response body to an attribute of the original (by setting the \"Put response body in attribute\" property or by receiving an error status code), the number of characters put to the attribute value will be at most this amount. This is important because attributes are held in memory and large attributes will quickly cause out of memory issues. If the output goes longer than this value, it will be truncated to fit. Consider making this smaller if able.",
                            "defaultValue": "256",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Digest Authentication": {
                            "name": "Digest Authentication",
                            "displayName": "Use Digest Authentication",
                            "description": "Whether to communicate with the website using Digest Authentication. 'Basic Authentication Username' and 'Basic Authentication Password' are used for authentication.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Always Output Response": {
                            "name": "Always Output Response",
                            "displayName": "Always Output Response",
                            "description": "Will force a response FlowFile to be generated and routed to the 'Response' relationship regardless of what the server status code received is or if the processor is configured to put the server response body in the request attribute. In the later configuration a request FlowFile with the response body in the attribute and a typical response FlowFile will be emitted to their respective relationships.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Trusted Hostname": {
                            "name": "Trusted Hostname",
                            "displayName": "Trusted Hostname",
                            "description": "Bypass the normal truststore hostname verifier to allow the specified remote hostname as trusted. Enabling this property has MITM security implications, use wisely. Will still accept other connections based on the normal truststore hostname verifier. Only valid with SSL (HTTPS) connections.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Add Response Headers to Request": {
                            "name": "Add Response Headers to Request",
                            "displayName": "Add Response Headers to Request",
                            "description": "Enabling this property saves all the response headers to the original request. This may be when the response headers are needed but a response is not generated due to the status code received.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Content-Type": {
                            "name": "Content-Type",
                            "displayName": "Content-Type",
                            "description": "The Content-Type to specify for when content is being transmitted through a PUT, POST or PATCH. In the case of an empty value after evaluating an expression language expression, Content-Type defaults to application/octet-stream",
                            "defaultValue": "${mime.type}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "send-message-body": {
                            "name": "send-message-body",
                            "displayName": "Send Message Body",
                            "description": "If true, sends the HTTP message body on POST/PUT/PATCH requests (default).  If false, suppresses the message body and content-type header for these requests.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Chunked Encoding": {
                            "name": "Use Chunked Encoding",
                            "displayName": "Use Chunked Encoding",
                            "description": "When POST'ing, PUT'ing or PATCH'ing content set this property to true in order to not pass the 'Content-length' header and instead send 'Transfer-Encoding' with a value of 'chunked'. This will enable the data transfer mechanism which was introduced in HTTP 1.1 to pass data of unknown lengths in chunks.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Penalize on \"No Retry\"": {
                            "name": "Penalize on \"No Retry\"",
                            "displayName": "Penalize on \"No Retry\"",
                            "description": "Enabling this property will penalize FlowFiles that are routed to the \"No Retry\" relationship.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "use-etag": {
                            "name": "use-etag",
                            "displayName": "Use HTTP ETag",
                            "description": "Enable HTTP entity tag (ETag) support for HTTP requests.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "etag-max-cache-size": {
                            "name": "etag-max-cache-size",
                            "displayName": "Maximum ETag Cache Size",
                            "description": "The maximum size that the ETag cache should be allowed to grow to. The default size is 10MB.",
                            "defaultValue": "10MB",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "c4260190-2932-3340-b91f-0e6548487083",
                "name": "REST Service",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "c4260190-2932-3340-b91f-0e6548487083",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "REST Service",
                    "type": "InvokeHTTP",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "c7d4b054-8b54-3a5d-da58-2b000be5cc05",
            "uri": "https://localhost:8179/nifi-api/processors/c7d4b054-8b54-3a5d-da58-2b000be5cc05",
            "position": {
                "x": 479.72043836164266,
                "y": 752.3210350892696
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "c7d4b054-8b54-3a5d-da58-2b000be5cc05",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 479.72043836164266,
                    "y": 752.3210350892696
                },
                "name": "Fetch S3 Object",
                "type": "org.apache.nifi.processors.aws.s3.FetchS3Object",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-aws-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles are routed to failure relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "FlowFiles are routed to success relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Bucket": "${s3.bucket}",
                        "Object Key": "${filename}",
                        "Region": "us-west-2",
                        "Access Key": null,
                        "Secret Key": null,
                        "Credentials File": null,
                        "AWS Credentials Provider service": "b63b608a-40fb-3499-0efd-60054f62dade",
                        "Communications Timeout": "30 secs",
                        "Version": null,
                        "SSL Context Service": null,
                        "Endpoint Override URL": null,
                        "Signer Override": "Default Signature",
                        "Proxy Host": null,
                        "Proxy Host Port": null
                    },
                    "descriptors": {
                        "Bucket": {
                            "name": "Bucket",
                            "displayName": "Bucket",
                            "description": "",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Object Key": {
                            "name": "Object Key",
                            "displayName": "Object Key",
                            "description": "",
                            "defaultValue": "${filename}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Region": {
                            "name": "Region",
                            "displayName": "Region",
                            "description": "",
                            "defaultValue": "us-west-2",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "us-gov-west-1",
                                        "value": "us-gov-west-1",
                                        "description": "us-gov-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-1",
                                        "value": "us-east-1",
                                        "description": "us-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-2",
                                        "value": "us-east-2",
                                        "description": "us-east-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-1",
                                        "value": "us-west-1",
                                        "description": "us-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-2",
                                        "value": "us-west-2",
                                        "description": "us-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-1",
                                        "value": "eu-west-1",
                                        "description": "eu-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-2",
                                        "value": "eu-west-2",
                                        "description": "eu-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-central-1",
                                        "value": "eu-central-1",
                                        "description": "eu-central-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-south-1",
                                        "value": "ap-south-1",
                                        "description": "ap-south-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-1",
                                        "value": "ap-southeast-1",
                                        "description": "ap-southeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-2",
                                        "value": "ap-southeast-2",
                                        "description": "ap-southeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-1",
                                        "value": "ap-northeast-1",
                                        "description": "ap-northeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-2",
                                        "value": "ap-northeast-2",
                                        "description": "ap-northeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "sa-east-1",
                                        "value": "sa-east-1",
                                        "description": "sa-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "cn-north-1",
                                        "value": "cn-north-1",
                                        "description": "cn-north-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ca-central-1",
                                        "value": "ca-central-1",
                                        "description": "ca-central-1"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Access Key": {
                            "name": "Access Key",
                            "displayName": "Access Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Secret Key": {
                            "name": "Secret Key",
                            "displayName": "Secret Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Credentials File": {
                            "name": "Credentials File",
                            "displayName": "Credentials File",
                            "description": "Path to a file containing AWS access key and secret key in properties file format.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "AWS Credentials Provider service": {
                            "name": "AWS Credentials Provider service",
                            "displayName": "AWS Credentials Provider service",
                            "description": "The Controller Service that is used to obtain aws credentials provider",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "adc46394-0163-1000-4fc1-afbc4db6d274"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "b63b608a-40fb-3499-0efd-60054f62dade"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-aws-service-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Communications Timeout": {
                            "name": "Communications Timeout",
                            "displayName": "Communications Timeout",
                            "description": "",
                            "defaultValue": "30 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Version": {
                            "name": "Version",
                            "displayName": "Version",
                            "description": "The Version of the Object to download",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Endpoint Override URL": {
                            "name": "Endpoint Override URL",
                            "displayName": "Endpoint Override URL",
                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Signer Override": {
                            "name": "Signer Override",
                            "displayName": "Signer Override",
                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                            "defaultValue": "Default Signature",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Default Signature",
                                        "value": "Default Signature"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v4",
                                        "value": "AWSS3V4SignerType"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v2",
                                        "value": "S3SignerType"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "Proxy host name or IP",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Host Port": {
                            "name": "Proxy Host Port",
                            "displayName": "Proxy Host Port",
                            "description": "Proxy host port",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "validationErrors": [
                    "'AWS Credentials Provider service' validated against 'AWSCredentialsProviderControllerService' is invalid because Controller Service AWSCredentialsProviderService[id=b63b608a-40fb-3499-0efd-60054f62dade] is disabled"
                ],
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "c7d4b054-8b54-3a5d-da58-2b000be5cc05",
                "name": "Fetch S3 Object",
                "runStatus": "Invalid",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "c7d4b054-8b54-3a5d-da58-2b000be5cc05",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "Fetch S3 Object",
                    "type": "FetchS3Object",
                    "runStatus": "Invalid",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "f9a2d86a-e817-3377-2f44-d14630bb7607",
            "uri": "https://localhost:8179/nifi-api/processors/f9a2d86a-e817-3377-2f44-d14630bb7607",
            "position": {
                "x": 2342.240425547301,
                "y": 474.9038470586529
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "f9a2d86a-e817-3377-2f44-d14630bb7607",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 2342.240425547301,
                    "y": 474.9038470586529
                },
                "name": "Detect DB Avro Ingest",
                "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "table-avro",
                        "description": "",
                        "autoTerminate": false
                    },
                    {
                        "name": "unmatched",
                        "description": "FlowFiles that do not match any user-define expression will be routed here",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Routing Strategy": "Route to Property name",
                        "table-avro": "${db.table.output.format:equals('AVRO')}"
                    },
                    "descriptors": {
                        "Routing Strategy": {
                            "name": "Routing Strategy",
                            "displayName": "Routing Strategy",
                            "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                            "defaultValue": "Route to Property name",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to Property name",
                                        "value": "Route to Property name",
                                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if all match",
                                        "value": "Route to 'match' if all match",
                                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if any matches",
                                        "value": "Route to 'match' if any matches",
                                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "table-avro": {
                            "name": "table-avro",
                            "displayName": "table-avro",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "f9a2d86a-e817-3377-2f44-d14630bb7607",
                "name": "Detect DB Avro Ingest",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "f9a2d86a-e817-3377-2f44-d14630bb7607",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "Detect DB Avro Ingest",
                    "type": "RouteOnAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "cf5fa2e1-3aa1-3812-26c4-c1d1273a37fc",
            "uri": "https://localhost:8179/nifi-api/processors/cf5fa2e1-3aa1-3812-26c4-c1d1273a37fc",
            "position": {
                "x": 16.92738910052958,
                "y": 2387.488407544187
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "cf5fa2e1-3aa1-3812-26c4-c1d1273a37fc",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 16.92738910052958,
                    "y": 2387.488407544187
                },
                "name": "Complete Success",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Do not store state",
                        "Stateful Variables Initial Value": null
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "cf5fa2e1-3aa1-3812-26c4-c1d1273a37fc",
                "name": "Complete Success",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "cf5fa2e1-3aa1-3812-26c4-c1d1273a37fc",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Complete Success",
                    "type": "UpdateAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "da2ac727-1d75-3639-84fc-97f0f5c0e514",
            "uri": "https://localhost:8179/nifi-api/processors/da2ac727-1d75-3639-84fc-97f0f5c0e514",
            "position": {
                "x": 482.5220584116687,
                "y": 1059.2837036372548
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "da2ac727-1d75-3639-84fc-97f0f5c0e514",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 482.5220584116687,
                    "y": 1059.2837036372548
                },
                "name": "SFTP",
                "type": "org.apache.nifi.processors.standard.GetSFTP",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Hostname": null,
                        "Port": "22",
                        "Username": null,
                        "Password": null,
                        "Private Key Path": null,
                        "Private Key Passphrase": null,
                        "Remote Path": null,
                        "File Filter Regex": null,
                        "Path Filter Regex": null,
                        "Polling Interval": "60 sec",
                        "Search Recursively": "false",
                        "Ignore Dotted Files": "true",
                        "Delete Original": "true",
                        "Connection Timeout": "30 sec",
                        "Data Timeout": "30 sec",
                        "Host Key File": null,
                        "Max Selects": "100",
                        "Remote Poll Batch Size": "5000",
                        "Strict Host Key Checking": "false",
                        "Send Keep Alive On Timeout": "true",
                        "Use Compression": "false",
                        "Use Natural Ordering": "false"
                    },
                    "descriptors": {
                        "Hostname": {
                            "name": "Hostname",
                            "displayName": "Hostname",
                            "description": "The fully qualified hostname or IP address of the remote system",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Port": {
                            "name": "Port",
                            "displayName": "Port",
                            "description": "The port that the remote system is listening on for file transfers",
                            "defaultValue": "22",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Username": {
                            "name": "Username",
                            "displayName": "Username",
                            "description": "Username",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "Password for the user account",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Private Key Path": {
                            "name": "Private Key Path",
                            "displayName": "Private Key Path",
                            "description": "The fully qualified path to the Private Key file",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Private Key Passphrase": {
                            "name": "Private Key Passphrase",
                            "displayName": "Private Key Passphrase",
                            "description": "Password for the private key",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Remote Path": {
                            "name": "Remote Path",
                            "displayName": "Remote Path",
                            "description": "The path on the remote system from which to pull or push files",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter Regex": {
                            "name": "File Filter Regex",
                            "displayName": "File Filter Regex",
                            "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter Regex": {
                            "name": "Path Filter Regex",
                            "displayName": "Path Filter Regex",
                            "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Determines how long to wait between fetching the listing for new files",
                            "defaultValue": "60 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Search Recursively": {
                            "name": "Search Recursively",
                            "displayName": "Search Recursively",
                            "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Dotted Files": {
                            "name": "Ignore Dotted Files",
                            "displayName": "Ignore Dotted Files",
                            "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Delete Original": {
                            "name": "Delete Original",
                            "displayName": "Delete Original",
                            "description": "Determines whether or not the file is deleted from the remote system after it has been successfully transferred",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Connection Timeout": {
                            "name": "Connection Timeout",
                            "displayName": "Connection Timeout",
                            "description": "Amount of time to wait before timing out while creating a connection",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Data Timeout": {
                            "name": "Data Timeout",
                            "displayName": "Data Timeout",
                            "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Host Key File": {
                            "name": "Host Key File",
                            "displayName": "Host Key File",
                            "description": "If supplied, the given file will be used as the Host Key; otherwise, no use host key file will be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Selects": {
                            "name": "Max Selects",
                            "displayName": "Max Selects",
                            "description": "The maximum number of files to pull in a single connection",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Poll Batch Size": {
                            "name": "Remote Poll Batch Size",
                            "displayName": "Remote Poll Batch Size",
                            "description": "The value specifies how many file paths to find in a given directory on the remote system when doing a file listing. This value in general should not need to be modified but when polling against a remote system with a tremendous number of files this value can be critical.  Setting this value too high can result very poor performance and setting it too low can cause the flow to be slower than normal.",
                            "defaultValue": "5000",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Strict Host Key Checking": {
                            "name": "Strict Host Key Checking",
                            "displayName": "Strict Host Key Checking",
                            "description": "Indicates whether or not strict enforcement of hosts keys should be applied",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Send Keep Alive On Timeout": {
                            "name": "Send Keep Alive On Timeout",
                            "displayName": "Send Keep Alive On Timeout",
                            "description": "Indicates whether or not to send a single Keep Alive message when SSH socket times out",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Compression": {
                            "name": "Use Compression",
                            "displayName": "Use Compression",
                            "description": "Indicates whether or not ZLIB compression should be used when transferring files",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Natural Ordering": {
                            "name": "Use Natural Ordering",
                            "displayName": "Use Natural Ordering",
                            "description": "If true, will pull files in the order in which they are naturally listed; otherwise, the order in which the files will be pulled is not defined",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "da2ac727-1d75-3639-84fc-97f0f5c0e514",
                "name": "SFTP",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "da2ac727-1d75-3639-84fc-97f0f5c0e514",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "SFTP",
                    "type": "GetSFTP",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "86790b8f-7828-3736-cb52-f6bb9e595b23",
            "uri": "https://localhost:8179/nifi-api/processors/86790b8f-7828-3736-cb52-f6bb9e595b23",
            "position": {
                "x": 10,
                "y": 916.7689598309134
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "86790b8f-7828-3736-cb52-f6bb9e595b23",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 10,
                    "y": 916.7689598309134
                },
                "name": "Blob Azure",
                "type": "org.apache.nifi.processors.azure.storage.ListAzureBlobStorage",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-azure-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": false,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "container-name": null,
                        "storage-sas-token": null,
                        "storage-account-name": null,
                        "storage-account-key": null,
                        "prefix": null
                    },
                    "descriptors": {
                        "container-name": {
                            "name": "container-name",
                            "displayName": "Container Name",
                            "description": "Name of the Azure storage container",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-sas-token": {
                            "name": "storage-sas-token",
                            "displayName": "SAS Token",
                            "description": "Shared Access Signature token, including the leading '?'. Specify either SAS Token (recommended) or Account Key. There are certain risks in allowing the SAS token to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-name": {
                            "name": "storage-account-name",
                            "displayName": "Storage Account Name",
                            "description": "The storage account name.  There are certain risks in allowing the account name to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": true,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-key": {
                            "name": "storage-account-key",
                            "displayName": "Storage Account Key",
                            "description": "The storage account key. This is an admin-like password providing access to every container in this account. It is recommended one uses Shared Access Signature (SAS) token instead for fine-grained control with policies. There are certain risks in allowing the account key to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account key to be fetched dynamically from a flow file attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "prefix": {
                            "name": "prefix",
                            "displayName": "Prefix",
                            "description": "Search prefix for listing",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "86790b8f-7828-3736-cb52-f6bb9e595b23",
                "name": "Blob Azure",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "86790b8f-7828-3736-cb52-f6bb9e595b23",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "Blob Azure",
                    "type": "ListAzureBlobStorage",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "ab03be89-f89b-3d38-b3e5-a2756af9825c",
            "uri": "https://localhost:8179/nifi-api/processors/ab03be89-f89b-3d38-b3e5-a2756af9825c",
            "position": {
                "x": 484.6596097638876,
                "y": 1379.7242560733466
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "ab03be89-f89b-3d38-b3e5-a2756af9825c",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 484.6596097638876,
                    "y": 1379.7242560733466
                },
                "name": "REST Service",
                "type": "org.apache.nifi.processors.standard.InvokeHTTP",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "Failure",
                        "description": "The original FlowFile will be routed on any type of connection failure, timeout or general exception. It will have new attributes detailing the request.",
                        "autoTerminate": true
                    },
                    {
                        "name": "No Retry",
                        "description": "The original FlowFile will be routed on any status code that should NOT be retried (1xx, 3xx, 4xx status codes).  It will have new attributes detailing the request.",
                        "autoTerminate": true
                    },
                    {
                        "name": "Original",
                        "description": "The original FlowFile will be routed upon success (2xx status codes). It will have new attributes detailing the success of the request.",
                        "autoTerminate": true
                    },
                    {
                        "name": "Response",
                        "description": "A Response FlowFile will be routed upon success (2xx status codes). If the 'Output Response Regardless' property is true then the response will be sent to this relationship regardless of the status code received.",
                        "autoTerminate": false
                    },
                    {
                        "name": "Retry",
                        "description": "The original FlowFile will be routed on any status code that can be retried (5xx status codes). It will have new attributes detailing the request.",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "HTTP Method": "GET",
                        "Remote URL": null,
                        "SSL Context Service": null,
                        "Connection Timeout": "5 secs",
                        "Read Timeout": "15 secs",
                        "Include Date Header": "True",
                        "Follow Redirects": "True",
                        "Attributes to Send": null,
                        "Basic Authentication Username": null,
                        "Basic Authentication Password": null,
                        "Proxy Host": null,
                        "Proxy Port": null,
                        "Proxy Type": "http",
                        "invokehttp-proxy-user": null,
                        "invokehttp-proxy-password": null,
                        "Put Response Body In Attribute": null,
                        "Max Length To Put In Attribute": "256",
                        "Digest Authentication": "false",
                        "Always Output Response": "false",
                        "Trusted Hostname": null,
                        "Add Response Headers to Request": "false",
                        "Content-Type": "${mime.type}",
                        "send-message-body": "true",
                        "Use Chunked Encoding": "false",
                        "Penalize on \"No Retry\"": "false",
                        "use-etag": "false",
                        "etag-max-cache-size": "10MB"
                    },
                    "descriptors": {
                        "HTTP Method": {
                            "name": "HTTP Method",
                            "displayName": "HTTP Method",
                            "description": "HTTP request method (GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS). Arbitrary methods are also supported. Methods other than POST, PUT and PATCH will be sent without a message body.",
                            "defaultValue": "GET",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Remote URL": {
                            "name": "Remote URL",
                            "displayName": "Remote URL",
                            "description": "Remote URL which will be connected to, including scheme, host, port, path.",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "The SSL Context Service used to provide client certificate information for TLS/SSL (https) connections. It is also used to connect to HTTPS Proxy.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Connection Timeout": {
                            "name": "Connection Timeout",
                            "displayName": "Connection Timeout",
                            "description": "Max wait time for connection to remote service.",
                            "defaultValue": "5 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Read Timeout": {
                            "name": "Read Timeout",
                            "displayName": "Read Timeout",
                            "description": "Max wait time for response from remote service.",
                            "defaultValue": "15 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Include Date Header": {
                            "name": "Include Date Header",
                            "displayName": "Include Date Header",
                            "description": "Include an RFC-2616 Date header in the request.",
                            "defaultValue": "True",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "True"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "False"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Follow Redirects": {
                            "name": "Follow Redirects",
                            "displayName": "Follow Redirects",
                            "description": "Follow HTTP redirects issued by remote server.",
                            "defaultValue": "True",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "True"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "False"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Attributes to Send": {
                            "name": "Attributes to Send",
                            "displayName": "Attributes to Send",
                            "description": "Regular expression that defines which attributes to send as HTTP headers in the request. If not defined, no attributes are sent as headers. Also any dynamic properties set will be sent as headers. The dynamic property key will be the header key and the dynamic property value will be interpreted as expression language will be the header value.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Basic Authentication Username": {
                            "name": "Basic Authentication Username",
                            "displayName": "Basic Authentication Username",
                            "description": "The username to be used by the client to authenticate against the Remote URL.  Cannot include control characters (0-31), ':', or DEL (127).",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Basic Authentication Password": {
                            "name": "Basic Authentication Password",
                            "displayName": "Basic Authentication Password",
                            "description": "The password to be used by the client to authenticate against the Remote URL.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "The fully qualified hostname or IP address of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Port": {
                            "name": "Proxy Port",
                            "displayName": "Proxy Port",
                            "description": "The port of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Type": {
                            "name": "Proxy Type",
                            "displayName": "Proxy Type",
                            "description": "The type of the proxy we are connecting to. Must be either http or https",
                            "defaultValue": "http",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "invokehttp-proxy-user": {
                            "name": "invokehttp-proxy-user",
                            "displayName": "Proxy Username",
                            "description": "Username to set when authenticating against proxy",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "invokehttp-proxy-password": {
                            "name": "invokehttp-proxy-password",
                            "displayName": "Proxy Password",
                            "description": "Password to set when authenticating against proxy",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Put Response Body In Attribute": {
                            "name": "Put Response Body In Attribute",
                            "displayName": "Put Response Body In Attribute",
                            "description": "If set, the response body received back will be put into an attribute of the original FlowFile instead of a separate FlowFile. The attribute key to put to is determined by evaluating value of this property. ",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Length To Put In Attribute": {
                            "name": "Max Length To Put In Attribute",
                            "displayName": "Max Length To Put In Attribute",
                            "description": "If routing the response body to an attribute of the original (by setting the \"Put response body in attribute\" property or by receiving an error status code), the number of characters put to the attribute value will be at most this amount. This is important because attributes are held in memory and large attributes will quickly cause out of memory issues. If the output goes longer than this value, it will be truncated to fit. Consider making this smaller if able.",
                            "defaultValue": "256",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Digest Authentication": {
                            "name": "Digest Authentication",
                            "displayName": "Use Digest Authentication",
                            "description": "Whether to communicate with the website using Digest Authentication. 'Basic Authentication Username' and 'Basic Authentication Password' are used for authentication.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Always Output Response": {
                            "name": "Always Output Response",
                            "displayName": "Always Output Response",
                            "description": "Will force a response FlowFile to be generated and routed to the 'Response' relationship regardless of what the server status code received is or if the processor is configured to put the server response body in the request attribute. In the later configuration a request FlowFile with the response body in the attribute and a typical response FlowFile will be emitted to their respective relationships.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Trusted Hostname": {
                            "name": "Trusted Hostname",
                            "displayName": "Trusted Hostname",
                            "description": "Bypass the normal truststore hostname verifier to allow the specified remote hostname as trusted. Enabling this property has MITM security implications, use wisely. Will still accept other connections based on the normal truststore hostname verifier. Only valid with SSL (HTTPS) connections.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Add Response Headers to Request": {
                            "name": "Add Response Headers to Request",
                            "displayName": "Add Response Headers to Request",
                            "description": "Enabling this property saves all the response headers to the original request. This may be when the response headers are needed but a response is not generated due to the status code received.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Content-Type": {
                            "name": "Content-Type",
                            "displayName": "Content-Type",
                            "description": "The Content-Type to specify for when content is being transmitted through a PUT, POST or PATCH. In the case of an empty value after evaluating an expression language expression, Content-Type defaults to application/octet-stream",
                            "defaultValue": "${mime.type}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "send-message-body": {
                            "name": "send-message-body",
                            "displayName": "Send Message Body",
                            "description": "If true, sends the HTTP message body on POST/PUT/PATCH requests (default).  If false, suppresses the message body and content-type header for these requests.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Chunked Encoding": {
                            "name": "Use Chunked Encoding",
                            "displayName": "Use Chunked Encoding",
                            "description": "When POST'ing, PUT'ing or PATCH'ing content set this property to true in order to not pass the 'Content-length' header and instead send 'Transfer-Encoding' with a value of 'chunked'. This will enable the data transfer mechanism which was introduced in HTTP 1.1 to pass data of unknown lengths in chunks.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Penalize on \"No Retry\"": {
                            "name": "Penalize on \"No Retry\"",
                            "displayName": "Penalize on \"No Retry\"",
                            "description": "Enabling this property will penalize FlowFiles that are routed to the \"No Retry\" relationship.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "use-etag": {
                            "name": "use-etag",
                            "displayName": "Use HTTP ETag",
                            "description": "Enable HTTP entity tag (ETag) support for HTTP requests.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "etag-max-cache-size": {
                            "name": "etag-max-cache-size",
                            "displayName": "Maximum ETag Cache Size",
                            "description": "The maximum size that the ETag cache should be allowed to grow to. The default size is 10MB.",
                            "defaultValue": "10MB",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "ab03be89-f89b-3d38-b3e5-a2756af9825c",
                "name": "REST Service",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "ab03be89-f89b-3d38-b3e5-a2756af9825c",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "REST Service",
                    "type": "InvokeHTTP",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 4
            },
            "id": "5b83c5e2-ade4-3934-f946-7eb52a532460",
            "uri": "https://localhost:8179/nifi-api/processors/5b83c5e2-ade4-3934-f946-7eb52a532460",
            "position": {
                "x": 575.7684853709652,
                "y": 2032.5251248845589
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "5b83c5e2-ade4-3934-f946-7eb52a532460",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 575.7684853709652,
                    "y": 2032.5251248845589
                },
                "name": "Failed - Release Highwater Mark",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.ReleaseHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "cancelledWaterMark",
                        "description": "The active water mark for the flowfile was cancelled",
                        "autoTerminate": false
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "${category}",
                        "System feed name": "${feed}",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Mode": "REJECT",
                        "Release All": "true"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Mode": {
                            "name": "Mode",
                            "displayName": "Mode",
                            "description": "Indicates whether this processor should commit or reject high-water mark updates",
                            "defaultValue": "COMMIT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Commit",
                                        "value": "COMMIT",
                                        "description": "Commits the updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Reject",
                                        "value": "REJECT",
                                        "description": "Rejects any updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Release All": {
                            "name": "Release All",
                            "displayName": "Release All",
                            "description": "If true, commits or rolls back all pending high-water marks.  Otherwise, commits/rolls back only the named water mark property.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "5b83c5e2-ade4-3934-f946-7eb52a532460",
                "name": "Failed - Release Highwater Mark",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "5b83c5e2-ade4-3934-f946-7eb52a532460",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Failed - Release Highwater Mark",
                    "type": "ReleaseHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "ae37ccf0-afc4-395d-fc56-6ff503671c5e",
            "uri": "https://localhost:8179/nifi-api/processors/ae37ccf0-afc4-395d-fc56-6ff503671c5e",
            "position": {
                "x": 2862.8857543831637,
                "y": 1027.7922666627755
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "ae37ccf0-afc4-395d-fc56-6ff503671c5e",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 2862.8857543831637,
                    "y": 1027.7922666627755
                },
                "name": "Update Solr",
                "type": "org.apache.nifi.processors.solr.PutSolrContentStream",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-solr-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "connection_failure",
                        "description": "FlowFiles that failed because Solr is unreachable",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "FlowFiles that failed for any reason other than Solr being unreachable",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "The original FlowFile",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Solr Type": "Cloud",
                        "Solr Location": "${config.search.solr.url}",
                        "Collection": "${index-or-collection-name}",
                        "Content Stream Path": "/update/json/docs",
                        "Content-Type": "application/json",
                        "Commit Within": "5000",
                        "JAAS Client App Name": null,
                        "Username": null,
                        "Password": null,
                        "SSL Context Service": null,
                        "Solr Socket Timeout": "10 seconds",
                        "Solr Connection Timeout": "10 seconds",
                        "Solr Maximum Connections": "10",
                        "Solr Maximum Connections Per Host": "5",
                        "ZooKeeper Client Timeout": "10 seconds",
                        "ZooKeeper Connection Timeout": "10 seconds"
                    },
                    "descriptors": {
                        "Solr Type": {
                            "name": "Solr Type",
                            "displayName": "Solr Type",
                            "description": "The type of Solr instance, Cloud or Standard.",
                            "defaultValue": "Standard",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Cloud",
                                        "value": "Cloud",
                                        "description": "A SolrCloud instance."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Standard",
                                        "value": "Standard",
                                        "description": "A stand-alone Solr instance."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Solr Location": {
                            "name": "Solr Location",
                            "displayName": "Solr Location",
                            "description": "The Solr url for a Solr Type of Standard (ex: http://localhost:8984/solr/gettingstarted), or the ZooKeeper hosts for a Solr Type of Cloud (ex: localhost:9983).",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Collection": {
                            "name": "Collection",
                            "displayName": "Collection",
                            "description": "The Solr collection name, only used with a Solr Type of Cloud",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Content Stream Path": {
                            "name": "Content Stream Path",
                            "displayName": "Content Stream Path",
                            "description": "The path in Solr to post the ContentStream",
                            "defaultValue": "/update/json/docs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Content-Type": {
                            "name": "Content-Type",
                            "displayName": "Content-Type",
                            "description": "Content-Type being sent to Solr",
                            "defaultValue": "application/json",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Commit Within": {
                            "name": "Commit Within",
                            "displayName": "Commit Within",
                            "description": "The number of milliseconds before the given update is committed",
                            "defaultValue": "5000",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "JAAS Client App Name": {
                            "name": "JAAS Client App Name",
                            "displayName": "JAAS Client App Name",
                            "description": "The name of the JAAS configuration entry to use when performing Kerberos authentication to Solr. If this property is not provided, Kerberos authentication will not be attempted. The value must match an entry in the file specified by the system property java.security.auth.login.config.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Username": {
                            "name": "Username",
                            "displayName": "Username",
                            "description": "The username to use when Solr is configured with basic authentication.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "The password to use when Solr is configured with basic authentication.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "The Controller Service to use in order to obtain an SSL Context. This property must be set when communicating with a Solr over https.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Solr Socket Timeout": {
                            "name": "Solr Socket Timeout",
                            "displayName": "Solr Socket Timeout",
                            "description": "The amount of time to wait for data on a socket connection to Solr. A value of 0 indicates an infinite timeout.",
                            "defaultValue": "10 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Solr Connection Timeout": {
                            "name": "Solr Connection Timeout",
                            "displayName": "Solr Connection Timeout",
                            "description": "The amount of time to wait when establishing a connection to Solr. A value of 0 indicates an infinite timeout.",
                            "defaultValue": "10 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Solr Maximum Connections": {
                            "name": "Solr Maximum Connections",
                            "displayName": "Solr Maximum Connections",
                            "description": "The maximum number of total connections allowed from the Solr client to Solr.",
                            "defaultValue": "10",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Solr Maximum Connections Per Host": {
                            "name": "Solr Maximum Connections Per Host",
                            "displayName": "Solr Maximum Connections Per Host",
                            "description": "The maximum number of connections allowed from the Solr client to a single Solr host.",
                            "defaultValue": "5",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "ZooKeeper Client Timeout": {
                            "name": "ZooKeeper Client Timeout",
                            "displayName": "ZooKeeper Client Timeout",
                            "description": "The amount of time to wait for data on a connection to ZooKeeper, only used with a Solr Type of Cloud.",
                            "defaultValue": "10 seconds",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "ZooKeeper Connection Timeout": {
                            "name": "ZooKeeper Connection Timeout",
                            "displayName": "ZooKeeper Connection Timeout",
                            "description": "The amount of time to wait when establishing a connection to ZooKeeper, only used with a Solr Type of Cloud.",
                            "defaultValue": "10 seconds",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "ae37ccf0-afc4-395d-fc56-6ff503671c5e",
                "name": "Update Solr",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "ae37ccf0-afc4-395d-fc56-6ff503671c5e",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Update Solr",
                    "type": "PutSolrContentStream",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "3e1ab706-25aa-3d6f-6bda-58551da15b8d",
            "uri": "https://localhost:8179/nifi-api/processors/3e1ab706-25aa-3d6f-6bda-58551da15b8d",
            "position": {
                "x": 1760.7356959620392,
                "y": 473.52102002896936
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "3e1ab706-25aa-3d6f-6bda-58551da15b8d",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 1760.7356959620392,
                    "y": 473.52102002896936
                },
                "name": "Savepoint 1",
                "type": "com.thinkbiganalytics.nifi.v2.savepoint.SetSavepoint",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "expired",
                        "description": "A FlowFile that has exceeded the configured expiration Duration will be routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "failure",
                        "description": "FlowFiles will be routed to this relationship if the controller cannot be reached or Savepoint Identifier evaluates to null or empty",
                        "autoTerminate": false
                    },
                    {
                        "name": "release-failure",
                        "description": "A FlowFile with a release signal from controller will be routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "release-success",
                        "description": "A FlowFile with a release signal from controller will be routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "try",
                        "description": "A FlowFile will be cloned upon new entry or receiving a retry signal from the controller and routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "savepoint-id": "${savepoint.id}",
                        "expiration-duration": "72 hours",
                        "savepoint-service": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                    },
                    "descriptors": {
                        "savepoint-id": {
                            "name": "savepoint-id",
                            "displayName": "Savepoint Id",
                            "description": "A value, or the results of an Attribute Expression Language statement, which will be evaluated against a FlowFile in order to determine the savepoint key",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "expiration-duration": {
                            "name": "expiration-duration",
                            "displayName": "Expiration Duration",
                            "description": "Indicates the duration after which waiting FlowFiles will be routed to the 'expired' relationship",
                            "defaultValue": "72 hours",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "savepoint-service": {
                            "name": "savepoint-service",
                            "displayName": "Savepoint service",
                            "description": "The Controller Service used to manage retry and release signals for savepoints.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "adc39cd8-0163-1000-9c83-676226a01aa6"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.core.savepoint.SavepointController",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 2000,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "3e1ab706-25aa-3d6f-6bda-58551da15b8d",
                "name": "Savepoint 1",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "3e1ab706-25aa-3d6f-6bda-58551da15b8d",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "Savepoint 1",
                    "type": "SetSavepoint",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "85ccf5c6-32c3-356d-f0f8-22318abb5d34",
            "uri": "https://localhost:8179/nifi-api/processors/85ccf5c6-32c3-356d-f0f8-22318abb5d34",
            "position": {
                "x": 1127.9087415437643,
                "y": 471.12646810005026
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "85ccf5c6-32c3-356d-f0f8-22318abb5d34",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 1127.9087415437643,
                    "y": 471.12646810005026
                },
                "name": "Initialize Feed Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Do not store state",
                        "Stateful Variables Initial Value": "",
                        "archiveId": "${now():format('yyyyMMddHHmmss')}_${UUID()}",
                        "category": "concerts",
                        "feed": "venues",
                        "hdfs.archive.root": "/archive",
                        "hdfs.ingest.root": "/etl",
                        "hive.ingest.root": "/model.db",
                        "hive.master.root": "/app/warehouse",
                        "hive.profile.root": "/model.db",
                        "kylo.tmp.baseFolder": "/tmp/kylo-nifi",
                        "metadata.table.feedFieldStructure": "venueid|int||1|0|0|venueid\nvenuename|string||0|0|0|venuename\nvenuecity|string||0|0|0|venuecity\nvenuestate|string||0|0|0|venuestate\nvenueseats|int||0|0|0|venueseats",
                        "metadata.table.feedFormat": "ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'\n WITH SERDEPROPERTIES ( 'separatorChar' = ',' ,'escapeChar' = '\\\\' ,'quoteChar' = '\\\"') STORED AS TEXTFILE",
                        "metadata.table.feedTblProperties": "${metadata.table.feedTblProperties}",
                        "metadata.table.fieldIndexString": "venuename,venuecity,venuestate,venueseats",
                        "metadata.table.fieldPoliciesJson": "[{\"profile\":true,\"index\":false,\"fieldName\":\"venueid\",\"feedFieldName\":\"venueid\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":true,\"fieldName\":\"venuename\",\"feedFieldName\":\"venuename\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":true,\"fieldName\":\"venuecity\",\"feedFieldName\":\"venuecity\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":true,\"fieldName\":\"venuestate\",\"feedFieldName\":\"venuestate\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":true,\"fieldName\":\"venueseats\",\"feedFieldName\":\"venueseats\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false}]",
                        "metadata.table.fieldStructure": "venueid|int||1|0|0|venueid\nvenuename|string||0|0|0|venuename\nvenuecity|string||0|0|0|venuecity\nvenuestate|string||0|0|0|venuestate\nvenueseats|int||0|0|0|venueseats",
                        "metadata.table.targetFormat": "STORED AS ORC",
                        "metadata.table.targetMergeStrategy": "DEDUPE_AND_MERGE",
                        "metadata.table.targetTblProperties": "tblproperties(\"orc.compress\"=\"SNAPPY\")",
                        "nifi.home": "/opt/nifi",
                        "nifi.kylo.applicationJarDirectory": "/opt/nifi/current/lib/app",
                        "savepoint.id": "${UUID()}",
                        "skipHeader": "true",
                        "spark.input_folder": "/tmp/kylo-nifi/spark"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "archiveId": {
                            "name": "archiveId",
                            "displayName": "archiveId",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "category": {
                            "name": "category",
                            "displayName": "category",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "feed": {
                            "name": "feed",
                            "displayName": "feed",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.archive.root": {
                            "name": "hdfs.archive.root",
                            "displayName": "hdfs.archive.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "kylo.tmp.baseFolder": {
                            "name": "kylo.tmp.baseFolder",
                            "displayName": "kylo.tmp.baseFolder",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedFieldStructure": {
                            "name": "metadata.table.feedFieldStructure",
                            "displayName": "metadata.table.feedFieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedFormat": {
                            "name": "metadata.table.feedFormat",
                            "displayName": "metadata.table.feedFormat",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedTblProperties": {
                            "name": "metadata.table.feedTblProperties",
                            "displayName": "metadata.table.feedTblProperties",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldIndexString": {
                            "name": "metadata.table.fieldIndexString",
                            "displayName": "metadata.table.fieldIndexString",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldPoliciesJson": {
                            "name": "metadata.table.fieldPoliciesJson",
                            "displayName": "metadata.table.fieldPoliciesJson",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldStructure": {
                            "name": "metadata.table.fieldStructure",
                            "displayName": "metadata.table.fieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetFormat": {
                            "name": "metadata.table.targetFormat",
                            "displayName": "metadata.table.targetFormat",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetMergeStrategy": {
                            "name": "metadata.table.targetMergeStrategy",
                            "displayName": "metadata.table.targetMergeStrategy",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetTblProperties": {
                            "name": "metadata.table.targetTblProperties",
                            "displayName": "metadata.table.targetTblProperties",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.home": {
                            "name": "nifi.home",
                            "displayName": "nifi.home",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.kylo.applicationJarDirectory": {
                            "name": "nifi.kylo.applicationJarDirectory",
                            "displayName": "nifi.kylo.applicationJarDirectory",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "savepoint.id": {
                            "name": "savepoint.id",
                            "displayName": "savepoint.id",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "skipHeader": {
                            "name": "skipHeader",
                            "displayName": "skipHeader",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "spark.input_folder": {
                            "name": "spark.input_folder",
                            "displayName": "spark.input_folder",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "85ccf5c6-32c3-356d-f0f8-22318abb5d34",
                "name": "Initialize Feed Parameters",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "85ccf5c6-32c3-356d-f0f8-22318abb5d34",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "Initialize Feed Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "f1739cca-3773-3d71-5bd9-e945fb8a61dc",
            "uri": "https://localhost:8179/nifi-api/processors/f1739cca-3773-3d71-5bd9-e945fb8a61dc",
            "position": {
                "x": 10,
                "y": 916.7689598309134
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "f1739cca-3773-3d71-5bd9-e945fb8a61dc",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 10,
                    "y": 916.7689598309134
                },
                "name": "Blob Azure",
                "type": "org.apache.nifi.processors.azure.storage.ListAzureBlobStorage",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-azure-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": false,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "container-name": null,
                        "storage-sas-token": null,
                        "storage-account-name": null,
                        "storage-account-key": null,
                        "prefix": null
                    },
                    "descriptors": {
                        "container-name": {
                            "name": "container-name",
                            "displayName": "Container Name",
                            "description": "Name of the Azure storage container",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-sas-token": {
                            "name": "storage-sas-token",
                            "displayName": "SAS Token",
                            "description": "Shared Access Signature token, including the leading '?'. Specify either SAS Token (recommended) or Account Key. There are certain risks in allowing the SAS token to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-name": {
                            "name": "storage-account-name",
                            "displayName": "Storage Account Name",
                            "description": "The storage account name.  There are certain risks in allowing the account name to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": true,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-key": {
                            "name": "storage-account-key",
                            "displayName": "Storage Account Key",
                            "description": "The storage account key. This is an admin-like password providing access to every container in this account. It is recommended one uses Shared Access Signature (SAS) token instead for fine-grained control with policies. There are certain risks in allowing the account key to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account key to be fetched dynamically from a flow file attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "prefix": {
                            "name": "prefix",
                            "displayName": "Prefix",
                            "description": "Search prefix for listing",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "f1739cca-3773-3d71-5bd9-e945fb8a61dc",
                "name": "Blob Azure",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "f1739cca-3773-3d71-5bd9-e945fb8a61dc",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "Blob Azure",
                    "type": "ListAzureBlobStorage",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "43b14d64-1d49-3a58-8224-a0f728abbd4b",
            "uri": "https://localhost:8179/nifi-api/processors/43b14d64-1d49-3a58-8224-a0f728abbd4b",
            "position": {
                "x": 1752.136631493926,
                "y": 236.4176025390625
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "43b14d64-1d49-3a58-8224-a0f728abbd4b",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 1752.136631493926,
                    "y": 236.4176025390625
                },
                "name": "No Data - Release Highwater Mark",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.ReleaseHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#f21308"
                },
                "relationships": [
                    {
                        "name": "cancelledWaterMark",
                        "description": "The active water mark for the flowfile was cancelled",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "concerts",
                        "System feed name": "events",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Mode": "COMMIT",
                        "Release All": "true"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Mode": {
                            "name": "Mode",
                            "displayName": "Mode",
                            "description": "Indicates whether this processor should commit or reject high-water mark updates",
                            "defaultValue": "COMMIT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Commit",
                                        "value": "COMMIT",
                                        "description": "Commits the updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Reject",
                                        "value": "REJECT",
                                        "description": "Rejects any updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Release All": {
                            "name": "Release All",
                            "displayName": "Release All",
                            "description": "If true, commits or rolls back all pending high-water marks.  Otherwise, commits/rolls back only the named water mark property.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "43b14d64-1d49-3a58-8224-a0f728abbd4b",
                "name": "No Data - Release Highwater Mark",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "43b14d64-1d49-3a58-8224-a0f728abbd4b",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "No Data - Release Highwater Mark",
                    "type": "ReleaseHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a4be7746-0165-1000-4a18-11c1909e5d4e",
                "version": 5
            },
            "id": "a3639607-3a16-3b86-4c64-c36a1f7b052d",
            "uri": "https://localhost:8179/nifi-api/processors/a3639607-3a16-3b86-4c64-c36a1f7b052d",
            "position": {
                "x": 1516.429917978523,
                "y": 848.6170367190443
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "a3639607-3a16-3b86-4c64-c36a1f7b052d",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 1516.429917978523,
                    "y": 848.6170367190443
                },
                "name": "Initialize Feed?",
                "type": "com.thinkbiganalytics.nifi.v2.init.InitializeFeed",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": false
                    },
                    {
                        "name": "Initialize",
                        "description": "Begin initialization",
                        "autoTerminate": false
                    },
                    {
                        "name": "Re-Initialize",
                        "description": "Begin re-initialization",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "${category}",
                        "System feed name": "${feed}",
                        "Initialization Failure Strategy": "RETRY",
                        "Initialization Retry Delay (seconds)": "15",
                        "Max Initialization Attempts": "5",
                        "Clone initialization flowfile": "true",
                        "Max Flow File Count": "500",
                        "Max Flow Files size": "1000"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Initialization Failure Strategy": {
                            "name": "Initialization Failure Strategy",
                            "displayName": "Initialization Failure Strategy",
                            "description": "Indicates how this processor should behave when a flow file arrives after feed initialization has failed.",
                            "defaultValue": "RETRY",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Fail",
                                        "value": "FAIL",
                                        "description": "Immediately fail the flow file"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Retry",
                                        "value": "RETRY",
                                        "description": "Retry initialization (if the appropriate time delay has expired) and penalize the flow file."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Initialization Retry Delay (seconds)": {
                            "name": "Initialization Retry Delay (seconds)",
                            "displayName": "Initialization Retry Delay (seconds)",
                            "description": "The minimum amount of seconds to delay before an arriving flow file should trigger another attempt to initialize a feed that has previously failed initialization.  Any flow file arriving before this delay has expired will be immediately failed.",
                            "defaultValue": "60",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Initialization Attempts": {
                            "name": "Max Initialization Attempts",
                            "displayName": "Max Initialization Attempts",
                            "description": "The maximum number of times initialization will be retried where there are failures.  There is no limit if unset.",
                            "defaultValue": "5",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Clone initialization flowfile": {
                            "name": "Clone initialization flowfile",
                            "displayName": "Clone initialization flowfile",
                            "description": "Indicates whether the feed initialization flow will use a flowfile that is a clone of the input flowfile, i.e. includes all content.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Flow File Count": {
                            "name": "Max Flow File Count",
                            "displayName": "Max Flow File Count",
                            "description": "The maximum number of flow files to process at one time",
                            "defaultValue": "500",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Flow Files size": {
                            "name": "Max Flow Files size",
                            "displayName": "Max Flow Files size",
                            "description": "The maximum accumulated flow file sizes (in kilobytes) to process at one time",
                            "defaultValue": "1000",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "a3639607-3a16-3b86-4c64-c36a1f7b052d",
                "name": "Initialize Feed?",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "a3639607-3a16-3b86-4c64-c36a1f7b052d",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Initialize Feed?",
                    "type": "InitializeFeed",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "91f55c31-986d-3827-ebfb-e98bfd2aaa79",
            "uri": "https://localhost:8179/nifi-api/processors/91f55c31-986d-3827-ebfb-e98bfd2aaa79",
            "position": {
                "x": 1871.5383889742693,
                "y": 1713.5527182313272
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "91f55c31-986d-3827-ebfb-e98bfd2aaa79",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 1871.5383889742693,
                    "y": 1713.5527182313272
                },
                "name": "Remove HDFS Folders",
                "type": "com.thinkbiganalytics.nifi.v2.hdfs.RemoveHDFSFolder",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-hadoop-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#ff9900"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles that failed to be processed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "FlowFiles that removed a directory",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Hadoop Configuration Resources": "/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml",
                        "Kerberos Principal": null,
                        "Kerberos Keytab": null,
                        "Kerberos Relogin Period": "4 hours",
                        "Directory": "${hive.ingest.root}/${category}/${feed}/\n${hive.master.root}/${category}/${feed}/\n${hive.profile.root}/${category}/${feed}/"
                    },
                    "descriptors": {
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Relogin Period": {
                            "name": "Kerberos Relogin Period",
                            "displayName": "Kerberos Relogin Period",
                            "description": "Period of time which should pass before attempting a kerberos relogin",
                            "defaultValue": "4 hours",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Directory": {
                            "name": "Directory",
                            "displayName": "Directory",
                            "description": "The absolute path to the HDFS directory to be permanently deleted. One directory per line.",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "91f55c31-986d-3827-ebfb-e98bfd2aaa79",
                "name": "Remove HDFS Folders",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "91f55c31-986d-3827-ebfb-e98bfd2aaa79",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Remove HDFS Folders",
                    "type": "RemoveHDFSFolder",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "4c8f7bde-895b-30a4-56a2-e79997b8ecd9",
            "uri": "https://localhost:8179/nifi-api/processors/4c8f7bde-895b-30a4-56a2-e79997b8ecd9",
            "position": {
                "x": 477.3463277278479,
                "y": 911.9318201342085
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "4c8f7bde-895b-30a4-56a2-e79997b8ecd9",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 477.3463277278479,
                    "y": 911.9318201342085
                },
                "name": "Fetch Azure BLOB",
                "type": "org.apache.nifi.processors.azure.storage.FetchAzureBlobStorage",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-azure-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Unsuccessful operations will be transferred to the failure relationship.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successfully processed FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "container-name": "${azure.container}",
                        "storage-sas-token": null,
                        "storage-account-name": null,
                        "storage-account-key": null,
                        "blob": "${azure.blobname}"
                    },
                    "descriptors": {
                        "container-name": {
                            "name": "container-name",
                            "displayName": "Container Name",
                            "description": "Name of the Azure storage container",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-sas-token": {
                            "name": "storage-sas-token",
                            "displayName": "SAS Token",
                            "description": "Shared Access Signature token, including the leading '?'. Specify either SAS Token (recommended) or Account Key. There are certain risks in allowing the SAS token to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-name": {
                            "name": "storage-account-name",
                            "displayName": "Storage Account Name",
                            "description": "The storage account name.  There are certain risks in allowing the account name to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": true,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-key": {
                            "name": "storage-account-key",
                            "displayName": "Storage Account Key",
                            "description": "The storage account key. This is an admin-like password providing access to every container in this account. It is recommended one uses Shared Access Signature (SAS) token instead for fine-grained control with policies. There are certain risks in allowing the account key to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account key to be fetched dynamically from a flow file attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "blob": {
                            "name": "blob",
                            "displayName": "Blob",
                            "description": "The filename of the blob",
                            "defaultValue": "${azure.blobname}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "validationErrors": [
                    "'Storage Account Name' is invalid because Storage Account Name is required"
                ],
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "4c8f7bde-895b-30a4-56a2-e79997b8ecd9",
                "name": "Fetch Azure BLOB",
                "runStatus": "Invalid",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "4c8f7bde-895b-30a4-56a2-e79997b8ecd9",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "Fetch Azure BLOB",
                    "type": "FetchAzureBlobStorage",
                    "runStatus": "Invalid",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "1181f468-44db-3331-127a-a11ca595e3a1",
            "uri": "https://localhost:8179/nifi-api/processors/1181f468-44db-3331-127a-a11ca595e3a1",
            "position": {
                "x": 10,
                "y": 1400.3852561101412
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "1181f468-44db-3331-127a-a11ca595e3a1",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 10,
                    "y": 1400.3852561101412
                },
                "name": "Profile Data",
                "type": "com.thinkbiganalytics.nifi.v2.spark.ExecuteSparkJob",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-spark-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#0a70f5"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Spark execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Successful result.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "ApplicationJAR": "${nifi.kylo.applicationJarDirectory}/kylo-spark-job-profiler-jar-with-dependencies.jar",
                        "Extra JARs": null,
                        "MainClass": "com.thinkbiganalytics.spark.dataprofiler.core.Profiler",
                        "MainArgs": "table,${category}.${feed}_valid,10,${category}.${feed}_profile,${table_field_policy_json_file},${feedts}",
                        "SparkMaster": "local",
                        "Spark YARN Deploy Mode": null,
                        "SparkHome": "/usr/lib/spark2",
                        "Spark Process Timeout": "1 hr",
                        "Driver Memory": "1024m",
                        "Executor Memory": "512m",
                        "Number of Executors": "1",
                        "Spark Application Name": "Profiler",
                        "Executor Cores": "1",
                        "Network Timeout": "120s",
                        "Hadoop Configuration Resources": null,
                        "Kerberos Principal": null,
                        "Kerberos Keytab": null,
                        "Yarn Queue": null,
                        "Spark Configurations": null,
                        "Extra Files": null,
                        "Data Sources": null,
                        "Metadata Service": null
                    },
                    "descriptors": {
                        "ApplicationJAR": {
                            "name": "ApplicationJAR",
                            "displayName": "ApplicationJAR",
                            "description": "Path to the JAR file containing the Spark job application",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Extra JARs": {
                            "name": "Extra JARs",
                            "displayName": "Extra JARs",
                            "description": "A file or a list of files separated by comma which should be added to the class path",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "MainClass": {
                            "name": "MainClass",
                            "displayName": "MainClass",
                            "description": "Qualified classname of the Spark job application class",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "MainArgs": {
                            "name": "MainArgs",
                            "displayName": "MainArgs",
                            "description": "Comma separated arguments to be passed into the main as args",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SparkMaster": {
                            "name": "SparkMaster",
                            "displayName": "SparkMaster",
                            "description": "The Spark master",
                            "defaultValue": "local",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark YARN Deploy Mode": {
                            "name": "Spark YARN Deploy Mode",
                            "displayName": "Spark YARN Deploy Mode",
                            "description": "The deploy mode for YARN master (client, cluster). Only applicable for yarn mode. NOTE: Please ensure that you have not set this in your application.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SparkHome": {
                            "name": "SparkHome",
                            "displayName": "SparkHome",
                            "description": "Path to the Spark Client directory",
                            "defaultValue": "/usr/hdp/current/spark-client",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Process Timeout": {
                            "name": "Spark Process Timeout",
                            "displayName": "Spark Process Timeout",
                            "description": "Time to wait for successful completion of Spark process. Routes to failure if Spark process runs for longer than expected here",
                            "defaultValue": "1 hr",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Driver Memory": {
                            "name": "Driver Memory",
                            "displayName": "Driver Memory",
                            "description": "How much RAM to allocate to the driver",
                            "defaultValue": "512m",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Executor Memory": {
                            "name": "Executor Memory",
                            "displayName": "Executor Memory",
                            "description": "How much RAM to allocate to the executor",
                            "defaultValue": "512m",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Number of Executors": {
                            "name": "Number of Executors",
                            "displayName": "Number of Executors",
                            "description": "The number of exectors to be used",
                            "defaultValue": "1",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Application Name": {
                            "name": "Spark Application Name",
                            "displayName": "Spark Application Name",
                            "description": "The name of the spark application",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Executor Cores": {
                            "name": "Executor Cores",
                            "displayName": "Executor Cores",
                            "description": "The number of executor cores to be used",
                            "defaultValue": "1",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Network Timeout": {
                            "name": "Network Timeout",
                            "displayName": "Network Timeout",
                            "description": "Default timeout for all network interactions. This config will be used in place of spark.core.connection.ack.wait.timeout, spark.akka.timeout, spark.storage.blockManagerSlaveTimeoutMs, spark.shuffle.io.connectionTimeout, spark.rpc.askTimeout or spark.rpc.lookupTimeout if they are not configured.",
                            "defaultValue": "120s",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Yarn Queue": {
                            "name": "Yarn Queue",
                            "displayName": "Yarn Queue",
                            "description": "Optional Yarn Queue",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Configurations": {
                            "name": "Spark Configurations",
                            "displayName": "Spark Configurations",
                            "description": "Pipe separated arguments to be passed into the Spark as configurations i.e <CONF1>=<VALUE1>|<CONF2>=<VALUE2>..",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Extra Files": {
                            "name": "Extra Files",
                            "displayName": "Extra Files",
                            "description": "Comma separated file paths to be passed to the Spark Executors",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Data Sources": {
                            "name": "Data Sources",
                            "displayName": "Data Sources",
                            "description": "A comma-separated list of data source ids to include in the environment for Spark.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Kylo metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "1181f468-44db-3331-127a-a11ca595e3a1",
                "name": "Profile Data",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "1181f468-44db-3331-127a-a11ca595e3a1",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Profile Data",
                    "type": "ExecuteSparkJob",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 3
            },
            "id": "834beeed-7072-3457-ab81-7c339d3772be",
            "uri": "https://localhost:8179/nifi-api/processors/834beeed-7072-3457-ab81-7c339d3772be",
            "position": {
                "x": 661.5392054866606,
                "y": 10
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "834beeed-7072-3457-ab81-7c339d3772be",
                "parentGroupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "position": {
                    "x": 661.5392054866606,
                    "y": 10
                },
                "name": "Failed - Release Highwater Mark",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.ReleaseHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#f21308"
                },
                "relationships": [
                    {
                        "name": "cancelledWaterMark",
                        "description": "The active water mark for the flowfile was cancelled",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "website",
                        "System feed name": "testing_multi_b",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Mode": "REJECT",
                        "Release All": "true"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Mode": {
                            "name": "Mode",
                            "displayName": "Mode",
                            "description": "Indicates whether this processor should commit or reject high-water mark updates",
                            "defaultValue": "COMMIT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Commit",
                                        "value": "COMMIT",
                                        "description": "Commits the updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Reject",
                                        "value": "REJECT",
                                        "description": "Rejects any updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Release All": {
                            "name": "Release All",
                            "displayName": "Release All",
                            "description": "If true, commits or rolls back all pending high-water marks.  Otherwise, commits/rolls back only the named water mark property.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "id": "834beeed-7072-3457-ab81-7c339d3772be",
                "name": "Failed - Release Highwater Mark",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "834beeed-7072-3457-ab81-7c339d3772be",
                    "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                    "name": "Failed - Release Highwater Mark",
                    "type": "ReleaseHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "c751c0f5-2295-3305-1ef2-94cde50e15f2",
            "uri": "https://localhost:8179/nifi-api/processors/c751c0f5-2295-3305-1ef2-94cde50e15f2",
            "position": {
                "x": 1533.7074400288748,
                "y": 2330.4820172354184
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "c751c0f5-2295-3305-1ef2-94cde50e15f2",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 1533.7074400288748,
                    "y": 2330.4820172354184
                },
                "name": "Set Savepoint 3",
                "type": "com.thinkbiganalytics.nifi.v2.savepoint.SetSavepoint",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "expired",
                        "description": "A FlowFile that has exceeded the configured expiration Duration will be routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "failure",
                        "description": "FlowFiles will be routed to this relationship if the controller cannot be reached or Savepoint Identifier evaluates to null or empty",
                        "autoTerminate": false
                    },
                    {
                        "name": "release-failure",
                        "description": "A FlowFile with a release signal from controller will be routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "release-success",
                        "description": "A FlowFile with a release signal from controller will be routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "try",
                        "description": "A FlowFile will be cloned upon new entry or receiving a retry signal from the controller and routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "savepoint-id": "${savepoint.id}",
                        "expiration-duration": "72 hours",
                        "savepoint-service": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                    },
                    "descriptors": {
                        "savepoint-id": {
                            "name": "savepoint-id",
                            "displayName": "Savepoint Id",
                            "description": "A value, or the results of an Attribute Expression Language statement, which will be evaluated against a FlowFile in order to determine the savepoint key",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "expiration-duration": {
                            "name": "expiration-duration",
                            "displayName": "Expiration Duration",
                            "description": "Indicates the duration after which waiting FlowFiles will be routed to the 'expired' relationship",
                            "defaultValue": "72 hours",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "savepoint-service": {
                            "name": "savepoint-service",
                            "displayName": "Savepoint service",
                            "description": "The Controller Service used to manage retry and release signals for savepoints.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "adc39cd8-0163-1000-9c83-676226a01aa6"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.core.savepoint.SavepointController",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 2000,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "c751c0f5-2295-3305-1ef2-94cde50e15f2",
                "name": "Set Savepoint 3",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "c751c0f5-2295-3305-1ef2-94cde50e15f2",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Set Savepoint 3",
                    "type": "SetSavepoint",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 4
            },
            "id": "64d6d1d4-b810-3508-21f4-30109c50cccf",
            "uri": "https://localhost:8179/nifi-api/processors/64d6d1d4-b810-3508-21f4-30109c50cccf",
            "position": {
                "x": 1799.466374077847,
                "y": 2891.0151867431914
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "64d6d1d4-b810-3508-21f4-30109c50cccf",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 1799.466374077847,
                    "y": 2891.0151867431914
                },
                "name": "Remove HDFS Folders",
                "type": "com.thinkbiganalytics.nifi.v2.hdfs.RemoveHDFSFolder",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-hadoop-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#ff9900"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles that failed to be processed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "FlowFiles that removed a directory",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Hadoop Configuration Resources": "/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml",
                        "Kerberos Principal": "nifi-userb/sandbox.kylo.io",
                        "Kerberos Keytab": "/etc/security/keytabs/nifib.headless.keytab",
                        "Kerberos Relogin Period": "4 hours",
                        "Directory": "${hive.ingest.root}/${category}/${feed}/\n${hive.master.root}/${category}/${feed}/\n${hive.profile.root}/${category}/${feed}/\n${hdfs.ingest.root}/${category}/${feed}/"
                    },
                    "descriptors": {
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Relogin Period": {
                            "name": "Kerberos Relogin Period",
                            "displayName": "Kerberos Relogin Period",
                            "description": "Period of time which should pass before attempting a kerberos relogin",
                            "defaultValue": "4 hours",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Directory": {
                            "name": "Directory",
                            "displayName": "Directory",
                            "description": "The absolute path to the HDFS directory to be permanently deleted. One directory per line.",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "64d6d1d4-b810-3508-21f4-30109c50cccf",
                "name": "Remove HDFS Folders",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "64d6d1d4-b810-3508-21f4-30109c50cccf",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Remove HDFS Folders",
                    "type": "RemoveHDFSFolder",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "e259c9c2-1d8a-34c3-e900-f91668c36c8d",
            "uri": "https://localhost:8179/nifi-api/processors/e259c9c2-1d8a-34c3-e900-f91668c36c8d",
            "position": {
                "x": 1206.4221691768507,
                "y": 1358.5903981118263
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "e259c9c2-1d8a-34c3-e900-f91668c36c8d",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 1206.4221691768507,
                    "y": 1358.5903981118263
                },
                "name": "TriggerCleanup",
                "type": "com.thinkbiganalytics.nifi.v2.metadata.TriggerCleanup",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "DISABLED",
                "style": {
                    "background-color": "#ff9900"
                },
                "relationships": [
                    {
                        "name": "Success",
                        "description": "Relationship followed on successful precondition event.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Feed Cleanup Event Service": "d791170d-8275-3f04-815c-05d79c0dc931",
                        "Metadata Provider Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "toy_store",
                        "System feed name": "products"
                    },
                    "descriptors": {
                        "Feed Cleanup Event Service": {
                            "name": "Feed Cleanup Event Service",
                            "displayName": "Feed Cleanup Event Service",
                            "description": "Service that manages the cleanup of feeds.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Cleanup Service",
                                        "value": "adc464ec-0163-1000-c5ab-a6429af8c498"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Cleanup Service",
                                        "value": "d791170d-8275-3f04-815c-05d79c0dc931"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.cleanup.CleanupEventService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "Metadata Provider Service": {
                            "name": "Metadata Provider Service",
                            "displayName": "Metadata Provider Service",
                            "description": "Service supplying the implementations of the various metadata providers.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "The category name of this feed. The default is to have this name automatically set when the feed is created. Normally you do not need to change the default value.",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "The system name of this feed. The default is to have this name automatically set when the feed is created. Normally you do not need to change the default value.",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "e259c9c2-1d8a-34c3-e900-f91668c36c8d",
                "name": "TriggerCleanup",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "e259c9c2-1d8a-34c3-e900-f91668c36c8d",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "TriggerCleanup",
                    "type": "TriggerCleanup",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "a4ab9878-80cd-39cb-06da-7f5d7ed244b3",
            "uri": "https://localhost:8179/nifi-api/processors/a4ab9878-80cd-39cb-06da-7f5d7ed244b3",
            "position": {
                "x": 476.0848189423923,
                "y": 590.5721942169075
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "a4ab9878-80cd-39cb-06da-7f5d7ed244b3",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 476.0848189423923,
                    "y": 590.5721942169075
                },
                "name": "HDFS",
                "type": "org.apache.nifi.processors.hadoop.GetHDFS",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-hadoop-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All files retrieved from HDFS are transferred to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Hadoop Configuration Resources": "/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml",
                        "kerberos-credentials-service": null,
                        "Kerberos Principal": null,
                        "Kerberos Keytab": null,
                        "Kerberos Relogin Period": "4 hours",
                        "Additional Classpath Resources": null,
                        "Directory": null,
                        "Recurse Subdirectories": "false",
                        "Keep Source File": "false",
                        "File Filter Regex": null,
                        "Filter Match Name Only": "true",
                        "Ignore Dotted Files": "true",
                        "Minimum File Age": "0 sec",
                        "Maximum File Age": null,
                        "Polling Interval": "0 sec",
                        "Batch Size": "100",
                        "IO Buffer Size": null,
                        "Compression codec": "NONE"
                    },
                    "descriptors": {
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration. To use swebhdfs, see 'Additional Details' section of PutHDFS's documentation.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "kerberos-credentials-service": {
                            "name": "kerberos-credentials-service",
                            "displayName": "Kerberos Credentials Service",
                            "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "KeytabCredentialsService",
                                        "value": "618a3674-0165-1000-3e4e-f6dfd8dff05f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Kerberos Relogin Period": {
                            "name": "Kerberos Relogin Period",
                            "displayName": "Kerberos Relogin Period",
                            "description": "Period of time which should pass before attempting a kerberos relogin.\n\nThis property has been deprecated, and has no effect on processing. Relogins now occur automatically.",
                            "defaultValue": "4 hours",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Additional Classpath Resources": {
                            "name": "Additional Classpath Resources",
                            "displayName": "Additional Classpath Resources",
                            "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Directory": {
                            "name": "Directory",
                            "displayName": "Directory",
                            "description": "The HDFS directory from which files should be read",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Recurse Subdirectories": {
                            "name": "Recurse Subdirectories",
                            "displayName": "Recurse Subdirectories",
                            "description": "Indicates whether to pull files from subdirectories of the HDFS directory",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Keep Source File": {
                            "name": "Keep Source File",
                            "displayName": "Keep Source File",
                            "description": "Determines whether to delete the file from HDFS after it has been successfully transferred. If true, the file will be fetched repeatedly. This is intended for testing only.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "File Filter Regex": {
                            "name": "File Filter Regex",
                            "displayName": "File Filter Regex",
                            "description": "A Java Regular Expression for filtering Filenames; if a filter is supplied then only files whose names match that Regular Expression will be fetched, otherwise all files will be fetched",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Filter Match Name Only": {
                            "name": "Filter Match Name Only",
                            "displayName": "Filter Match Name Only",
                            "description": "If true then File Filter Regex will match on just the filename, otherwise subdirectory names will be included with filename in the regex comparison",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Dotted Files": {
                            "name": "Ignore Dotted Files",
                            "displayName": "Ignore Dotted Files",
                            "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Age": {
                            "name": "Minimum File Age",
                            "displayName": "Minimum File Age",
                            "description": "The minimum age that a file must be in order to be pulled; any file younger than this amount of time (based on last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Age": {
                            "name": "Maximum File Age",
                            "displayName": "Maximum File Age",
                            "description": "The maximum age that a file must be in order to be pulled; any file older than this amount of time (based on last modification date) will be ignored",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Indicates how long to wait between performing directory listings",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Batch Size": {
                            "name": "Batch Size",
                            "displayName": "Batch Size",
                            "description": "The maximum number of files to pull in each iteration, based on run schedule.",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "IO Buffer Size": {
                            "name": "IO Buffer Size",
                            "displayName": "IO Buffer Size",
                            "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Compression codec": {
                            "name": "Compression codec",
                            "displayName": "Compression codec",
                            "description": "",
                            "defaultValue": "NONE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "NONE",
                                        "value": "NONE",
                                        "description": "No compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DEFAULT",
                                        "value": "DEFAULT",
                                        "description": "Default ZLIB compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BZIP",
                                        "value": "BZIP",
                                        "description": "BZIP compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "GZIP",
                                        "value": "GZIP",
                                        "description": "GZIP compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "LZ4",
                                        "value": "LZ4",
                                        "description": "LZ4 compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "LZO",
                                        "value": "LZO",
                                        "description": "LZO compression - it assumes LD_LIBRARY_PATH has been set and jar is available"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SNAPPY",
                                        "value": "SNAPPY",
                                        "description": "Snappy compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AUTOMATIC",
                                        "value": "AUTOMATIC",
                                        "description": "Will attempt to automatically detect the compression codec."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "a4ab9878-80cd-39cb-06da-7f5d7ed244b3",
                "name": "HDFS",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "a4ab9878-80cd-39cb-06da-7f5d7ed244b3",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "HDFS",
                    "type": "GetHDFS",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 9
            },
            "id": "6528ad6b-18ff-36ce-af33-b890aca1c037",
            "uri": "https://localhost:8179/nifi-api/processors/6528ad6b-18ff-36ce-af33-b890aca1c037",
            "position": {
                "x": 17.784637451171875,
                "y": 469.91565942237776
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "6528ad6b-18ff-36ce-af33-b890aca1c037",
                "parentGroupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "position": {
                    "x": 17.784637451171875,
                    "y": 469.91565942237776
                },
                "name": "Filesystem",
                "type": "org.apache.nifi.processors.standard.GetFile",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "success",
                        "description": "All files are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Input Directory": "/var/dropped",
                        "File Filter": "mydata\\d{1,3}.csv",
                        "Path Filter": null,
                        "Batch Size": "100",
                        "Keep Source File": "false",
                        "Recurse Subdirectories": "false",
                        "Polling Interval": "0 sec",
                        "Ignore Hidden Files": "true",
                        "Minimum File Age": "0 sec",
                        "Maximum File Age": null,
                        "Minimum File Size": "0 B",
                        "Maximum File Size": null
                    },
                    "descriptors": {
                        "Input Directory": {
                            "name": "Input Directory",
                            "displayName": "Input Directory",
                            "description": "The input directory from which to pull files",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter": {
                            "name": "File Filter",
                            "displayName": "File Filter",
                            "description": "Only files whose names match the given regular expression will be picked up",
                            "defaultValue": "[^\\.].*",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter": {
                            "name": "Path Filter",
                            "displayName": "Path Filter",
                            "description": "When Recurse Subdirectories is true, then only subdirectories whose path matches the given regular expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Batch Size": {
                            "name": "Batch Size",
                            "displayName": "Batch Size",
                            "description": "The maximum number of files to pull in each iteration",
                            "defaultValue": "10",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Keep Source File": {
                            "name": "Keep Source File",
                            "displayName": "Keep Source File",
                            "description": "If true, the file is not deleted after it has been copied to the Content Repository; this causes the file to be picked up continually and is useful for testing purposes.  If not keeping original NiFi will need write permissions on the directory it is pulling from otherwise it will ignore the file.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Recurse Subdirectories": {
                            "name": "Recurse Subdirectories",
                            "displayName": "Recurse Subdirectories",
                            "description": "Indicates whether or not to pull files from subdirectories",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Indicates how long to wait before performing a directory listing",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Hidden Files": {
                            "name": "Ignore Hidden Files",
                            "displayName": "Ignore Hidden Files",
                            "description": "Indicates whether or not hidden files should be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Age": {
                            "name": "Minimum File Age",
                            "displayName": "Minimum File Age",
                            "description": "The minimum age that a file must be in order to be pulled; any file younger than this amount of time (according to last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Age": {
                            "name": "Maximum File Age",
                            "displayName": "Maximum File Age",
                            "description": "The maximum age that a file must be in order to be pulled; any file older than this amount of time (according to last modification date) will be ignored",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Size": {
                            "name": "Minimum File Size",
                            "displayName": "Minimum File Size",
                            "description": "The minimum size that a file must be in order to be pulled",
                            "defaultValue": "0 B",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Size": {
                            "name": "Maximum File Size",
                            "displayName": "Maximum File Size",
                            "description": "The maximum size that a file can be in order to be pulled",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "5 min",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "id": "6528ad6b-18ff-36ce-af33-b890aca1c037",
                "name": "Filesystem",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "6528ad6b-18ff-36ce-af33-b890aca1c037",
                    "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                    "name": "Filesystem",
                    "type": "GetFile",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 1,
                    "tasksDurationNanos": 267279,
                    "tasks": "1",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "f22403a2-254b-3e6d-d1f1-9cc7dac604af",
            "uri": "https://localhost:8179/nifi-api/processors/f22403a2-254b-3e6d-d1f1-9cc7dac604af",
            "position": {
                "x": 473.82096726703094,
                "y": 436.66956567237867
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "f22403a2-254b-3e6d-d1f1-9cc7dac604af",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 473.82096726703094,
                    "y": 436.66956567237867
                },
                "name": "Filesystem",
                "type": "org.apache.nifi.processors.standard.GetFile",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "success",
                        "description": "All files are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Input Directory": "/var/dropzone",
                        "File Filter": "allevents.csv",
                        "Path Filter": null,
                        "Batch Size": "100",
                        "Keep Source File": "false",
                        "Recurse Subdirectories": "false",
                        "Polling Interval": "0 sec",
                        "Ignore Hidden Files": "true",
                        "Minimum File Age": "0 sec",
                        "Maximum File Age": null,
                        "Minimum File Size": "0 B",
                        "Maximum File Size": null
                    },
                    "descriptors": {
                        "Input Directory": {
                            "name": "Input Directory",
                            "displayName": "Input Directory",
                            "description": "The input directory from which to pull files",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter": {
                            "name": "File Filter",
                            "displayName": "File Filter",
                            "description": "Only files whose names match the given regular expression will be picked up",
                            "defaultValue": "[^\\.].*",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter": {
                            "name": "Path Filter",
                            "displayName": "Path Filter",
                            "description": "When Recurse Subdirectories is true, then only subdirectories whose path matches the given regular expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Batch Size": {
                            "name": "Batch Size",
                            "displayName": "Batch Size",
                            "description": "The maximum number of files to pull in each iteration",
                            "defaultValue": "10",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Keep Source File": {
                            "name": "Keep Source File",
                            "displayName": "Keep Source File",
                            "description": "If true, the file is not deleted after it has been copied to the Content Repository; this causes the file to be picked up continually and is useful for testing purposes.  If not keeping original NiFi will need write permissions on the directory it is pulling from otherwise it will ignore the file.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Recurse Subdirectories": {
                            "name": "Recurse Subdirectories",
                            "displayName": "Recurse Subdirectories",
                            "description": "Indicates whether or not to pull files from subdirectories",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Indicates how long to wait before performing a directory listing",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Hidden Files": {
                            "name": "Ignore Hidden Files",
                            "displayName": "Ignore Hidden Files",
                            "description": "Indicates whether or not hidden files should be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Age": {
                            "name": "Minimum File Age",
                            "displayName": "Minimum File Age",
                            "description": "The minimum age that a file must be in order to be pulled; any file younger than this amount of time (according to last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Age": {
                            "name": "Maximum File Age",
                            "displayName": "Maximum File Age",
                            "description": "The maximum age that a file must be in order to be pulled; any file older than this amount of time (according to last modification date) will be ignored",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Size": {
                            "name": "Minimum File Size",
                            "displayName": "Minimum File Size",
                            "description": "The minimum size that a file must be in order to be pulled",
                            "defaultValue": "0 B",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Size": {
                            "name": "Maximum File Size",
                            "displayName": "Maximum File Size",
                            "description": "The maximum size that a file can be in order to be pulled",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "5 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "f22403a2-254b-3e6d-d1f1-9cc7dac604af",
                "name": "Filesystem",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "f22403a2-254b-3e6d-d1f1-9cc7dac604af",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "Filesystem",
                    "type": "GetFile",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "7c5f22da-a9b9-3c71-3a63-a8ee211dc9f6",
            "uri": "https://localhost:8179/nifi-api/processors/7c5f22da-a9b9-3c71-3a63-a8ee211dc9f6",
            "position": {
                "x": 482.5220584116687,
                "y": 1059.2837036372548
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "7c5f22da-a9b9-3c71-3a63-a8ee211dc9f6",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 482.5220584116687,
                    "y": 1059.2837036372548
                },
                "name": "SFTP",
                "type": "org.apache.nifi.processors.standard.GetSFTP",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Hostname": null,
                        "Port": "22",
                        "Username": null,
                        "Password": null,
                        "Private Key Path": null,
                        "Private Key Passphrase": null,
                        "Remote Path": null,
                        "File Filter Regex": null,
                        "Path Filter Regex": null,
                        "Polling Interval": "60 sec",
                        "Search Recursively": "false",
                        "Ignore Dotted Files": "true",
                        "Delete Original": "true",
                        "Connection Timeout": "30 sec",
                        "Data Timeout": "30 sec",
                        "Host Key File": null,
                        "Max Selects": "100",
                        "Remote Poll Batch Size": "5000",
                        "Strict Host Key Checking": "false",
                        "Send Keep Alive On Timeout": "true",
                        "Use Compression": "false",
                        "Use Natural Ordering": "false"
                    },
                    "descriptors": {
                        "Hostname": {
                            "name": "Hostname",
                            "displayName": "Hostname",
                            "description": "The fully qualified hostname or IP address of the remote system",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Port": {
                            "name": "Port",
                            "displayName": "Port",
                            "description": "The port that the remote system is listening on for file transfers",
                            "defaultValue": "22",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Username": {
                            "name": "Username",
                            "displayName": "Username",
                            "description": "Username",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "Password for the user account",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Private Key Path": {
                            "name": "Private Key Path",
                            "displayName": "Private Key Path",
                            "description": "The fully qualified path to the Private Key file",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Private Key Passphrase": {
                            "name": "Private Key Passphrase",
                            "displayName": "Private Key Passphrase",
                            "description": "Password for the private key",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Remote Path": {
                            "name": "Remote Path",
                            "displayName": "Remote Path",
                            "description": "The path on the remote system from which to pull or push files",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter Regex": {
                            "name": "File Filter Regex",
                            "displayName": "File Filter Regex",
                            "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter Regex": {
                            "name": "Path Filter Regex",
                            "displayName": "Path Filter Regex",
                            "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Determines how long to wait between fetching the listing for new files",
                            "defaultValue": "60 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Search Recursively": {
                            "name": "Search Recursively",
                            "displayName": "Search Recursively",
                            "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Dotted Files": {
                            "name": "Ignore Dotted Files",
                            "displayName": "Ignore Dotted Files",
                            "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Delete Original": {
                            "name": "Delete Original",
                            "displayName": "Delete Original",
                            "description": "Determines whether or not the file is deleted from the remote system after it has been successfully transferred",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Connection Timeout": {
                            "name": "Connection Timeout",
                            "displayName": "Connection Timeout",
                            "description": "Amount of time to wait before timing out while creating a connection",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Data Timeout": {
                            "name": "Data Timeout",
                            "displayName": "Data Timeout",
                            "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Host Key File": {
                            "name": "Host Key File",
                            "displayName": "Host Key File",
                            "description": "If supplied, the given file will be used as the Host Key; otherwise, no use host key file will be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Selects": {
                            "name": "Max Selects",
                            "displayName": "Max Selects",
                            "description": "The maximum number of files to pull in a single connection",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Poll Batch Size": {
                            "name": "Remote Poll Batch Size",
                            "displayName": "Remote Poll Batch Size",
                            "description": "The value specifies how many file paths to find in a given directory on the remote system when doing a file listing. This value in general should not need to be modified but when polling against a remote system with a tremendous number of files this value can be critical.  Setting this value too high can result very poor performance and setting it too low can cause the flow to be slower than normal.",
                            "defaultValue": "5000",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Strict Host Key Checking": {
                            "name": "Strict Host Key Checking",
                            "displayName": "Strict Host Key Checking",
                            "description": "Indicates whether or not strict enforcement of hosts keys should be applied",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Send Keep Alive On Timeout": {
                            "name": "Send Keep Alive On Timeout",
                            "displayName": "Send Keep Alive On Timeout",
                            "description": "Indicates whether or not to send a single Keep Alive message when SSH socket times out",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Compression": {
                            "name": "Use Compression",
                            "displayName": "Use Compression",
                            "description": "Indicates whether or not ZLIB compression should be used when transferring files",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Natural Ordering": {
                            "name": "Use Natural Ordering",
                            "displayName": "Use Natural Ordering",
                            "description": "If true, will pull files in the order in which they are naturally listed; otherwise, the order in which the files will be pulled is not defined",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "7c5f22da-a9b9-3c71-3a63-a8ee211dc9f6",
                "name": "SFTP",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "7c5f22da-a9b9-3c71-3a63-a8ee211dc9f6",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "SFTP",
                    "type": "GetSFTP",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 5
            },
            "id": "f6fbef10-1bda-3590-3ffc-e0fe4647264f",
            "uri": "https://localhost:8179/nifi-api/processors/f6fbef10-1bda-3590-3ffc-e0fe4647264f",
            "position": {
                "x": 1129.854893075466,
                "y": 240.36730191487368
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "f6fbef10-1bda-3590-3ffc-e0fe4647264f",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 1129.854893075466,
                    "y": 240.36730191487368
                },
                "name": "Fetch RDBMS Data",
                "type": "com.thinkbiganalytics.nifi.v2.ingest.GetTableData",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#3cff00"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "nodata",
                        "description": "Successful but no new data to process.",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Successfully relationship.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Source Database Connection": "14a2aaca-6d30-3e3f-eee0-07c32c1d16de",
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "toy_store",
                        "System feed name": "products",
                        "Source Table": "toys.products",
                        "Source Fields": "productCode\nproductName\nproductLine\nproductScale\nproductVendor\nproductDescription\nquantityInStock\nbuyPrice\nMSRP",
                        "Load Strategy": "FULL_LOAD",
                        "High-Water Mark Property Name": "water.mark",
                        "Date Field": null,
                        "Overlap Period": "300 seconds",
                        "Max Wait Time": "0 seconds",
                        "Backoff Period": "300 seconds",
                        "Minimum Time Unit": "NONE",
                        "Output Type": "DELIMITED",
                        "Output Delimiter": ","
                    },
                    "descriptors": {
                        "Source Database Connection": {
                            "name": "Source Database Connection",
                            "displayName": "Source Database Connection",
                            "description": "The database where the source table resides",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo MySQL",
                                        "value": "14a2aaca-6d30-3e3f-eee0-07c32c1d16de"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo MySQL",
                                        "value": "adc4634a-0163-1000-81d8-40e5bab304cb"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source Table": {
                            "name": "Source Table",
                            "displayName": "Source Table",
                            "description": "Name of table including schema (if applicable)",
                            "defaultValue": "${metadata.table.sourceTableSchema.name}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source Fields": {
                            "name": "Source Fields",
                            "displayName": "Source Fields",
                            "description": "Field names (in order) to read from the source table. ie. the select fields. The format is separated by newline. Inconsistent order will cause corruption of the downstream Hive data.",
                            "defaultValue": "${metadata.table.sourceFields}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Load Strategy": {
                            "name": "Load Strategy",
                            "displayName": "Load Strategy",
                            "description": "Whether to load the entire table or perform an incremental extract",
                            "defaultValue": "FULL_LOAD",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "FULL_LOAD",
                                        "value": "FULL_LOAD"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "INCREMENTAL",
                                        "value": "INCREMENTAL"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "High-Water Mark Property Name": {
                            "name": "High-Water Mark Property Name",
                            "displayName": "High-Water Mark Property Name",
                            "description": "Name of the flow file attribute that should contain the current hig-water mark date, and which this processor will update with new values.  Required if the load strategy is set to INCREMENTAL.",
                            "defaultValue": "high.water.date",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Date Field": {
                            "name": "Date Field",
                            "displayName": "Date Field",
                            "description": "Source field containing a modified date for tracking incremental load",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Overlap Period": {
                            "name": "Overlap Period",
                            "displayName": "Overlap Period",
                            "description": "Amount of time to overlap into the last load date to ensure long running transactions missed by previous load weren't missed. Recommended: >0s",
                            "defaultValue": "0 seconds",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Wait Time": {
                            "name": "Max Wait Time",
                            "displayName": "Max Wait Time",
                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.",
                            "defaultValue": "0 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Backoff Period": {
                            "name": "Backoff Period",
                            "displayName": "Backoff Period",
                            "description": "Only records older than the backoff period will be eligible for pickup. This can be used in the ILM use case to define a retention period. Recommended: >5m",
                            "defaultValue": "300 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum Time Unit": {
                            "name": "Minimum Time Unit",
                            "displayName": "Minimum Time Unit",
                            "description": "The minimum unit of data eligible to load. For the ILM case, this would be DAY, WEEK, MONTH, YEAR , zero means there is no limit. Max time less than 1 second will be equal to zero.",
                            "defaultValue": "NONE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "NONE",
                                        "value": "NONE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "HOUR",
                                        "value": "HOUR"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DAY",
                                        "value": "DAY"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "WEEK",
                                        "value": "WEEK"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "MONTH",
                                        "value": "MONTH"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "YEAR",
                                        "value": "YEAR"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Output Type": {
                            "name": "Output Type",
                            "displayName": "Output Type",
                            "description": "How should the results be returned.  Either a Delimited output such as CSV, or AVRO.  If delimited you must specify the delimiter.",
                            "defaultValue": "DELIMITED",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DELIMITED",
                                        "value": "DELIMITED"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AVRO",
                                        "value": "AVRO"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Output Delimiter": {
                            "name": "Output Delimiter",
                            "displayName": "Output Delimiter",
                            "description": "Used only if the Output Type is 'Delimited'.  If this is empty and the Output Type is delimited it will default to a ','.  This property is not used if the Output Type is AVRO.",
                            "defaultValue": ",",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "f6fbef10-1bda-3590-3ffc-e0fe4647264f",
                "name": "Fetch RDBMS Data",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "f6fbef10-1bda-3590-3ffc-e0fe4647264f",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "Fetch RDBMS Data",
                    "type": "GetTableData",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 299,
                    "tasksDurationNanos": 20333107,
                    "tasks": "299",
                    "tasksDuration": "00:00:00.020",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "0cba481d-6b0c-3fbb-6db3-22d27fd07026",
            "uri": "https://localhost:8179/nifi-api/processors/0cba481d-6b0c-3fbb-6db3-22d27fd07026",
            "position": {
                "x": 572.3713852164756,
                "y": 1831.3033998668643
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "0cba481d-6b0c-3fbb-6db3-22d27fd07026",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 572.3713852164756,
                    "y": 1831.3033998668643
                },
                "name": "Manual Retry Savepoint",
                "type": "com.thinkbiganalytics.nifi.v2.savepoint.TriggerSavepoint",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles will be routed to this relationship if the route_to_failure property is true or an error occurs",
                        "autoTerminate": true
                    },
                    {
                        "name": "max retries",
                        "description": "FlowFiles that exceeded maximum retries are routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "A successful operation will result in FlowFile on this relationship",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "savepoint-service": "520f2529-14b8-37bb-57d5-8f2da65b5e93",
                        "savepoint-id": "${savepoint.id}",
                        "behavior": "FAIL",
                        "max-retries": "10"
                    },
                    "descriptors": {
                        "savepoint-service": {
                            "name": "savepoint-service",
                            "displayName": "Savepoint service",
                            "description": "The Controller Service used to manage retry and release signals for savepoints.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "adc39cd8-0163-1000-9c83-676226a01aa6"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.core.savepoint.SavepointController",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "savepoint-id": {
                            "name": "savepoint-id",
                            "displayName": "Savepoint Id",
                            "description": "A value, or the results of an Attribute Expression Language statement, which will be evaluated against a FlowFile in order to determine the savepoint key",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "behavior": {
                            "name": "behavior",
                            "displayName": "Behavior",
                            "description": "The behavior to apply to the setpoint",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "RETRY",
                                        "value": "RETRY"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "RELEASE",
                                        "value": "RELEASE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "FAIL",
                                        "value": "FAIL"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "max-retries": {
                            "name": "max-retries",
                            "displayName": "Max Retries",
                            "description": "Maximum number of retries before flowfile is routed to failure.",
                            "defaultValue": "10",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 2000,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "0cba481d-6b0c-3fbb-6db3-22d27fd07026",
                "name": "Manual Retry Savepoint",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "0cba481d-6b0c-3fbb-6db3-22d27fd07026",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Manual Retry Savepoint",
                    "type": "TriggerSavepoint",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "328e7fcf-a895-38bc-fa33-1dba1df2cd6c",
            "uri": "https://localhost:8179/nifi-api/processors/328e7fcf-a895-38bc-fa33-1dba1df2cd6c",
            "position": {
                "x": 537.0705283231109,
                "y": 2896.000050594327
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "328e7fcf-a895-38bc-fa33-1dba1df2cd6c",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 537.0705283231109,
                    "y": 2896.000050594327
                },
                "name": "Set Cleanup Defaults",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "hdfs.ingest.root": "${hdfs.ingest.root:replaceEmpty('/etl')}",
                        "hive.ingest.root": "${hive.ingest.root:replaceEmpty('/model.db')}",
                        "hive.master.root": "${hive.master.root:replaceEmpty('/app/warehouse')}",
                        "hive.profile.root": "${hive.profile.root:replaceEmpty('/model.db')}"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "328e7fcf-a895-38bc-fa33-1dba1df2cd6c",
                "name": "Set Cleanup Defaults",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "328e7fcf-a895-38bc-fa33-1dba1df2cd6c",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Set Cleanup Defaults",
                    "type": "UpdateAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "cf198fce-bb9a-3c4d-b912-dfd6a1de32f4",
            "uri": "https://localhost:8179/nifi-api/processors/cf198fce-bb9a-3c4d-b912-dfd6a1de32f4",
            "position": {
                "x": 2183.2402192532627,
                "y": 847.8826325411774
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "cf198fce-bb9a-3c4d-b912-dfd6a1de32f4",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 2183.2402192532627,
                    "y": 847.8826325411774
                },
                "name": "Register HDFS Folders",
                "type": "com.thinkbiganalytics.nifi.v2.hdfs.CreateHDFSFolder",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-hadoop-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#da05ff"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Hadoop Configuration Resources": "/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml",
                        "Kerberos Principal": "nifi-userb/sandbox.kylo.io",
                        "Kerberos Keytab": "/etc/security/keytabs/nifib.headless.keytab",
                        "Kerberos Relogin Period": "4 hours",
                        "Directory": "${hive.ingest.root}/${category}\n${hive.ingest.root}/${category}/${feed}\n${hive.ingest.root}/${category}/${feed}/feed\n${hive.ingest.root}/${category}/${feed}/valid\n${hive.ingest.root}/${category}/${feed}/invalid\n${hive.profile.root}/${category}\n${hive.profile.root}/${category}/${feed}\n${hive.profile.root}/${category}/${feed}/profile\n${hive.master.root}\n${hive.master.root}/${category}/\n${hive.master.root}/${category}/${feed}\n${hdfs.ingest.root}/${category}\n${hdfs.ingest.root}/${category}/${feed}",
                        "Permissions umask": null,
                        "Remote Owner": null,
                        "Remote Group": null
                    },
                    "descriptors": {
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Relogin Period": {
                            "name": "Kerberos Relogin Period",
                            "displayName": "Kerberos Relogin Period",
                            "description": "Period of time which should pass before attempting a kerberos relogin",
                            "defaultValue": "4 hours",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Directory": {
                            "name": "Directory",
                            "displayName": "Directory",
                            "description": "The full HDFS directory(s) to create separated by newline",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Permissions umask": {
                            "name": "Permissions umask",
                            "displayName": "Permissions umask",
                            "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration fs.permissions.umask-mode",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Owner": {
                            "name": "Remote Owner",
                            "displayName": "Remote Owner",
                            "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Remote Group": {
                            "name": "Remote Group",
                            "displayName": "Remote Group",
                            "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "30 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 10,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "cf198fce-bb9a-3c4d-b912-dfd6a1de32f4",
                "name": "Register HDFS Folders",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "cf198fce-bb9a-3c4d-b912-dfd6a1de32f4",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Register HDFS Folders",
                    "type": "CreateHDFSFolder",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "834c143a-1245-3464-bdb1-625b0d7ab2cb",
            "uri": "https://localhost:8179/nifi-api/processors/834c143a-1245-3464-bdb1-625b0d7ab2cb",
            "position": {
                "x": 2342.240425547301,
                "y": 474.9038470586529
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "834c143a-1245-3464-bdb1-625b0d7ab2cb",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 2342.240425547301,
                    "y": 474.9038470586529
                },
                "name": "Detect DB Avro Ingest",
                "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "table-avro",
                        "description": "",
                        "autoTerminate": false
                    },
                    {
                        "name": "unmatched",
                        "description": "FlowFiles that do not match any user-define expression will be routed here",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Routing Strategy": "Route to Property name",
                        "table-avro": "${db.table.output.format:equals('AVRO')}"
                    },
                    "descriptors": {
                        "Routing Strategy": {
                            "name": "Routing Strategy",
                            "displayName": "Routing Strategy",
                            "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                            "defaultValue": "Route to Property name",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to Property name",
                                        "value": "Route to Property name",
                                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if all match",
                                        "value": "Route to 'match' if all match",
                                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if any matches",
                                        "value": "Route to 'match' if any matches",
                                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "table-avro": {
                            "name": "table-avro",
                            "displayName": "table-avro",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "834c143a-1245-3464-bdb1-625b0d7ab2cb",
                "name": "Detect DB Avro Ingest",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "834c143a-1245-3464-bdb1-625b0d7ab2cb",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "Detect DB Avro Ingest",
                    "type": "RouteOnAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "ac8bbddf-1e6e-3cd9-8c2c-b6d62dc9d9a2",
            "uri": "https://localhost:8179/nifi-api/processors/ac8bbddf-1e6e-3cd9-8c2c-b6d62dc9d9a2",
            "position": {
                "x": 1782.9553713302557,
                "y": 1354.9560579438003
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "ac8bbddf-1e6e-3cd9-8c2c-b6d62dc9d9a2",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 1782.9553713302557,
                    "y": 1354.9560579438003
                },
                "name": "Initialize Cleanup Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "category": "toy_store",
                        "feed": "products",
                        "hdfs.ingest.root": "/etl",
                        "hive.ingest.root": "/model.db",
                        "hive.master.root": "/app/warehouse",
                        "hive.profile.root": "/model.db"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "category": {
                            "name": "category",
                            "displayName": "category",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "feed": {
                            "name": "feed",
                            "displayName": "feed",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "ac8bbddf-1e6e-3cd9-8c2c-b6d62dc9d9a2",
                "name": "Initialize Cleanup Parameters",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "ac8bbddf-1e6e-3cd9-8c2c-b6d62dc9d9a2",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "Initialize Cleanup Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "0357f6d5-144a-34fc-1e2b-80c613661583",
            "uri": "https://localhost:8179/nifi-api/processors/0357f6d5-144a-34fc-1e2b-80c613661583",
            "position": {
                "x": 1127.1487774900197,
                "y": 10
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "0357f6d5-144a-34fc-1e2b-80c613661583",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 1127.1487774900197,
                    "y": 10
                },
                "name": "Failed - Release Highwater Mark",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.ReleaseHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#f21308"
                },
                "relationships": [
                    {
                        "name": "cancelledWaterMark",
                        "description": "The active water mark for the flowfile was cancelled",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "concerts",
                        "System feed name": "venues",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Mode": "REJECT",
                        "Release All": "true"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Mode": {
                            "name": "Mode",
                            "displayName": "Mode",
                            "description": "Indicates whether this processor should commit or reject high-water mark updates",
                            "defaultValue": "COMMIT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Commit",
                                        "value": "COMMIT",
                                        "description": "Commits the updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Reject",
                                        "value": "REJECT",
                                        "description": "Rejects any updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Release All": {
                            "name": "Release All",
                            "displayName": "Release All",
                            "description": "If true, commits or rolls back all pending high-water marks.  Otherwise, commits/rolls back only the named water mark property.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "0357f6d5-144a-34fc-1e2b-80c613661583",
                "name": "Failed - Release Highwater Mark",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "0357f6d5-144a-34fc-1e2b-80c613661583",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "Failed - Release Highwater Mark",
                    "type": "ReleaseHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "775915bf-1529-31bf-e2f3-1fe5eb92a6d3",
            "uri": "https://localhost:8179/nifi-api/processors/775915bf-1529-31bf-e2f3-1fe5eb92a6d3",
            "position": {
                "x": 1760.7356959620392,
                "y": 473.52102002896936
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "775915bf-1529-31bf-e2f3-1fe5eb92a6d3",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 1760.7356959620392,
                    "y": 473.52102002896936
                },
                "name": "Savepoint 1",
                "type": "com.thinkbiganalytics.nifi.v2.savepoint.SetSavepoint",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "expired",
                        "description": "A FlowFile that has exceeded the configured expiration Duration will be routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "failure",
                        "description": "FlowFiles will be routed to this relationship if the controller cannot be reached or Savepoint Identifier evaluates to null or empty",
                        "autoTerminate": false
                    },
                    {
                        "name": "release-failure",
                        "description": "A FlowFile with a release signal from controller will be routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "release-success",
                        "description": "A FlowFile with a release signal from controller will be routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "try",
                        "description": "A FlowFile will be cloned upon new entry or receiving a retry signal from the controller and routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "savepoint-id": "${savepoint.id}",
                        "expiration-duration": "72 hours",
                        "savepoint-service": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                    },
                    "descriptors": {
                        "savepoint-id": {
                            "name": "savepoint-id",
                            "displayName": "Savepoint Id",
                            "description": "A value, or the results of an Attribute Expression Language statement, which will be evaluated against a FlowFile in order to determine the savepoint key",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "expiration-duration": {
                            "name": "expiration-duration",
                            "displayName": "Expiration Duration",
                            "description": "Indicates the duration after which waiting FlowFiles will be routed to the 'expired' relationship",
                            "defaultValue": "72 hours",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "savepoint-service": {
                            "name": "savepoint-service",
                            "displayName": "Savepoint service",
                            "description": "The Controller Service used to manage retry and release signals for savepoints.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "adc39cd8-0163-1000-9c83-676226a01aa6"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.core.savepoint.SavepointController",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 2000,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "775915bf-1529-31bf-e2f3-1fe5eb92a6d3",
                "name": "Savepoint 1",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "775915bf-1529-31bf-e2f3-1fe5eb92a6d3",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "Savepoint 1",
                    "type": "SetSavepoint",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "eef64f5d-8e5e-3fc9-6ad3-4551681191e7",
            "uri": "https://localhost:8179/nifi-api/processors/eef64f5d-8e5e-3fc9-6ad3-4551681191e7",
            "position": {
                "x": 677.4852474104159,
                "y": 1027.7922666627755
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "eef64f5d-8e5e-3fc9-6ad3-4551681191e7",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 677.4852474104159,
                    "y": 1027.7922666627755
                },
                "name": "Set Document Identifier (Elasticsearch)",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Do not store state",
                        "Stateful Variables Initial Value": null,
                        "documentId": "${category}::${feed}::${hash.value}"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "documentId": {
                            "name": "documentId",
                            "displayName": "documentId",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "eef64f5d-8e5e-3fc9-6ad3-4551681191e7",
                "name": "Set Document Identifier (Elasticsearch)",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "eef64f5d-8e5e-3fc9-6ad3-4551681191e7",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Set Document Identifier (Elasticsearch)",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "968c7fbb-1d01-3779-1180-1d84c271129a",
            "uri": "https://localhost:8179/nifi-api/processors/968c7fbb-1d01-3779-1180-1d84c271129a",
            "position": {
                "x": 1850.465234518328,
                "y": 14.134019723669098
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "968c7fbb-1d01-3779-1180-1d84c271129a",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 1850.465234518328,
                    "y": 14.134019723669098
                },
                "name": "Extract Feed Data",
                "type": "com.thinkbiganalytics.nifi.v2.thrift.ExecuteHQL",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-hadoop-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Successfully created FlowFile from SQL query result set.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Database Connection Pooling Service": "51f09b62-b321-39b3-e7fb-cb527eba7521",
                        "SQL select query": "select ${fieldIndexString},'${category}' as kylo_schema,'${feed}' as kylo_table from ${category}.${feed}_valid where processing_dttm = ${feedts}",
                        "Max Wait Time": "0 seconds"
                    },
                    "descriptors": {
                        "Database Connection Pooling Service": {
                            "name": "Database Connection Pooling Service",
                            "displayName": "Database Connection Pooling Service",
                            "description": "The Controller Service that is used to obtain connection to database",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "51f09b62-b321-39b3-e7fb-cb527eba7521"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "adc2fd36-0163-1000-c94e-9156591e27ee"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.thrift.ThriftService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "SQL select query": {
                            "name": "SQL select query",
                            "displayName": "SQL select query",
                            "description": "SQL select query",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Wait Time": {
                            "name": "Max Wait Time",
                            "displayName": "Max Wait Time",
                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.",
                            "defaultValue": "0 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "968c7fbb-1d01-3779-1180-1d84c271129a",
                "name": "Extract Feed Data",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "968c7fbb-1d01-3779-1180-1d84c271129a",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Extract Feed Data",
                    "type": "ExecuteHQL",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "7742b4bd-5e56-3cf1-1196-ded46685cc62",
            "uri": "https://localhost:8179/nifi-api/processors/7742b4bd-5e56-3cf1-1196-ded46685cc62",
            "position": {
                "x": 484.6596097638876,
                "y": 1379.7242560733466
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "7742b4bd-5e56-3cf1-1196-ded46685cc62",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 484.6596097638876,
                    "y": 1379.7242560733466
                },
                "name": "REST Service",
                "type": "org.apache.nifi.processors.standard.InvokeHTTP",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "Failure",
                        "description": "The original FlowFile will be routed on any type of connection failure, timeout or general exception. It will have new attributes detailing the request.",
                        "autoTerminate": true
                    },
                    {
                        "name": "No Retry",
                        "description": "The original FlowFile will be routed on any status code that should NOT be retried (1xx, 3xx, 4xx status codes).  It will have new attributes detailing the request.",
                        "autoTerminate": true
                    },
                    {
                        "name": "Original",
                        "description": "The original FlowFile will be routed upon success (2xx status codes). It will have new attributes detailing the success of the request.",
                        "autoTerminate": true
                    },
                    {
                        "name": "Response",
                        "description": "A Response FlowFile will be routed upon success (2xx status codes). If the 'Output Response Regardless' property is true then the response will be sent to this relationship regardless of the status code received.",
                        "autoTerminate": false
                    },
                    {
                        "name": "Retry",
                        "description": "The original FlowFile will be routed on any status code that can be retried (5xx status codes). It will have new attributes detailing the request.",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "HTTP Method": "GET",
                        "Remote URL": null,
                        "SSL Context Service": null,
                        "Connection Timeout": "5 secs",
                        "Read Timeout": "15 secs",
                        "Include Date Header": "True",
                        "Follow Redirects": "True",
                        "Attributes to Send": null,
                        "Basic Authentication Username": null,
                        "Basic Authentication Password": null,
                        "Proxy Host": null,
                        "Proxy Port": null,
                        "Proxy Type": "http",
                        "invokehttp-proxy-user": null,
                        "invokehttp-proxy-password": null,
                        "Put Response Body In Attribute": null,
                        "Max Length To Put In Attribute": "256",
                        "Digest Authentication": "false",
                        "Always Output Response": "false",
                        "Trusted Hostname": null,
                        "Add Response Headers to Request": "false",
                        "Content-Type": "${mime.type}",
                        "send-message-body": "true",
                        "Use Chunked Encoding": "false",
                        "Penalize on \"No Retry\"": "false",
                        "use-etag": "false",
                        "etag-max-cache-size": "10MB"
                    },
                    "descriptors": {
                        "HTTP Method": {
                            "name": "HTTP Method",
                            "displayName": "HTTP Method",
                            "description": "HTTP request method (GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS). Arbitrary methods are also supported. Methods other than POST, PUT and PATCH will be sent without a message body.",
                            "defaultValue": "GET",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Remote URL": {
                            "name": "Remote URL",
                            "displayName": "Remote URL",
                            "description": "Remote URL which will be connected to, including scheme, host, port, path.",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "The SSL Context Service used to provide client certificate information for TLS/SSL (https) connections. It is also used to connect to HTTPS Proxy.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Connection Timeout": {
                            "name": "Connection Timeout",
                            "displayName": "Connection Timeout",
                            "description": "Max wait time for connection to remote service.",
                            "defaultValue": "5 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Read Timeout": {
                            "name": "Read Timeout",
                            "displayName": "Read Timeout",
                            "description": "Max wait time for response from remote service.",
                            "defaultValue": "15 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Include Date Header": {
                            "name": "Include Date Header",
                            "displayName": "Include Date Header",
                            "description": "Include an RFC-2616 Date header in the request.",
                            "defaultValue": "True",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "True"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "False"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Follow Redirects": {
                            "name": "Follow Redirects",
                            "displayName": "Follow Redirects",
                            "description": "Follow HTTP redirects issued by remote server.",
                            "defaultValue": "True",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "True"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "False"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Attributes to Send": {
                            "name": "Attributes to Send",
                            "displayName": "Attributes to Send",
                            "description": "Regular expression that defines which attributes to send as HTTP headers in the request. If not defined, no attributes are sent as headers. Also any dynamic properties set will be sent as headers. The dynamic property key will be the header key and the dynamic property value will be interpreted as expression language will be the header value.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Basic Authentication Username": {
                            "name": "Basic Authentication Username",
                            "displayName": "Basic Authentication Username",
                            "description": "The username to be used by the client to authenticate against the Remote URL.  Cannot include control characters (0-31), ':', or DEL (127).",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Basic Authentication Password": {
                            "name": "Basic Authentication Password",
                            "displayName": "Basic Authentication Password",
                            "description": "The password to be used by the client to authenticate against the Remote URL.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "The fully qualified hostname or IP address of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Port": {
                            "name": "Proxy Port",
                            "displayName": "Proxy Port",
                            "description": "The port of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Type": {
                            "name": "Proxy Type",
                            "displayName": "Proxy Type",
                            "description": "The type of the proxy we are connecting to. Must be either http or https",
                            "defaultValue": "http",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "invokehttp-proxy-user": {
                            "name": "invokehttp-proxy-user",
                            "displayName": "Proxy Username",
                            "description": "Username to set when authenticating against proxy",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "invokehttp-proxy-password": {
                            "name": "invokehttp-proxy-password",
                            "displayName": "Proxy Password",
                            "description": "Password to set when authenticating against proxy",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Put Response Body In Attribute": {
                            "name": "Put Response Body In Attribute",
                            "displayName": "Put Response Body In Attribute",
                            "description": "If set, the response body received back will be put into an attribute of the original FlowFile instead of a separate FlowFile. The attribute key to put to is determined by evaluating value of this property. ",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Length To Put In Attribute": {
                            "name": "Max Length To Put In Attribute",
                            "displayName": "Max Length To Put In Attribute",
                            "description": "If routing the response body to an attribute of the original (by setting the \"Put response body in attribute\" property or by receiving an error status code), the number of characters put to the attribute value will be at most this amount. This is important because attributes are held in memory and large attributes will quickly cause out of memory issues. If the output goes longer than this value, it will be truncated to fit. Consider making this smaller if able.",
                            "defaultValue": "256",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Digest Authentication": {
                            "name": "Digest Authentication",
                            "displayName": "Use Digest Authentication",
                            "description": "Whether to communicate with the website using Digest Authentication. 'Basic Authentication Username' and 'Basic Authentication Password' are used for authentication.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Always Output Response": {
                            "name": "Always Output Response",
                            "displayName": "Always Output Response",
                            "description": "Will force a response FlowFile to be generated and routed to the 'Response' relationship regardless of what the server status code received is or if the processor is configured to put the server response body in the request attribute. In the later configuration a request FlowFile with the response body in the attribute and a typical response FlowFile will be emitted to their respective relationships.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Trusted Hostname": {
                            "name": "Trusted Hostname",
                            "displayName": "Trusted Hostname",
                            "description": "Bypass the normal truststore hostname verifier to allow the specified remote hostname as trusted. Enabling this property has MITM security implications, use wisely. Will still accept other connections based on the normal truststore hostname verifier. Only valid with SSL (HTTPS) connections.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Add Response Headers to Request": {
                            "name": "Add Response Headers to Request",
                            "displayName": "Add Response Headers to Request",
                            "description": "Enabling this property saves all the response headers to the original request. This may be when the response headers are needed but a response is not generated due to the status code received.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Content-Type": {
                            "name": "Content-Type",
                            "displayName": "Content-Type",
                            "description": "The Content-Type to specify for when content is being transmitted through a PUT, POST or PATCH. In the case of an empty value after evaluating an expression language expression, Content-Type defaults to application/octet-stream",
                            "defaultValue": "${mime.type}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "send-message-body": {
                            "name": "send-message-body",
                            "displayName": "Send Message Body",
                            "description": "If true, sends the HTTP message body on POST/PUT/PATCH requests (default).  If false, suppresses the message body and content-type header for these requests.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Chunked Encoding": {
                            "name": "Use Chunked Encoding",
                            "displayName": "Use Chunked Encoding",
                            "description": "When POST'ing, PUT'ing or PATCH'ing content set this property to true in order to not pass the 'Content-length' header and instead send 'Transfer-Encoding' with a value of 'chunked'. This will enable the data transfer mechanism which was introduced in HTTP 1.1 to pass data of unknown lengths in chunks.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Penalize on \"No Retry\"": {
                            "name": "Penalize on \"No Retry\"",
                            "displayName": "Penalize on \"No Retry\"",
                            "description": "Enabling this property will penalize FlowFiles that are routed to the \"No Retry\" relationship.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "use-etag": {
                            "name": "use-etag",
                            "displayName": "Use HTTP ETag",
                            "description": "Enable HTTP entity tag (ETag) support for HTTP requests.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "etag-max-cache-size": {
                            "name": "etag-max-cache-size",
                            "displayName": "Maximum ETag Cache Size",
                            "description": "The maximum size that the ETag cache should be allowed to grow to. The default size is 10MB.",
                            "defaultValue": "10MB",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "7742b4bd-5e56-3cf1-1196-ded46685cc62",
                "name": "REST Service",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "7742b4bd-5e56-3cf1-1196-ded46685cc62",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "REST Service",
                    "type": "InvokeHTTP",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "5d943175-8e7b-3be1-8d24-ae9841220a5e",
            "uri": "https://localhost:8179/nifi-api/processors/5d943175-8e7b-3be1-8d24-ae9841220a5e",
            "position": {
                "x": 3289.4774506122944,
                "y": 2619.0937009188992
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "5d943175-8e7b-3be1-8d24-ae9841220a5e",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 3289.4774506122944,
                    "y": 2619.0937009188992
                },
                "name": "Update Index",
                "type": "org.apache.nifi.jms.processors.PublishJMS",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-jms-processors-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "All FlowFiles that cannot be sent to JMS destination are routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All FlowFiles that are sent to the JMS destination are routed to this relationship",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Connection Factory Service": "341ad194-9884-3ae3-1d07-ec78f6f9ec5a",
                        "Destination Name": "thinkbig.nifi.index",
                        "Destination Type": "QUEUE",
                        "User Name": null,
                        "Password": null,
                        "Connection Client ID": null,
                        "Session Cache size": "1",
                        "message-body-type": "bytes",
                        "character-set": "UTF-8"
                    },
                    "descriptors": {
                        "Connection Factory Service": {
                            "name": "Connection Factory Service",
                            "displayName": "Connection Factory Service",
                            "description": "The Controller Service that is used to obtain ConnectionFactory",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "JMSConnectionFactoryProvider",
                                        "value": "341ad194-9884-3ae3-1d07-ec78f6f9ec5a"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "JMSConnectionFactoryProvider",
                                        "value": "adc2fd10-0163-1000-6bee-28216e32df50"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.jms.cf.JMSConnectionFactoryProviderDefinition",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-jms-cf-service-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Destination Name": {
                            "name": "Destination Name",
                            "displayName": "Destination Name",
                            "description": "The name of the JMS Destination. Usually provided by the administrator (e.g., 'topic://myTopic' or 'myTopic').",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Destination Type": {
                            "name": "Destination Type",
                            "displayName": "Destination Type",
                            "description": "The type of the JMS Destination. Could be one of 'QUEUE' or 'TOPIC'. Usually provided by the administrator. Defaults to 'TOPIC",
                            "defaultValue": "QUEUE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "QUEUE",
                                        "value": "QUEUE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "TOPIC",
                                        "value": "TOPIC"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "User Name": {
                            "name": "User Name",
                            "displayName": "User Name",
                            "description": "User Name used for authentication and authorization.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "Password used for authentication and authorization.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Connection Client ID": {
                            "name": "Connection Client ID",
                            "displayName": "Connection Client ID",
                            "description": "The client id to be set on the connection, if set. For durable non shared consumer this is mandatory, for all others it is optional, typically with shared consumers it is undesirable to be set. Please see JMS spec for further details",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Session Cache size": {
                            "name": "Session Cache size",
                            "displayName": "Session Cache size",
                            "description": "This property is deprecated and no longer has any effect on the Processor. It will be removed in a later version.",
                            "defaultValue": "1",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "message-body-type": {
                            "name": "message-body-type",
                            "displayName": "Message Body Type",
                            "description": "The type of JMS message body to construct.",
                            "defaultValue": "bytes",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "bytes",
                                        "value": "bytes"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "text",
                                        "value": "text"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "character-set": {
                            "name": "character-set",
                            "displayName": "Character Set",
                            "description": "The name of the character set to use to construct or interpret TextMessages",
                            "defaultValue": "UTF-8",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "5d943175-8e7b-3be1-8d24-ae9841220a5e",
                "name": "Update Index",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "5d943175-8e7b-3be1-8d24-ae9841220a5e",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Update Index",
                    "type": "PublishJMS",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "2b0ac046-82e5-3622-af7a-0b4114ab6d18",
            "uri": "https://localhost:8179/nifi-api/processors/2b0ac046-82e5-3622-af7a-0b4114ab6d18",
            "position": {
                "x": 2189.0107648365065,
                "y": 1487.9115161008804
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "2b0ac046-82e5-3622-af7a-0b4114ab6d18",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 2189.0107648365065,
                    "y": 1487.9115161008804
                },
                "name": "Record Initialization",
                "type": "com.thinkbiganalytics.nifi.v2.init.CompleteInitializeFeed",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#da05ff"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "${category}",
                        "System feed name": "${feed}",
                        "Initialization Result": "SUCCESSFUL"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Initialization Result": {
                            "name": "Initialization Result",
                            "displayName": "Initialization Result",
                            "description": "Indicates how this processor should behave when a flow file arrives after feed initialization has failed.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Successful",
                                        "value": "SUCCESSFUL",
                                        "description": "The mode indicating feed initialization was successful."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Failure",
                                        "value": "FAILURE",
                                        "description": "The mode indicating feed initialization failed."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "2b0ac046-82e5-3622-af7a-0b4114ab6d18",
                "name": "Record Initialization",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "2b0ac046-82e5-3622-af7a-0b4114ab6d18",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Record Initialization",
                    "type": "CompleteInitializeFeed",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "459971e4-7448-3c23-6cb6-3b81a11991a3",
            "uri": "https://localhost:8179/nifi-api/processors/459971e4-7448-3c23-6cb6-3b81a11991a3",
            "position": {
                "x": 2946.996346597596,
                "y": 471.82618889558034
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "459971e4-7448-3c23-6cb6-3b81a11991a3",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 2946.996346597596,
                    "y": 471.82618889558034
                },
                "name": "DB Avro Ingest Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "metadata.table.feedFieldStructure": "${db.table.avro.schema}",
                        "skipHeader": "false"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "metadata.table.feedFieldStructure": {
                            "name": "metadata.table.feedFieldStructure",
                            "displayName": "metadata.table.feedFieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "skipHeader": {
                            "name": "skipHeader",
                            "displayName": "skipHeader",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "459971e4-7448-3c23-6cb6-3b81a11991a3",
                "name": "DB Avro Ingest Parameters",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "459971e4-7448-3c23-6cb6-3b81a11991a3",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "DB Avro Ingest Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "679b7752-9b9c-34b0-ca57-a1b05e0f4559",
            "uri": "https://localhost:8179/nifi-api/processors/679b7752-9b9c-34b0-ca57-a1b05e0f4559",
            "position": {
                "x": 16.205852895502176,
                "y": 755.3197421390705
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "679b7752-9b9c-34b0-ca57-a1b05e0f4559",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 16.205852895502176,
                    "y": 755.3197421390705
                },
                "name": "S3",
                "type": "org.apache.nifi.processors.aws.s3.ListS3",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-aws-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "FlowFiles are routed to success relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": false,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Bucket": null,
                        "Region": "us-west-2",
                        "Access Key": null,
                        "Secret Key": null,
                        "Credentials File": null,
                        "AWS Credentials Provider service": "0b5d880d-58e7-32b9-0000-000000000000",
                        "Communications Timeout": "30 secs",
                        "SSL Context Service": null,
                        "Endpoint Override URL": null,
                        "Signer Override": "Default Signature",
                        "Proxy Host": null,
                        "Proxy Host Port": null,
                        "delimiter": null,
                        "prefix": null,
                        "use-versions": "false",
                        "list-type": "1",
                        "min-age": "0 sec"
                    },
                    "descriptors": {
                        "Bucket": {
                            "name": "Bucket",
                            "displayName": "Bucket",
                            "description": "",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Region": {
                            "name": "Region",
                            "displayName": "Region",
                            "description": "",
                            "defaultValue": "us-west-2",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "us-gov-west-1",
                                        "value": "us-gov-west-1",
                                        "description": "us-gov-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-1",
                                        "value": "us-east-1",
                                        "description": "us-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-2",
                                        "value": "us-east-2",
                                        "description": "us-east-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-1",
                                        "value": "us-west-1",
                                        "description": "us-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-2",
                                        "value": "us-west-2",
                                        "description": "us-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-1",
                                        "value": "eu-west-1",
                                        "description": "eu-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-2",
                                        "value": "eu-west-2",
                                        "description": "eu-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-central-1",
                                        "value": "eu-central-1",
                                        "description": "eu-central-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-south-1",
                                        "value": "ap-south-1",
                                        "description": "ap-south-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-1",
                                        "value": "ap-southeast-1",
                                        "description": "ap-southeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-2",
                                        "value": "ap-southeast-2",
                                        "description": "ap-southeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-1",
                                        "value": "ap-northeast-1",
                                        "description": "ap-northeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-2",
                                        "value": "ap-northeast-2",
                                        "description": "ap-northeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "sa-east-1",
                                        "value": "sa-east-1",
                                        "description": "sa-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "cn-north-1",
                                        "value": "cn-north-1",
                                        "description": "cn-north-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ca-central-1",
                                        "value": "ca-central-1",
                                        "description": "ca-central-1"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Access Key": {
                            "name": "Access Key",
                            "displayName": "Access Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Secret Key": {
                            "name": "Secret Key",
                            "displayName": "Secret Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Credentials File": {
                            "name": "Credentials File",
                            "displayName": "Credentials File",
                            "description": "Path to a file containing AWS access key and secret key in properties file format.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "AWS Credentials Provider service": {
                            "name": "AWS Credentials Provider service",
                            "displayName": "AWS Credentials Provider service",
                            "description": "The Controller Service that is used to obtain aws credentials provider",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "adc46394-0163-1000-4fc1-afbc4db6d274"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "b63b608a-40fb-3499-0efd-60054f62dade"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-aws-service-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Communications Timeout": {
                            "name": "Communications Timeout",
                            "displayName": "Communications Timeout",
                            "description": "",
                            "defaultValue": "30 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Endpoint Override URL": {
                            "name": "Endpoint Override URL",
                            "displayName": "Endpoint Override URL",
                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Signer Override": {
                            "name": "Signer Override",
                            "displayName": "Signer Override",
                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                            "defaultValue": "Default Signature",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Default Signature",
                                        "value": "Default Signature"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v4",
                                        "value": "AWSS3V4SignerType"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v2",
                                        "value": "S3SignerType"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "Proxy host name or IP",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Host Port": {
                            "name": "Proxy Host Port",
                            "displayName": "Proxy Host Port",
                            "description": "Proxy host port",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "delimiter": {
                            "name": "delimiter",
                            "displayName": "Delimiter",
                            "description": "The string used to delimit directories within the bucket. Please consult the AWS documentation for the correct use of this field.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "prefix": {
                            "name": "prefix",
                            "displayName": "Prefix",
                            "description": "The prefix used to filter the object list. In most cases, it should end with a forward slash ('/').",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "use-versions": {
                            "name": "use-versions",
                            "displayName": "Use Versions",
                            "description": "Specifies whether to use S3 versions, if applicable.  If false, only the latest version of each object will be returned.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "list-type": {
                            "name": "list-type",
                            "displayName": "List Type",
                            "description": "Specifies whether to use the original List Objects or the newer List Objects Version 2 endpoint.",
                            "defaultValue": "1",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "List Objects V1",
                                        "value": "1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "List Objects V2",
                                        "value": "2"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "min-age": {
                            "name": "min-age",
                            "displayName": "Minimum Object Age",
                            "description": "The minimum age that an S3 object must be in order to be considered; any object younger than this amount of time (according to last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "679b7752-9b9c-34b0-ca57-a1b05e0f4559",
                "name": "S3",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "679b7752-9b9c-34b0-ca57-a1b05e0f4559",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "S3",
                    "type": "ListS3",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "2f6168c3-fe58-35b3-98f5-9281754a37f0",
            "uri": "https://localhost:8179/nifi-api/processors/2f6168c3-fe58-35b3-98f5-9281754a37f0",
            "position": {
                "x": 477.3463277278479,
                "y": 911.9318201342085
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "2f6168c3-fe58-35b3-98f5-9281754a37f0",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 477.3463277278479,
                    "y": 911.9318201342085
                },
                "name": "Fetch Azure BLOB",
                "type": "org.apache.nifi.processors.azure.storage.FetchAzureBlobStorage",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-azure-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Unsuccessful operations will be transferred to the failure relationship.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successfully processed FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "container-name": "${azure.container}",
                        "storage-sas-token": null,
                        "storage-account-name": null,
                        "storage-account-key": null,
                        "blob": "${azure.blobname}"
                    },
                    "descriptors": {
                        "container-name": {
                            "name": "container-name",
                            "displayName": "Container Name",
                            "description": "Name of the Azure storage container",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-sas-token": {
                            "name": "storage-sas-token",
                            "displayName": "SAS Token",
                            "description": "Shared Access Signature token, including the leading '?'. Specify either SAS Token (recommended) or Account Key. There are certain risks in allowing the SAS token to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-name": {
                            "name": "storage-account-name",
                            "displayName": "Storage Account Name",
                            "description": "The storage account name.  There are certain risks in allowing the account name to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": true,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-key": {
                            "name": "storage-account-key",
                            "displayName": "Storage Account Key",
                            "description": "The storage account key. This is an admin-like password providing access to every container in this account. It is recommended one uses Shared Access Signature (SAS) token instead for fine-grained control with policies. There are certain risks in allowing the account key to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account key to be fetched dynamically from a flow file attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "blob": {
                            "name": "blob",
                            "displayName": "Blob",
                            "description": "The filename of the blob",
                            "defaultValue": "${azure.blobname}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "validationErrors": [
                    "'Storage Account Name' is invalid because Storage Account Name is required"
                ],
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "2f6168c3-fe58-35b3-98f5-9281754a37f0",
                "name": "Fetch Azure BLOB",
                "runStatus": "Invalid",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "2f6168c3-fe58-35b3-98f5-9281754a37f0",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "Fetch Azure BLOB",
                    "type": "FetchAzureBlobStorage",
                    "runStatus": "Invalid",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "bbd2697c-8cc4-3801-b537-c0c23b881aca",
            "uri": "https://localhost:8179/nifi-api/processors/bbd2697c-8cc4-3801-b537-c0c23b881aca",
            "position": {
                "x": 2460.922927115596,
                "y": 1399.8997642549475
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "bbd2697c-8cc4-3801-b537-c0c23b881aca",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 2460.922927115596,
                    "y": 1399.8997642549475
                },
                "name": "Update Index",
                "type": "org.apache.nifi.jms.processors.PublishJMS",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-jms-processors-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "All FlowFiles that cannot be sent to JMS destination are routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All FlowFiles that are sent to the JMS destination are routed to this relationship",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Connection Factory Service": "341ad194-9884-3ae3-1d07-ec78f6f9ec5a",
                        "Destination Name": "thinkbig.nifi.index",
                        "Destination Type": "QUEUE",
                        "User Name": null,
                        "Password": null,
                        "Connection Client ID": null,
                        "Session Cache size": "1",
                        "message-body-type": "bytes",
                        "character-set": "UTF-8"
                    },
                    "descriptors": {
                        "Connection Factory Service": {
                            "name": "Connection Factory Service",
                            "displayName": "Connection Factory Service",
                            "description": "The Controller Service that is used to obtain ConnectionFactory",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "JMSConnectionFactoryProvider",
                                        "value": "341ad194-9884-3ae3-1d07-ec78f6f9ec5a"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "JMSConnectionFactoryProvider",
                                        "value": "adc2fd10-0163-1000-6bee-28216e32df50"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.jms.cf.JMSConnectionFactoryProviderDefinition",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-jms-cf-service-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Destination Name": {
                            "name": "Destination Name",
                            "displayName": "Destination Name",
                            "description": "The name of the JMS Destination. Usually provided by the administrator (e.g., 'topic://myTopic' or 'myTopic').",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Destination Type": {
                            "name": "Destination Type",
                            "displayName": "Destination Type",
                            "description": "The type of the JMS Destination. Could be one of 'QUEUE' or 'TOPIC'. Usually provided by the administrator. Defaults to 'TOPIC",
                            "defaultValue": "QUEUE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "QUEUE",
                                        "value": "QUEUE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "TOPIC",
                                        "value": "TOPIC"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "User Name": {
                            "name": "User Name",
                            "displayName": "User Name",
                            "description": "User Name used for authentication and authorization.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "Password used for authentication and authorization.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Connection Client ID": {
                            "name": "Connection Client ID",
                            "displayName": "Connection Client ID",
                            "description": "The client id to be set on the connection, if set. For durable non shared consumer this is mandatory, for all others it is optional, typically with shared consumers it is undesirable to be set. Please see JMS spec for further details",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Session Cache size": {
                            "name": "Session Cache size",
                            "displayName": "Session Cache size",
                            "description": "This property is deprecated and no longer has any effect on the Processor. It will be removed in a later version.",
                            "defaultValue": "1",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "message-body-type": {
                            "name": "message-body-type",
                            "displayName": "Message Body Type",
                            "description": "The type of JMS message body to construct.",
                            "defaultValue": "bytes",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "bytes",
                                        "value": "bytes"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "text",
                                        "value": "text"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "character-set": {
                            "name": "character-set",
                            "displayName": "Character Set",
                            "description": "The name of the character set to use to construct or interpret TextMessages",
                            "defaultValue": "UTF-8",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "bbd2697c-8cc4-3801-b537-c0c23b881aca",
                "name": "Update Index",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "bbd2697c-8cc4-3801-b537-c0c23b881aca",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Update Index",
                    "type": "PublishJMS",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "5da70b4f-6ca8-3827-bfa2-43d0af72fc72",
            "uri": "https://localhost:8179/nifi-api/processors/5da70b4f-6ca8-3827-bfa2-43d0af72fc72",
            "position": {
                "x": 1515.2392043224172,
                "y": 628.1992223563811
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "5da70b4f-6ca8-3827-bfa2-43d0af72fc72",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 1515.2392043224172,
                    "y": 628.1992223563811
                },
                "name": "UpdateTimestamp",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "feedts": "${now():toNumber()}"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "feedts": {
                            "name": "feedts",
                            "displayName": "feedts",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "5da70b4f-6ca8-3827-bfa2-43d0af72fc72",
                "name": "UpdateTimestamp",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "5da70b4f-6ca8-3827-bfa2-43d0af72fc72",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "UpdateTimestamp",
                    "type": "UpdateAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "b06df32c-55fe-3bda-40e2-5b697926181c",
            "uri": "https://localhost:8179/nifi-api/processors/b06df32c-55fe-3bda-40e2-5b697926181c",
            "position": {
                "x": 1353.8029611214838,
                "y": 464.74999638575355
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "b06df32c-55fe-3bda-40e2-5b697926181c",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 1353.8029611214838,
                    "y": 464.74999638575355
                },
                "name": "Register Tables",
                "type": "com.thinkbiganalytics.nifi.v2.ingest.RegisterFeedTables",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#da05ff"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Successfully relationship.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Database Connection Pooling Service": "51f09b62-b321-39b3-e7fb-cb527eba7521",
                        "System feed category": "${category}",
                        "System feed name": "${feed}",
                        "Table Type": "ALL",
                        "Field specification": "${metadata.table.fieldStructure}",
                        "Partition specification": "${metadata.table.partitionStructure}",
                        "Feed Field specification": "${metadata.table.feedFieldStructure}",
                        "Feed Table Storage Format": "STORED AS ORC",
                        "Target Table Format": "${metadata.table.targetFormat}",
                        "Target Table Properties": "${metadata.table.targetTblProperties}",
                        "Feed Table Properties": "${metadata.table.feedTblProperties}",
                        "Feed Root Path": "${hive.ingest.root}",
                        "Profile Root Path": "${hive.profile.root}",
                        "Master Root Path": "${hive.master.root}",
                        "Feed Table Override": "${metadata.table.feedTableOverride}"
                    },
                    "descriptors": {
                        "Database Connection Pooling Service": {
                            "name": "Database Connection Pooling Service",
                            "displayName": "Database Connection Pooling Service",
                            "description": "The Controller Service that is used to obtain connection to database",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "51f09b62-b321-39b3-e7fb-cb527eba7521"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "adc2fd36-0163-1000-c94e-9156591e27ee"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.thrift.ThriftService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Table Type": {
                            "name": "Table Type",
                            "displayName": "Table Type",
                            "description": "Specifies the standard table type to create or ALL for standard set.",
                            "defaultValue": "ALL",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "FEED",
                                        "value": "FEED"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "VALID",
                                        "value": "VALID"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "INVALID",
                                        "value": "INVALID"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "PROFILE",
                                        "value": "PROFILE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "MASTER",
                                        "value": "MASTER"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ALL",
                                        "value": "ALL"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Field specification": {
                            "name": "Field specification",
                            "displayName": "Field specification",
                            "description": "Pipe-delim and newline for each field: column name|data type|comment|primary_key?|created_dt?|modified_dt?",
                            "defaultValue": "${metadata.table.fieldStructure}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Partition specification": {
                            "name": "Partition specification",
                            "displayName": "Partition specification",
                            "description": "Provide list of partition columns column-delimited",
                            "defaultValue": "${metadata.table.partitionStructure}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed Field specification": {
                            "name": "Feed Field specification",
                            "displayName": "Feed Field specification",
                            "description": "Pipe-delim and newline for each field: column name|data type|comment",
                            "defaultValue": "${metadata.table.feedFieldStructure}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed Table Storage Format": {
                            "name": "Feed Table Storage Format",
                            "displayName": "Feed Table Storage Format",
                            "description": "Provide format and delimiter specification. This is the full clause starting with the INPUTFORMAT such as: INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat' OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat' ",
                            "defaultValue": "${metadata.table.feedFormat}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Target Table Format": {
                            "name": "Target Table Format",
                            "displayName": "Target Table Format",
                            "description": "Provide storage format specification for the target tables",
                            "defaultValue": "${metadata.table.targetFormat}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Target Table Properties": {
                            "name": "Target Table Properties",
                            "displayName": "Target Table Properties",
                            "description": "TblProperties clause generally specifying the compression option",
                            "defaultValue": "${metadata.table.targetTblProperties}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed Table Properties": {
                            "name": "Feed Table Properties",
                            "displayName": "Feed Table Properties",
                            "description": "TblProperties clause for feed table serde",
                            "defaultValue": "${metadata.table.feedTblProperties}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed Root Path": {
                            "name": "Feed Root Path",
                            "displayName": "Feed Root Path",
                            "description": "Specify the full HDFS or S3 root path for the feed,valid,invalid tables.",
                            "defaultValue": "${hive.ingest.root}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Profile Root Path": {
                            "name": "Profile Root Path",
                            "displayName": "Profile Root Path",
                            "description": "Specify the HDFS or S3 folder root path for creating the profile table",
                            "defaultValue": "${hive.profile.root}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Master Root Path": {
                            "name": "Master Root Path",
                            "displayName": "Master Root Path",
                            "description": "Specify the HDFS or S3 folder root path for creating the master table",
                            "defaultValue": "${hive.master.root}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed Table Override": {
                            "name": "Feed Table Override",
                            "displayName": "Feed Table Override",
                            "description": "Executes the provided DDL for the feed table create instead of the default behavior.",
                            "defaultValue": "${metadata.table.feedTableOverride}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 10,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "b06df32c-55fe-3bda-40e2-5b697926181c",
                "name": "Register Tables",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "b06df32c-55fe-3bda-40e2-5b697926181c",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Register Tables",
                    "type": "RegisterFeedTables",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "1241adaa-6ecd-39c7-0d13-45733acb1b62",
            "uri": "https://localhost:8179/nifi-api/processors/1241adaa-6ecd-39c7-0d13-45733acb1b62",
            "position": {
                "x": 473.82096726703094,
                "y": 436.66956567237867
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "1241adaa-6ecd-39c7-0d13-45733acb1b62",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 473.82096726703094,
                    "y": 436.66956567237867
                },
                "name": "Filesystem",
                "type": "org.apache.nifi.processors.standard.GetFile",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "success",
                        "description": "All files are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Input Directory": "/var/dropzone",
                        "File Filter": "venue.csv",
                        "Path Filter": null,
                        "Batch Size": "100",
                        "Keep Source File": "false",
                        "Recurse Subdirectories": "false",
                        "Polling Interval": "0 sec",
                        "Ignore Hidden Files": "true",
                        "Minimum File Age": "0 sec",
                        "Maximum File Age": null,
                        "Minimum File Size": "0 B",
                        "Maximum File Size": null
                    },
                    "descriptors": {
                        "Input Directory": {
                            "name": "Input Directory",
                            "displayName": "Input Directory",
                            "description": "The input directory from which to pull files",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter": {
                            "name": "File Filter",
                            "displayName": "File Filter",
                            "description": "Only files whose names match the given regular expression will be picked up",
                            "defaultValue": "[^\\.].*",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter": {
                            "name": "Path Filter",
                            "displayName": "Path Filter",
                            "description": "When Recurse Subdirectories is true, then only subdirectories whose path matches the given regular expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Batch Size": {
                            "name": "Batch Size",
                            "displayName": "Batch Size",
                            "description": "The maximum number of files to pull in each iteration",
                            "defaultValue": "10",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Keep Source File": {
                            "name": "Keep Source File",
                            "displayName": "Keep Source File",
                            "description": "If true, the file is not deleted after it has been copied to the Content Repository; this causes the file to be picked up continually and is useful for testing purposes.  If not keeping original NiFi will need write permissions on the directory it is pulling from otherwise it will ignore the file.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Recurse Subdirectories": {
                            "name": "Recurse Subdirectories",
                            "displayName": "Recurse Subdirectories",
                            "description": "Indicates whether or not to pull files from subdirectories",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Indicates how long to wait before performing a directory listing",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Hidden Files": {
                            "name": "Ignore Hidden Files",
                            "displayName": "Ignore Hidden Files",
                            "description": "Indicates whether or not hidden files should be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Age": {
                            "name": "Minimum File Age",
                            "displayName": "Minimum File Age",
                            "description": "The minimum age that a file must be in order to be pulled; any file younger than this amount of time (according to last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Age": {
                            "name": "Maximum File Age",
                            "displayName": "Maximum File Age",
                            "description": "The maximum age that a file must be in order to be pulled; any file older than this amount of time (according to last modification date) will be ignored",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Size": {
                            "name": "Minimum File Size",
                            "displayName": "Minimum File Size",
                            "description": "The minimum size that a file must be in order to be pulled",
                            "defaultValue": "0 B",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Size": {
                            "name": "Maximum File Size",
                            "displayName": "Maximum File Size",
                            "description": "The maximum size that a file can be in order to be pulled",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "5 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "1241adaa-6ecd-39c7-0d13-45733acb1b62",
                "name": "Filesystem",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "1241adaa-6ecd-39c7-0d13-45733acb1b62",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "Filesystem",
                    "type": "GetFile",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "2899c3e1-a0e0-3eea-c901-c0b7b4361069",
            "uri": "https://localhost:8179/nifi-api/processors/2899c3e1-a0e0-3eea-c901-c0b7b4361069",
            "position": {
                "x": 1435.9878651828012,
                "y": 751.238353971758
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "2899c3e1-a0e0-3eea-c901-c0b7b4361069",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 1435.9878651828012,
                    "y": 751.238353971758
                },
                "name": "Split Records (Elasticsearch)",
                "type": "org.apache.nifi.processors.standard.SplitJson",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "If a FlowFile fails processing for any reason (for example, the FlowFile is not valid JSON or the specified path does not exist), it will be routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "original",
                        "description": "The original FlowFile that was split into segments. If the FlowFile fails processing, nothing will be sent to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "split",
                        "description": "All segments of the original FlowFile will be routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "JsonPath Expression": "$.*",
                        "Null Value Representation": "empty string"
                    },
                    "descriptors": {
                        "JsonPath Expression": {
                            "name": "JsonPath Expression",
                            "displayName": "JsonPath Expression",
                            "description": "A JsonPath expression that indicates the array element to split into JSON/scalar fragments.",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Null Value Representation": {
                            "name": "Null Value Representation",
                            "displayName": "Null Value Representation",
                            "description": "Indicates the desired representation of JSON Path expressions resulting in a null value.",
                            "defaultValue": "empty string",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "empty string",
                                        "value": "empty string"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "the string 'null'",
                                        "value": "the string 'null'"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "2899c3e1-a0e0-3eea-c901-c0b7b4361069",
                "name": "Split Records (Elasticsearch)",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "2899c3e1-a0e0-3eea-c901-c0b7b4361069",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Split Records (Elasticsearch)",
                    "type": "SplitJson",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "960121a7-a9e4-378d-2864-f8cf4baa0b04",
            "uri": "https://localhost:8179/nifi-api/processors/960121a7-a9e4-378d-2864-f8cf4baa0b04",
            "position": {
                "x": 479.72043836164266,
                "y": 752.3210350892696
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "960121a7-a9e4-378d-2864-f8cf4baa0b04",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 479.72043836164266,
                    "y": 752.3210350892696
                },
                "name": "Fetch S3 Object",
                "type": "org.apache.nifi.processors.aws.s3.FetchS3Object",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-aws-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles are routed to failure relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "FlowFiles are routed to success relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Bucket": "${s3.bucket}",
                        "Object Key": "${filename}",
                        "Region": "us-west-2",
                        "Access Key": null,
                        "Secret Key": null,
                        "Credentials File": null,
                        "AWS Credentials Provider service": "adc46394-0163-1000-4fc1-afbc4db6d274",
                        "Communications Timeout": "30 secs",
                        "Version": null,
                        "SSL Context Service": null,
                        "Endpoint Override URL": null,
                        "Signer Override": "Default Signature",
                        "Proxy Host": null,
                        "Proxy Host Port": null
                    },
                    "descriptors": {
                        "Bucket": {
                            "name": "Bucket",
                            "displayName": "Bucket",
                            "description": "",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Object Key": {
                            "name": "Object Key",
                            "displayName": "Object Key",
                            "description": "",
                            "defaultValue": "${filename}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Region": {
                            "name": "Region",
                            "displayName": "Region",
                            "description": "",
                            "defaultValue": "us-west-2",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "us-gov-west-1",
                                        "value": "us-gov-west-1",
                                        "description": "us-gov-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-1",
                                        "value": "us-east-1",
                                        "description": "us-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-2",
                                        "value": "us-east-2",
                                        "description": "us-east-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-1",
                                        "value": "us-west-1",
                                        "description": "us-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-2",
                                        "value": "us-west-2",
                                        "description": "us-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-1",
                                        "value": "eu-west-1",
                                        "description": "eu-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-2",
                                        "value": "eu-west-2",
                                        "description": "eu-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-central-1",
                                        "value": "eu-central-1",
                                        "description": "eu-central-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-south-1",
                                        "value": "ap-south-1",
                                        "description": "ap-south-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-1",
                                        "value": "ap-southeast-1",
                                        "description": "ap-southeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-2",
                                        "value": "ap-southeast-2",
                                        "description": "ap-southeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-1",
                                        "value": "ap-northeast-1",
                                        "description": "ap-northeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-2",
                                        "value": "ap-northeast-2",
                                        "description": "ap-northeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "sa-east-1",
                                        "value": "sa-east-1",
                                        "description": "sa-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "cn-north-1",
                                        "value": "cn-north-1",
                                        "description": "cn-north-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ca-central-1",
                                        "value": "ca-central-1",
                                        "description": "ca-central-1"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Access Key": {
                            "name": "Access Key",
                            "displayName": "Access Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Secret Key": {
                            "name": "Secret Key",
                            "displayName": "Secret Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Credentials File": {
                            "name": "Credentials File",
                            "displayName": "Credentials File",
                            "description": "Path to a file containing AWS access key and secret key in properties file format.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "AWS Credentials Provider service": {
                            "name": "AWS Credentials Provider service",
                            "displayName": "AWS Credentials Provider service",
                            "description": "The Controller Service that is used to obtain aws credentials provider",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "adc46394-0163-1000-4fc1-afbc4db6d274"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "b63b608a-40fb-3499-0efd-60054f62dade"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-aws-service-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Communications Timeout": {
                            "name": "Communications Timeout",
                            "displayName": "Communications Timeout",
                            "description": "",
                            "defaultValue": "30 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Version": {
                            "name": "Version",
                            "displayName": "Version",
                            "description": "The Version of the Object to download",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Endpoint Override URL": {
                            "name": "Endpoint Override URL",
                            "displayName": "Endpoint Override URL",
                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Signer Override": {
                            "name": "Signer Override",
                            "displayName": "Signer Override",
                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                            "defaultValue": "Default Signature",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Default Signature",
                                        "value": "Default Signature"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v4",
                                        "value": "AWSS3V4SignerType"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v2",
                                        "value": "S3SignerType"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "Proxy host name or IP",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Host Port": {
                            "name": "Proxy Host Port",
                            "displayName": "Proxy Host Port",
                            "description": "Proxy host port",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "960121a7-a9e4-378d-2864-f8cf4baa0b04",
                "name": "Fetch S3 Object",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "960121a7-a9e4-378d-2864-f8cf4baa0b04",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "Fetch S3 Object",
                    "type": "FetchS3Object",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "a19456dd-e06d-396d-95b1-70fb26ff2ed0",
            "uri": "https://localhost:8179/nifi-api/processors/a19456dd-e06d-396d-95b1-70fb26ff2ed0",
            "position": {
                "x": 20.28973064769525,
                "y": 2614.468762959087
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "a19456dd-e06d-396d-95b1-70fb26ff2ed0",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 20.28973064769525,
                    "y": 2614.468762959087
                },
                "name": "Commit Highwater Mark",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.ReleaseHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#48f513"
                },
                "relationships": [
                    {
                        "name": "cancelledWaterMark",
                        "description": "The active water mark for the flowfile was cancelled",
                        "autoTerminate": false
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "${category}",
                        "System feed name": "${feed}",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Mode": "COMMIT",
                        "Release All": "true"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Mode": {
                            "name": "Mode",
                            "displayName": "Mode",
                            "description": "Indicates whether this processor should commit or reject high-water mark updates",
                            "defaultValue": "COMMIT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Commit",
                                        "value": "COMMIT",
                                        "description": "Commits the updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Reject",
                                        "value": "REJECT",
                                        "description": "Rejects any updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Release All": {
                            "name": "Release All",
                            "displayName": "Release All",
                            "description": "If true, commits or rolls back all pending high-water marks.  Otherwise, commits/rolls back only the named water mark property.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "a19456dd-e06d-396d-95b1-70fb26ff2ed0",
                "name": "Commit Highwater Mark",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "a19456dd-e06d-396d-95b1-70fb26ff2ed0",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Commit Highwater Mark",
                    "type": "ReleaseHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "f2a722d7-a3f8-3bb0-e176-1a9e6597ac56",
            "uri": "https://localhost:8179/nifi-api/processors/f2a722d7-a3f8-3bb0-e176-1a9e6597ac56",
            "position": {
                "x": 1127.1487774900197,
                "y": 10
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "f2a722d7-a3f8-3bb0-e176-1a9e6597ac56",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 1127.1487774900197,
                    "y": 10
                },
                "name": "Failed - Release Highwater Mark",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.ReleaseHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#f21308"
                },
                "relationships": [
                    {
                        "name": "cancelledWaterMark",
                        "description": "The active water mark for the flowfile was cancelled",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "concerts",
                        "System feed name": "events",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Mode": "REJECT",
                        "Release All": "true"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Mode": {
                            "name": "Mode",
                            "displayName": "Mode",
                            "description": "Indicates whether this processor should commit or reject high-water mark updates",
                            "defaultValue": "COMMIT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Commit",
                                        "value": "COMMIT",
                                        "description": "Commits the updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Reject",
                                        "value": "REJECT",
                                        "description": "Rejects any updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Release All": {
                            "name": "Release All",
                            "displayName": "Release All",
                            "description": "If true, commits or rolls back all pending high-water marks.  Otherwise, commits/rolls back only the named water mark property.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "f2a722d7-a3f8-3bb0-e176-1a9e6597ac56",
                "name": "Failed - Release Highwater Mark",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "f2a722d7-a3f8-3bb0-e176-1a9e6597ac56",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "Failed - Release Highwater Mark",
                    "type": "ReleaseHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "1d1cef2e-ab11-3ab9-ee8e-62cfd50a1738",
            "uri": "https://localhost:8179/nifi-api/processors/1d1cef2e-ab11-3ab9-ee8e-62cfd50a1738",
            "position": {
                "x": 473.82096726703094,
                "y": 436.66956567237867
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "1d1cef2e-ab11-3ab9-ee8e-62cfd50a1738",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 473.82096726703094,
                    "y": 436.66956567237867
                },
                "name": "Filesystem",
                "type": "org.apache.nifi.processors.standard.GetFile",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "success",
                        "description": "All files are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Input Directory": "/var/dropzone",
                        "File Filter": "mydata\\d{1,3}.csv",
                        "Path Filter": null,
                        "Batch Size": "100",
                        "Keep Source File": "false",
                        "Recurse Subdirectories": "false",
                        "Polling Interval": "0 sec",
                        "Ignore Hidden Files": "true",
                        "Minimum File Age": "0 sec",
                        "Maximum File Age": null,
                        "Minimum File Size": "0 B",
                        "Maximum File Size": null
                    },
                    "descriptors": {
                        "Input Directory": {
                            "name": "Input Directory",
                            "displayName": "Input Directory",
                            "description": "The input directory from which to pull files",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter": {
                            "name": "File Filter",
                            "displayName": "File Filter",
                            "description": "Only files whose names match the given regular expression will be picked up",
                            "defaultValue": "[^\\.].*",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter": {
                            "name": "Path Filter",
                            "displayName": "Path Filter",
                            "description": "When Recurse Subdirectories is true, then only subdirectories whose path matches the given regular expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Batch Size": {
                            "name": "Batch Size",
                            "displayName": "Batch Size",
                            "description": "The maximum number of files to pull in each iteration",
                            "defaultValue": "10",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Keep Source File": {
                            "name": "Keep Source File",
                            "displayName": "Keep Source File",
                            "description": "If true, the file is not deleted after it has been copied to the Content Repository; this causes the file to be picked up continually and is useful for testing purposes.  If not keeping original NiFi will need write permissions on the directory it is pulling from otherwise it will ignore the file.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Recurse Subdirectories": {
                            "name": "Recurse Subdirectories",
                            "displayName": "Recurse Subdirectories",
                            "description": "Indicates whether or not to pull files from subdirectories",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Indicates how long to wait before performing a directory listing",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Hidden Files": {
                            "name": "Ignore Hidden Files",
                            "displayName": "Ignore Hidden Files",
                            "description": "Indicates whether or not hidden files should be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Age": {
                            "name": "Minimum File Age",
                            "displayName": "Minimum File Age",
                            "description": "The minimum age that a file must be in order to be pulled; any file younger than this amount of time (according to last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Age": {
                            "name": "Maximum File Age",
                            "displayName": "Maximum File Age",
                            "description": "The maximum age that a file must be in order to be pulled; any file older than this amount of time (according to last modification date) will be ignored",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Size": {
                            "name": "Minimum File Size",
                            "displayName": "Minimum File Size",
                            "description": "The minimum size that a file must be in order to be pulled",
                            "defaultValue": "0 B",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Size": {
                            "name": "Maximum File Size",
                            "displayName": "Maximum File Size",
                            "description": "The maximum size that a file can be in order to be pulled",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "15 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "1d1cef2e-ab11-3ab9-ee8e-62cfd50a1738",
                "name": "Filesystem",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "1d1cef2e-ab11-3ab9-ee8e-62cfd50a1738",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "Filesystem",
                    "type": "GetFile",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "a80f3849-2db6-3727-7b42-cb52b33d3bb1",
            "uri": "https://localhost:8179/nifi-api/processors/a80f3849-2db6-3727-7b42-cb52b33d3bb1",
            "position": {
                "x": 613.3136900369027,
                "y": 256.705479605469
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "a80f3849-2db6-3727-7b42-cb52b33d3bb1",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 613.3136900369027,
                    "y": 256.705479605469
                },
                "name": "Initialize Feed?",
                "type": "com.thinkbiganalytics.nifi.v2.init.InitializeFeed",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#2bff05"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "Initialize",
                        "description": "Begin initialization",
                        "autoTerminate": false
                    },
                    {
                        "name": "Re-Initialize",
                        "description": "Begin re-initialization",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "${category}",
                        "System feed name": "${feed}",
                        "Initialization Failure Strategy": "RETRY",
                        "Initialization Retry Delay (seconds)": "15",
                        "Max Initialization Attempts": "5",
                        "Clone initialization flowfile": "true",
                        "Max Flow File Count": "500",
                        "Max Flow Files size": "1000"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Initialization Failure Strategy": {
                            "name": "Initialization Failure Strategy",
                            "displayName": "Initialization Failure Strategy",
                            "description": "Indicates how this processor should behave when a flow file arrives after feed initialization has failed.",
                            "defaultValue": "RETRY",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Fail",
                                        "value": "FAIL",
                                        "description": "Immediately fail the flow file"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Retry",
                                        "value": "RETRY",
                                        "description": "Retry initialization (if the appropriate time delay has expired) and penalize the flow file."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Initialization Retry Delay (seconds)": {
                            "name": "Initialization Retry Delay (seconds)",
                            "displayName": "Initialization Retry Delay (seconds)",
                            "description": "The minimum amount of seconds to delay before an arriving flow file should trigger another attempt to initialize a feed that has previously failed initialization.  Any flow file arriving before this delay has expired will be immediately failed.",
                            "defaultValue": "60",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Initialization Attempts": {
                            "name": "Max Initialization Attempts",
                            "displayName": "Max Initialization Attempts",
                            "description": "The maximum number of times initialization will be retried where there are failures.  There is no limit if unset.",
                            "defaultValue": "5",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Clone initialization flowfile": {
                            "name": "Clone initialization flowfile",
                            "displayName": "Clone initialization flowfile",
                            "description": "Indicates whether the feed initialization flow will use a flowfile that is a clone of the input flowfile, i.e. includes all content.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Flow File Count": {
                            "name": "Max Flow File Count",
                            "displayName": "Max Flow File Count",
                            "description": "The maximum number of flow files to process at one time",
                            "defaultValue": "500",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Flow Files size": {
                            "name": "Max Flow Files size",
                            "displayName": "Max Flow Files size",
                            "description": "The maximum accumulated flow file sizes (in kilobytes) to process at one time",
                            "defaultValue": "1000",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "a80f3849-2db6-3727-7b42-cb52b33d3bb1",
                "name": "Initialize Feed?",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "a80f3849-2db6-3727-7b42-cb52b33d3bb1",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Initialize Feed?",
                    "type": "InitializeFeed",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "4e18eab3-6baa-38cc-556b-baee9d70189c",
            "uri": "https://localhost:8179/nifi-api/processors/4e18eab3-6baa-38cc-556b-baee9d70189c",
            "position": {
                "x": 1127.9087415437643,
                "y": 471.12646810005026
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "4e18eab3-6baa-38cc-556b-baee9d70189c",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 1127.9087415437643,
                    "y": 471.12646810005026
                },
                "name": "Initialize Feed Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Do not store state",
                        "Stateful Variables Initial Value": "",
                        "archiveId": "${now():format('yyyyMMddHHmmss')}_${UUID()}",
                        "category": "toy_store",
                        "feed": "products",
                        "hdfs.archive.root": "/archive",
                        "hdfs.ingest.root": "/etl",
                        "hive.ingest.root": "/model.db",
                        "hive.master.root": "/app/warehouse",
                        "hive.profile.root": "/model.db",
                        "kylo.tmp.baseFolder": "/tmp/kylo-nifi",
                        "metadata.table.feedFieldStructure": "productCode|string||1|0|0|productCode\nproductName|string||0|0|0|productName\nproductLine|string||0|0|0|productLine\nproductScale|string||0|0|0|productScale\nproductVendor|string||0|0|0|productVendor\nproductDescription|string||0|0|0|productDescription\nquantityInStock|string||0|0|0|quantityInStock\nbuyPrice|double||0|0|0|buyPrice\nMSRP|double||0|0|0|MSRP",
                        "metadata.table.feedFormat": "ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde' WITH SERDEPROPERTIES ( 'separatorChar' = ',' ,'escapeChar' = '\\\\' ,'quoteChar' = '\"') STORED AS TEXTFILE",
                        "metadata.table.fieldIndexString": "productCode,productName,productVendor,productDescription,buyPrice",
                        "metadata.table.fieldPoliciesJson": "[{\"profile\":true,\"index\":true,\"fieldName\":\"productCode\",\"feedFieldName\":\"productCode\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":true,\"fieldName\":\"productName\",\"feedFieldName\":\"productName\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"productLine\",\"feedFieldName\":\"productLine\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"productScale\",\"feedFieldName\":\"productScale\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":true,\"fieldName\":\"productVendor\",\"feedFieldName\":\"productVendor\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":true,\"fieldName\":\"productDescription\",\"feedFieldName\":\"productDescription\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"quantityInStock\",\"feedFieldName\":\"quantityInStock\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":true,\"fieldName\":\"buyPrice\",\"feedFieldName\":\"buyPrice\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"MSRP\",\"feedFieldName\":\"MSRP\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false}]",
                        "metadata.table.fieldStructure": "productCode|string||1|0|0|productCode\nproductName|string||0|0|0|productName\nproductLine|string||0|0|0|productLine\nproductScale|string||0|0|0|productScale\nproductVendor|string||0|0|0|productVendor\nproductDescription|string||0|0|0|productDescription\nquantityInStock|string||0|0|0|quantityInStock\nbuyPrice|double||0|0|0|buyPrice\nMSRP|double||0|0|0|MSRP",
                        "metadata.table.targetFormat": "STORED AS ORC",
                        "metadata.table.targetMergeStrategy": "DEDUPE_AND_MERGE",
                        "metadata.table.targetTblProperties": "tblproperties(\"orc.compress\"=\"SNAPPY\")",
                        "nifi.home": "/opt/nifi",
                        "nifi.kylo.applicationJarDirectory": "/opt/nifi/current/lib/app",
                        "savepoint.id": "${UUID()}",
                        "skipHeader": "true",
                        "spark.input_folder": "/tmp/kylo-nifi/spark"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "archiveId": {
                            "name": "archiveId",
                            "displayName": "archiveId",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "category": {
                            "name": "category",
                            "displayName": "category",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "feed": {
                            "name": "feed",
                            "displayName": "feed",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.archive.root": {
                            "name": "hdfs.archive.root",
                            "displayName": "hdfs.archive.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "kylo.tmp.baseFolder": {
                            "name": "kylo.tmp.baseFolder",
                            "displayName": "kylo.tmp.baseFolder",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedFieldStructure": {
                            "name": "metadata.table.feedFieldStructure",
                            "displayName": "metadata.table.feedFieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedFormat": {
                            "name": "metadata.table.feedFormat",
                            "displayName": "metadata.table.feedFormat",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldIndexString": {
                            "name": "metadata.table.fieldIndexString",
                            "displayName": "metadata.table.fieldIndexString",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldPoliciesJson": {
                            "name": "metadata.table.fieldPoliciesJson",
                            "displayName": "metadata.table.fieldPoliciesJson",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldStructure": {
                            "name": "metadata.table.fieldStructure",
                            "displayName": "metadata.table.fieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetFormat": {
                            "name": "metadata.table.targetFormat",
                            "displayName": "metadata.table.targetFormat",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetMergeStrategy": {
                            "name": "metadata.table.targetMergeStrategy",
                            "displayName": "metadata.table.targetMergeStrategy",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetTblProperties": {
                            "name": "metadata.table.targetTblProperties",
                            "displayName": "metadata.table.targetTblProperties",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.home": {
                            "name": "nifi.home",
                            "displayName": "nifi.home",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.kylo.applicationJarDirectory": {
                            "name": "nifi.kylo.applicationJarDirectory",
                            "displayName": "nifi.kylo.applicationJarDirectory",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "savepoint.id": {
                            "name": "savepoint.id",
                            "displayName": "savepoint.id",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "skipHeader": {
                            "name": "skipHeader",
                            "displayName": "skipHeader",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "spark.input_folder": {
                            "name": "spark.input_folder",
                            "displayName": "spark.input_folder",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "4e18eab3-6baa-38cc-556b-baee9d70189c",
                "name": "Initialize Feed Parameters",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "4e18eab3-6baa-38cc-556b-baee9d70189c",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "Initialize Feed Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "13cac47f-004e-38ab-76ac-1838d5afca98",
            "uri": "https://localhost:8179/nifi-api/processors/13cac47f-004e-38ab-76ac-1838d5afca98",
            "position": {
                "x": 1760.7356959620392,
                "y": 473.52102002896936
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "13cac47f-004e-38ab-76ac-1838d5afca98",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 1760.7356959620392,
                    "y": 473.52102002896936
                },
                "name": "Savepoint 1",
                "type": "com.thinkbiganalytics.nifi.v2.savepoint.SetSavepoint",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "expired",
                        "description": "A FlowFile that has exceeded the configured expiration Duration will be routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "failure",
                        "description": "FlowFiles will be routed to this relationship if the controller cannot be reached or Savepoint Identifier evaluates to null or empty",
                        "autoTerminate": false
                    },
                    {
                        "name": "release-failure",
                        "description": "A FlowFile with a release signal from controller will be routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "release-success",
                        "description": "A FlowFile with a release signal from controller will be routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "try",
                        "description": "A FlowFile will be cloned upon new entry or receiving a retry signal from the controller and routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "savepoint-id": "${savepoint.id}",
                        "expiration-duration": "72 hours",
                        "savepoint-service": "adc39cd8-0163-1000-9c83-676226a01aa6"
                    },
                    "descriptors": {
                        "savepoint-id": {
                            "name": "savepoint-id",
                            "displayName": "Savepoint Id",
                            "description": "A value, or the results of an Attribute Expression Language statement, which will be evaluated against a FlowFile in order to determine the savepoint key",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "expiration-duration": {
                            "name": "expiration-duration",
                            "displayName": "Expiration Duration",
                            "description": "Indicates the duration after which waiting FlowFiles will be routed to the 'expired' relationship",
                            "defaultValue": "72 hours",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "savepoint-service": {
                            "name": "savepoint-service",
                            "displayName": "Savepoint service",
                            "description": "The Controller Service used to manage retry and release signals for savepoints.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "adc39cd8-0163-1000-9c83-676226a01aa6"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.core.savepoint.SavepointController",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 2000,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "13cac47f-004e-38ab-76ac-1838d5afca98",
                "name": "Savepoint 1",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "13cac47f-004e-38ab-76ac-1838d5afca98",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "Savepoint 1",
                    "type": "SetSavepoint",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 299,
                    "tasksDurationNanos": 35354938,
                    "tasks": "299",
                    "tasksDuration": "00:00:00.035",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "60c548b8-2958-348b-69d2-ad7973ceef5d",
            "uri": "https://localhost:8179/nifi-api/processors/60c548b8-2958-348b-69d2-ad7973ceef5d",
            "position": {
                "x": 1857.1324555365368,
                "y": 240.59164376838407
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "60c548b8-2958-348b-69d2-ad7973ceef5d",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 1857.1324555365368,
                    "y": 240.59164376838407
                },
                "name": "Prepare Search Engine Format",
                "type": "org.apache.nifi.processors.avro.ConvertAvroToJSON",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-avro-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "A FlowFile is routed to this relationship if it cannot be parsed as Avro or cannot be converted to JSON for any reason",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "A FlowFile is routed to this relationship after it has been converted to JSON",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "JSON container options": "array",
                        "Wrap Single Record": "true",
                        "Avro schema": null
                    },
                    "descriptors": {
                        "JSON container options": {
                            "name": "JSON container options",
                            "displayName": "JSON container options",
                            "description": "Determines how stream of records is exposed: either as a sequence of single Objects (none) (i.e. writing every Object to a new line), or as an array of Objects (array).",
                            "defaultValue": "array",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "none",
                                        "value": "none"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "array",
                                        "value": "array"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Wrap Single Record": {
                            "name": "Wrap Single Record",
                            "displayName": "Wrap Single Record",
                            "description": "Determines if the resulting output for empty records or a single record should be wrapped in a container array as specified by 'JSON container options'",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Avro schema": {
                            "name": "Avro schema",
                            "displayName": "Avro schema",
                            "description": "If the Avro records do not contain the schema (datum only), it must be specified here.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "60c548b8-2958-348b-69d2-ad7973ceef5d",
                "name": "Prepare Search Engine Format",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "60c548b8-2958-348b-69d2-ad7973ceef5d",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Prepare Search Engine Format",
                    "type": "ConvertAvroToJSON",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "e8457096-e234-33f8-923c-2bde49479d43",
            "uri": "https://localhost:8179/nifi-api/processors/e8457096-e234-33f8-923c-2bde49479d43",
            "position": {
                "x": 617.1159553332254,
                "y": 742.4322379906444
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "e8457096-e234-33f8-923c-2bde49479d43",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 617.1159553332254,
                    "y": 742.4322379906444
                },
                "name": "Execute Script",
                "type": "com.thinkbiganalytics.nifi.v2.spark.ExecuteSparkJob",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-spark-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#2bff05"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Spark execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Successful result.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "ApplicationJAR": "${nifi.home}/current/lib/app/kylo-spark-interpreter-jar-with-dependencies.jar",
                        "Extra JARs": null,
                        "MainClass": "com.thinkbiganalytics.spark.interpreter.App",
                        "MainArgs": "${transform_script_file}",
                        "SparkMaster": "local",
                        "Spark YARN Deploy Mode": null,
                        "SparkHome": "/usr/lib/spark2",
                        "Spark Process Timeout": "1 hr",
                        "Driver Memory": "1024m",
                        "Executor Memory": "1024m",
                        "Number of Executors": "1",
                        "Spark Application Name": "TransformApp",
                        "Executor Cores": "1",
                        "Network Timeout": "120s",
                        "Hadoop Configuration Resources": null,
                        "Kerberos Principal": null,
                        "Kerberos Keytab": null,
                        "Yarn Queue": null,
                        "Spark Configurations": null,
                        "Extra Files": null,
                        "Data Sources": "${metadata.dataTransformation.datasourceIds}",
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                    },
                    "descriptors": {
                        "ApplicationJAR": {
                            "name": "ApplicationJAR",
                            "displayName": "ApplicationJAR",
                            "description": "Path to the JAR file containing the Spark job application",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Extra JARs": {
                            "name": "Extra JARs",
                            "displayName": "Extra JARs",
                            "description": "A file or a list of files separated by comma which should be added to the class path",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "MainClass": {
                            "name": "MainClass",
                            "displayName": "MainClass",
                            "description": "Qualified classname of the Spark job application class",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "MainArgs": {
                            "name": "MainArgs",
                            "displayName": "MainArgs",
                            "description": "Comma separated arguments to be passed into the main as args",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SparkMaster": {
                            "name": "SparkMaster",
                            "displayName": "SparkMaster",
                            "description": "The Spark master",
                            "defaultValue": "local",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark YARN Deploy Mode": {
                            "name": "Spark YARN Deploy Mode",
                            "displayName": "Spark YARN Deploy Mode",
                            "description": "The deploy mode for YARN master (client, cluster). Only applicable for yarn mode. NOTE: Please ensure that you have not set this in your application.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SparkHome": {
                            "name": "SparkHome",
                            "displayName": "SparkHome",
                            "description": "Path to the Spark Client directory",
                            "defaultValue": "/usr/hdp/current/spark-client",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Process Timeout": {
                            "name": "Spark Process Timeout",
                            "displayName": "Spark Process Timeout",
                            "description": "Time to wait for successful completion of Spark process. Routes to failure if Spark process runs for longer than expected here",
                            "defaultValue": "1 hr",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Driver Memory": {
                            "name": "Driver Memory",
                            "displayName": "Driver Memory",
                            "description": "How much RAM to allocate to the driver",
                            "defaultValue": "512m",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Executor Memory": {
                            "name": "Executor Memory",
                            "displayName": "Executor Memory",
                            "description": "How much RAM to allocate to the executor",
                            "defaultValue": "512m",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Number of Executors": {
                            "name": "Number of Executors",
                            "displayName": "Number of Executors",
                            "description": "The number of exectors to be used",
                            "defaultValue": "1",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Application Name": {
                            "name": "Spark Application Name",
                            "displayName": "Spark Application Name",
                            "description": "The name of the spark application",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Executor Cores": {
                            "name": "Executor Cores",
                            "displayName": "Executor Cores",
                            "description": "The number of executor cores to be used",
                            "defaultValue": "1",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Network Timeout": {
                            "name": "Network Timeout",
                            "displayName": "Network Timeout",
                            "description": "Default timeout for all network interactions. This config will be used in place of spark.core.connection.ack.wait.timeout, spark.akka.timeout, spark.storage.blockManagerSlaveTimeoutMs, spark.shuffle.io.connectionTimeout, spark.rpc.askTimeout or spark.rpc.lookupTimeout if they are not configured.",
                            "defaultValue": "120s",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Yarn Queue": {
                            "name": "Yarn Queue",
                            "displayName": "Yarn Queue",
                            "description": "Optional Yarn Queue",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Configurations": {
                            "name": "Spark Configurations",
                            "displayName": "Spark Configurations",
                            "description": "Pipe separated arguments to be passed into the Spark as configurations i.e <CONF1>=<VALUE1>|<CONF2>=<VALUE2>..",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Extra Files": {
                            "name": "Extra Files",
                            "displayName": "Extra Files",
                            "description": "Comma separated file paths to be passed to the Spark Executors",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Data Sources": {
                            "name": "Data Sources",
                            "displayName": "Data Sources",
                            "description": "A comma-separated list of data source ids to include in the environment for Spark.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Kylo metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "e8457096-e234-33f8-923c-2bde49479d43",
                "name": "Execute Script",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "e8457096-e234-33f8-923c-2bde49479d43",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Execute Script",
                    "type": "ExecuteSparkJob",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "e987fdc7-3fdb-3975-1050-fe894af518b1",
            "uri": "https://localhost:8179/nifi-api/processors/e987fdc7-3fdb-3975-1050-fe894af518b1",
            "position": {
                "x": 480.61680814094143,
                "y": 1210.0718685985066
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "e987fdc7-3fdb-3975-1050-fe894af518b1",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 480.61680814094143,
                    "y": 1210.0718685985066
                },
                "name": "FTP",
                "type": "org.apache.nifi.processors.standard.GetFTP",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Hostname": null,
                        "Port": "21",
                        "Username": null,
                        "Password": null,
                        "Connection Mode": "Passive",
                        "Transfer Mode": "Binary",
                        "Remote Path": null,
                        "File Filter Regex": null,
                        "Path Filter Regex": null,
                        "Polling Interval": "60 sec",
                        "Search Recursively": "false",
                        "Ignore Dotted Files": "true",
                        "Delete Original": "true",
                        "Connection Timeout": "30 sec",
                        "Data Timeout": "30 sec",
                        "Max Selects": "100",
                        "Remote Poll Batch Size": "5000",
                        "Use Natural Ordering": "false",
                        "Proxy Type": "DIRECT",
                        "Proxy Host": null,
                        "Proxy Port": null,
                        "Http Proxy Username": null,
                        "Http Proxy Password": null,
                        "Internal Buffer Size": "16KB",
                        "ftp-use-utf8": "false"
                    },
                    "descriptors": {
                        "Hostname": {
                            "name": "Hostname",
                            "displayName": "Hostname",
                            "description": "The fully qualified hostname or IP address of the remote system",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Port": {
                            "name": "Port",
                            "displayName": "Port",
                            "description": "The port that the remote system is listening on for file transfers",
                            "defaultValue": "21",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Username": {
                            "name": "Username",
                            "displayName": "Username",
                            "description": "Username",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "Password for the user account",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Connection Mode": {
                            "name": "Connection Mode",
                            "displayName": "Connection Mode",
                            "description": "The FTP Connection Mode",
                            "defaultValue": "Passive",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Active",
                                        "value": "Active"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Passive",
                                        "value": "Passive"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Transfer Mode": {
                            "name": "Transfer Mode",
                            "displayName": "Transfer Mode",
                            "description": "The FTP Transfer Mode",
                            "defaultValue": "Binary",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Binary",
                                        "value": "Binary"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ASCII",
                                        "value": "ASCII"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Path": {
                            "name": "Remote Path",
                            "displayName": "Remote Path",
                            "description": "The path on the remote system from which to pull or push files",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter Regex": {
                            "name": "File Filter Regex",
                            "displayName": "File Filter Regex",
                            "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter Regex": {
                            "name": "Path Filter Regex",
                            "displayName": "Path Filter Regex",
                            "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Determines how long to wait between fetching the listing for new files",
                            "defaultValue": "60 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Search Recursively": {
                            "name": "Search Recursively",
                            "displayName": "Search Recursively",
                            "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Dotted Files": {
                            "name": "Ignore Dotted Files",
                            "displayName": "Ignore Dotted Files",
                            "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Delete Original": {
                            "name": "Delete Original",
                            "displayName": "Delete Original",
                            "description": "Determines whether or not the file is deleted from the remote system after it has been successfully transferred",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Connection Timeout": {
                            "name": "Connection Timeout",
                            "displayName": "Connection Timeout",
                            "description": "Amount of time to wait before timing out while creating a connection",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Data Timeout": {
                            "name": "Data Timeout",
                            "displayName": "Data Timeout",
                            "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Selects": {
                            "name": "Max Selects",
                            "displayName": "Max Selects",
                            "description": "The maximum number of files to pull in a single connection",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Poll Batch Size": {
                            "name": "Remote Poll Batch Size",
                            "displayName": "Remote Poll Batch Size",
                            "description": "The value specifies how many file paths to find in a given directory on the remote system when doing a file listing. This value in general should not need to be modified but when polling against a remote system with a tremendous number of files this value can be critical.  Setting this value too high can result very poor performance and setting it too low can cause the flow to be slower than normal.",
                            "defaultValue": "5000",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Natural Ordering": {
                            "name": "Use Natural Ordering",
                            "displayName": "Use Natural Ordering",
                            "description": "If true, will pull files in the order in which they are naturally listed; otherwise, the order in which the files will be pulled is not defined",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Type": {
                            "name": "Proxy Type",
                            "displayName": "Proxy Type",
                            "description": "Proxy type used for file transfers",
                            "defaultValue": "DIRECT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DIRECT",
                                        "value": "DIRECT"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "HTTP",
                                        "value": "HTTP"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SOCKS",
                                        "value": "SOCKS"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "The fully qualified hostname or IP address of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Port": {
                            "name": "Proxy Port",
                            "displayName": "Proxy Port",
                            "description": "The port of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Http Proxy Username": {
                            "name": "Http Proxy Username",
                            "displayName": "Http Proxy Username",
                            "description": "Http Proxy Username",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Http Proxy Password": {
                            "name": "Http Proxy Password",
                            "displayName": "Http Proxy Password",
                            "description": "Http Proxy Password",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Internal Buffer Size": {
                            "name": "Internal Buffer Size",
                            "displayName": "Internal Buffer Size",
                            "description": "Set the internal buffer size for buffered data streams",
                            "defaultValue": "16KB",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "ftp-use-utf8": {
                            "name": "ftp-use-utf8",
                            "displayName": "Use UTF-8 Encoding",
                            "description": "Tells the client to use UTF-8 encoding when processing files and filenames. If set to true, the server must also support UTF-8 encoding.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "e987fdc7-3fdb-3975-1050-fe894af518b1",
                "name": "FTP",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "e987fdc7-3fdb-3975-1050-fe894af518b1",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "FTP",
                    "type": "GetFTP",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "bc16301a-aad2-308c-1d06-04845517aa9d",
            "uri": "https://localhost:8179/nifi-api/processors/bc16301a-aad2-308c-1d06-04845517aa9d",
            "position": {
                "x": 479.72043836164266,
                "y": 752.3210350892696
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "bc16301a-aad2-308c-1d06-04845517aa9d",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 479.72043836164266,
                    "y": 752.3210350892696
                },
                "name": "Fetch S3 Object",
                "type": "org.apache.nifi.processors.aws.s3.FetchS3Object",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-aws-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles are routed to failure relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "FlowFiles are routed to success relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Bucket": "${s3.bucket}",
                        "Object Key": "${filename}",
                        "Region": "us-west-2",
                        "Access Key": null,
                        "Secret Key": null,
                        "Credentials File": null,
                        "AWS Credentials Provider service": "b63b608a-40fb-3499-0efd-60054f62dade",
                        "Communications Timeout": "30 secs",
                        "Version": null,
                        "SSL Context Service": null,
                        "Endpoint Override URL": null,
                        "Signer Override": "Default Signature",
                        "Proxy Host": null,
                        "Proxy Host Port": null
                    },
                    "descriptors": {
                        "Bucket": {
                            "name": "Bucket",
                            "displayName": "Bucket",
                            "description": "",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Object Key": {
                            "name": "Object Key",
                            "displayName": "Object Key",
                            "description": "",
                            "defaultValue": "${filename}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Region": {
                            "name": "Region",
                            "displayName": "Region",
                            "description": "",
                            "defaultValue": "us-west-2",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "us-gov-west-1",
                                        "value": "us-gov-west-1",
                                        "description": "us-gov-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-1",
                                        "value": "us-east-1",
                                        "description": "us-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-2",
                                        "value": "us-east-2",
                                        "description": "us-east-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-1",
                                        "value": "us-west-1",
                                        "description": "us-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-2",
                                        "value": "us-west-2",
                                        "description": "us-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-1",
                                        "value": "eu-west-1",
                                        "description": "eu-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-2",
                                        "value": "eu-west-2",
                                        "description": "eu-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-central-1",
                                        "value": "eu-central-1",
                                        "description": "eu-central-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-south-1",
                                        "value": "ap-south-1",
                                        "description": "ap-south-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-1",
                                        "value": "ap-southeast-1",
                                        "description": "ap-southeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-2",
                                        "value": "ap-southeast-2",
                                        "description": "ap-southeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-1",
                                        "value": "ap-northeast-1",
                                        "description": "ap-northeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-2",
                                        "value": "ap-northeast-2",
                                        "description": "ap-northeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "sa-east-1",
                                        "value": "sa-east-1",
                                        "description": "sa-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "cn-north-1",
                                        "value": "cn-north-1",
                                        "description": "cn-north-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ca-central-1",
                                        "value": "ca-central-1",
                                        "description": "ca-central-1"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Access Key": {
                            "name": "Access Key",
                            "displayName": "Access Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Secret Key": {
                            "name": "Secret Key",
                            "displayName": "Secret Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Credentials File": {
                            "name": "Credentials File",
                            "displayName": "Credentials File",
                            "description": "Path to a file containing AWS access key and secret key in properties file format.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "AWS Credentials Provider service": {
                            "name": "AWS Credentials Provider service",
                            "displayName": "AWS Credentials Provider service",
                            "description": "The Controller Service that is used to obtain aws credentials provider",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "adc46394-0163-1000-4fc1-afbc4db6d274"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "b63b608a-40fb-3499-0efd-60054f62dade"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-aws-service-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Communications Timeout": {
                            "name": "Communications Timeout",
                            "displayName": "Communications Timeout",
                            "description": "",
                            "defaultValue": "30 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Version": {
                            "name": "Version",
                            "displayName": "Version",
                            "description": "The Version of the Object to download",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Endpoint Override URL": {
                            "name": "Endpoint Override URL",
                            "displayName": "Endpoint Override URL",
                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Signer Override": {
                            "name": "Signer Override",
                            "displayName": "Signer Override",
                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                            "defaultValue": "Default Signature",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Default Signature",
                                        "value": "Default Signature"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v4",
                                        "value": "AWSS3V4SignerType"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v2",
                                        "value": "S3SignerType"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "Proxy host name or IP",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Host Port": {
                            "name": "Proxy Host Port",
                            "displayName": "Proxy Host Port",
                            "description": "Proxy host port",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "validationErrors": [
                    "'AWS Credentials Provider service' validated against 'AWSCredentialsProviderControllerService' is invalid because Controller Service AWSCredentialsProviderService[id=b63b608a-40fb-3499-0efd-60054f62dade] is disabled"
                ],
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "bc16301a-aad2-308c-1d06-04845517aa9d",
                "name": "Fetch S3 Object",
                "runStatus": "Invalid",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "bc16301a-aad2-308c-1d06-04845517aa9d",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "Fetch S3 Object",
                    "type": "FetchS3Object",
                    "runStatus": "Invalid",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 5
            },
            "id": "4c22fee4-e970-3614-be29-778691c3bcf1",
            "uri": "https://localhost:8179/nifi-api/processors/4c22fee4-e970-3614-be29-778691c3bcf1",
            "position": {
                "x": 1129.854893075466,
                "y": 240.36730191487368
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "4c22fee4-e970-3614-be29-778691c3bcf1",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 1129.854893075466,
                    "y": 240.36730191487368
                },
                "name": "Fetch RDBMS Data",
                "type": "com.thinkbiganalytics.nifi.v2.ingest.GetTableData",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#3cff00"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "nodata",
                        "description": "Successful but no new data to process.",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Successfully relationship.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Source Database Connection": "14a2aaca-6d30-3e3f-eee0-07c32c1d16de",
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "concerts",
                        "System feed name": "venues",
                        "Source Table": "NA",
                        "Source Fields": "venueid\nvenuename\nvenuecity\nvenuestate\nvenueseats",
                        "Load Strategy": "FULL_LOAD",
                        "High-Water Mark Property Name": "water.mark",
                        "Date Field": null,
                        "Overlap Period": "300 seconds",
                        "Max Wait Time": "0 seconds",
                        "Backoff Period": "300 seconds",
                        "Minimum Time Unit": "NONE",
                        "Output Type": "DELIMITED",
                        "Output Delimiter": ","
                    },
                    "descriptors": {
                        "Source Database Connection": {
                            "name": "Source Database Connection",
                            "displayName": "Source Database Connection",
                            "description": "The database where the source table resides",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo MySQL",
                                        "value": "14a2aaca-6d30-3e3f-eee0-07c32c1d16de"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo MySQL",
                                        "value": "adc4634a-0163-1000-81d8-40e5bab304cb"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source Table": {
                            "name": "Source Table",
                            "displayName": "Source Table",
                            "description": "Name of table including schema (if applicable)",
                            "defaultValue": "${metadata.table.sourceTableSchema.name}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source Fields": {
                            "name": "Source Fields",
                            "displayName": "Source Fields",
                            "description": "Field names (in order) to read from the source table. ie. the select fields. The format is separated by newline. Inconsistent order will cause corruption of the downstream Hive data.",
                            "defaultValue": "${metadata.table.sourceFields}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Load Strategy": {
                            "name": "Load Strategy",
                            "displayName": "Load Strategy",
                            "description": "Whether to load the entire table or perform an incremental extract",
                            "defaultValue": "FULL_LOAD",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "FULL_LOAD",
                                        "value": "FULL_LOAD"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "INCREMENTAL",
                                        "value": "INCREMENTAL"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "High-Water Mark Property Name": {
                            "name": "High-Water Mark Property Name",
                            "displayName": "High-Water Mark Property Name",
                            "description": "Name of the flow file attribute that should contain the current hig-water mark date, and which this processor will update with new values.  Required if the load strategy is set to INCREMENTAL.",
                            "defaultValue": "high.water.date",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Date Field": {
                            "name": "Date Field",
                            "displayName": "Date Field",
                            "description": "Source field containing a modified date for tracking incremental load",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Overlap Period": {
                            "name": "Overlap Period",
                            "displayName": "Overlap Period",
                            "description": "Amount of time to overlap into the last load date to ensure long running transactions missed by previous load weren't missed. Recommended: >0s",
                            "defaultValue": "0 seconds",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Wait Time": {
                            "name": "Max Wait Time",
                            "displayName": "Max Wait Time",
                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.",
                            "defaultValue": "0 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Backoff Period": {
                            "name": "Backoff Period",
                            "displayName": "Backoff Period",
                            "description": "Only records older than the backoff period will be eligible for pickup. This can be used in the ILM use case to define a retention period. Recommended: >5m",
                            "defaultValue": "300 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum Time Unit": {
                            "name": "Minimum Time Unit",
                            "displayName": "Minimum Time Unit",
                            "description": "The minimum unit of data eligible to load. For the ILM case, this would be DAY, WEEK, MONTH, YEAR , zero means there is no limit. Max time less than 1 second will be equal to zero.",
                            "defaultValue": "NONE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "NONE",
                                        "value": "NONE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "HOUR",
                                        "value": "HOUR"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DAY",
                                        "value": "DAY"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "WEEK",
                                        "value": "WEEK"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "MONTH",
                                        "value": "MONTH"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "YEAR",
                                        "value": "YEAR"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Output Type": {
                            "name": "Output Type",
                            "displayName": "Output Type",
                            "description": "How should the results be returned.  Either a Delimited output such as CSV, or AVRO.  If delimited you must specify the delimiter.",
                            "defaultValue": "DELIMITED",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DELIMITED",
                                        "value": "DELIMITED"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AVRO",
                                        "value": "AVRO"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Output Delimiter": {
                            "name": "Output Delimiter",
                            "displayName": "Output Delimiter",
                            "description": "Used only if the Output Type is 'Delimited'.  If this is empty and the Output Type is delimited it will default to a ','.  This property is not used if the Output Type is AVRO.",
                            "defaultValue": ",",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "4c22fee4-e970-3614-be29-778691c3bcf1",
                "name": "Fetch RDBMS Data",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "4c22fee4-e970-3614-be29-778691c3bcf1",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "Fetch RDBMS Data",
                    "type": "GetTableData",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 299,
                    "tasksDurationNanos": 14873405,
                    "tasks": "299",
                    "tasksDuration": "00:00:00.014",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "c0217d04-bc2c-35b7-d4cb-dbbc1910606a",
            "uri": "https://localhost:8179/nifi-api/processors/c0217d04-bc2c-35b7-d4cb-dbbc1910606a",
            "position": {
                "x": 11.498971142376831,
                "y": 1178.337889416449
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "c0217d04-bc2c-35b7-d4cb-dbbc1910606a",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 11.498971142376831,
                    "y": 1178.337889416449
                },
                "name": "Remove Files",
                "type": "org.apache.nifi.processors.script.ExecuteScript",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-scripting-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles that failed to be processed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "FlowFiles that were successfully processed",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Script Engine": "Groovy",
                        "Script File": null,
                        "Script Body": "def flowFile = session.get()\n    if(!flowFile) return\n    def inputFolder = flowFile.getAttribute(\"spark.input_folder\")\n    def feed = flowFile.getAttribute(\"feed\")\n    def category = flowFile.getAttribute(\"category\")\n    def feedts = flowFile.getAttribute(\"feedts\")\n    def folder = new File(inputFolder + \"/\"+category+\"/\"+feed+\"/\"+feedts)\n    // If it doesn't exist\n    if( folder.exists() ) {\n    // Delete the folder for this feed\n    folder.deleteDir()\n    }\n    session.transfer(flowFile, REL_SUCCESS)\n",
                        "Module Directory": null
                    },
                    "descriptors": {
                        "Script Engine": {
                            "name": "Script Engine",
                            "displayName": "Script Engine",
                            "description": "The engine to execute scripts",
                            "defaultValue": "Clojure",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Clojure",
                                        "value": "Clojure"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ECMAScript",
                                        "value": "ECMAScript"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Groovy",
                                        "value": "Groovy"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "lua",
                                        "value": "lua"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "python",
                                        "value": "python"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ruby",
                                        "value": "ruby"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Script File": {
                            "name": "Script File",
                            "displayName": "Script File",
                            "description": "Path to script file to execute. Only one of Script File or Script Body may be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Script Body": {
                            "name": "Script Body",
                            "displayName": "Script Body",
                            "description": "Body of script to execute. Only one of Script File or Script Body may be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Module Directory": {
                            "name": "Module Directory",
                            "displayName": "Module Directory",
                            "description": "Comma-separated list of paths to files and/or directories which contain modules required by the script.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "c0217d04-bc2c-35b7-d4cb-dbbc1910606a",
                "name": "Remove Files",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "c0217d04-bc2c-35b7-d4cb-dbbc1910606a",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Remove Files",
                    "type": "ExecuteScript",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "b239ad1b-a224-3220-ae23-28837583825d",
            "uri": "https://localhost:8179/nifi-api/processors/b239ad1b-a224-3220-ae23-28837583825d",
            "position": {
                "x": 1521.5202108161784,
                "y": 1351.811704843526
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "b239ad1b-a224-3220-ae23-28837583825d",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 1521.5202108161784,
                    "y": 1351.811704843526
                },
                "name": "Set Savepoint 2",
                "type": "com.thinkbiganalytics.nifi.v2.savepoint.SetSavepoint",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "expired",
                        "description": "A FlowFile that has exceeded the configured expiration Duration will be routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "failure",
                        "description": "FlowFiles will be routed to this relationship if the controller cannot be reached or Savepoint Identifier evaluates to null or empty",
                        "autoTerminate": false
                    },
                    {
                        "name": "release-failure",
                        "description": "A FlowFile with a release signal from controller will be routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "release-success",
                        "description": "A FlowFile with a release signal from controller will be routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "try",
                        "description": "A FlowFile will be cloned upon new entry or receiving a retry signal from the controller and routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "savepoint-id": "${savepoint.id}",
                        "expiration-duration": "72 hours",
                        "savepoint-service": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                    },
                    "descriptors": {
                        "savepoint-id": {
                            "name": "savepoint-id",
                            "displayName": "Savepoint Id",
                            "description": "A value, or the results of an Attribute Expression Language statement, which will be evaluated against a FlowFile in order to determine the savepoint key",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "expiration-duration": {
                            "name": "expiration-duration",
                            "displayName": "Expiration Duration",
                            "description": "Indicates the duration after which waiting FlowFiles will be routed to the 'expired' relationship",
                            "defaultValue": "72 hours",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "savepoint-service": {
                            "name": "savepoint-service",
                            "displayName": "Savepoint service",
                            "description": "The Controller Service used to manage retry and release signals for savepoints.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "adc39cd8-0163-1000-9c83-676226a01aa6"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.core.savepoint.SavepointController",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 2000,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "b239ad1b-a224-3220-ae23-28837583825d",
                "name": "Set Savepoint 2",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "b239ad1b-a224-3220-ae23-28837583825d",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Set Savepoint 2",
                    "type": "SetSavepoint",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "a1ffeb29-15ce-3533-c7fa-6d528afc8e2c",
            "uri": "https://localhost:8179/nifi-api/processors/a1ffeb29-15ce-3533-c7fa-6d528afc8e2c",
            "position": {
                "x": 1158.631144068403,
                "y": 10
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "a1ffeb29-15ce-3533-c7fa-6d528afc8e2c",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 1158.631144068403,
                    "y": 10
                },
                "name": "Extract Payload",
                "type": "org.apache.nifi.processors.standard.EvaluateJsonPath",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles are routed to this relationship when the JsonPath cannot be evaluated against the content of the FlowFile; for instance, if the FlowFile is not valid JSON",
                        "autoTerminate": true
                    },
                    {
                        "name": "matched",
                        "description": "FlowFiles are routed to this relationship when the JsonPath is successfully evaluated and the FlowFile is modified as a result",
                        "autoTerminate": false
                    },
                    {
                        "name": "unmatched",
                        "description": "FlowFiles are routed to this relationship when the JsonPath does not match the content of the FlowFile and the Destination is set to flowfile-content",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Destination": "flowfile-attribute",
                        "Return Type": "auto-detect",
                        "Path Not Found Behavior": "warn",
                        "Null Value Representation": "empty string",
                        "category": "$.category",
                        "feed": "$.feed",
                        "feedts": "$.feedts",
                        "fieldIndexString": "$.['metadata.table.fieldIndexString']"
                    },
                    "descriptors": {
                        "Destination": {
                            "name": "Destination",
                            "displayName": "Destination",
                            "description": "Indicates whether the results of the JsonPath evaluation are written to the FlowFile content or a FlowFile attribute; if using attribute, must specify the Attribute Name property. If set to flowfile-content, only one JsonPath may be specified, and the property name is ignored.",
                            "defaultValue": "flowfile-content",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "flowfile-content",
                                        "value": "flowfile-content"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "flowfile-attribute",
                                        "value": "flowfile-attribute"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Return Type": {
                            "name": "Return Type",
                            "displayName": "Return Type",
                            "description": "Indicates the desired return type of the JSON Path expressions.  Selecting 'auto-detect' will set the return type to 'json' for a Destination of 'flowfile-content', and 'scalar' for a Destination of 'flowfile-attribute'.",
                            "defaultValue": "auto-detect",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "auto-detect",
                                        "value": "auto-detect"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "json",
                                        "value": "json"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "scalar",
                                        "value": "scalar"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Not Found Behavior": {
                            "name": "Path Not Found Behavior",
                            "displayName": "Path Not Found Behavior",
                            "description": "Indicates how to handle missing JSON path expressions when destination is set to 'flowfile-attribute'. Selecting 'warn' will generate a warning when a JSON path expression is not found.",
                            "defaultValue": "ignore",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "warn",
                                        "value": "warn"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ignore",
                                        "value": "ignore"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Null Value Representation": {
                            "name": "Null Value Representation",
                            "displayName": "Null Value Representation",
                            "description": "Indicates the desired representation of JSON Path expressions resulting in a null value.",
                            "defaultValue": "empty string",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "empty string",
                                        "value": "empty string"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "the string 'null'",
                                        "value": "the string 'null'"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "category": {
                            "name": "category",
                            "displayName": "category",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": false
                        },
                        "feed": {
                            "name": "feed",
                            "displayName": "feed",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": false
                        },
                        "feedts": {
                            "name": "feedts",
                            "displayName": "feedts",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": false
                        },
                        "fieldIndexString": {
                            "name": "fieldIndexString",
                            "displayName": "fieldIndexString",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "a1ffeb29-15ce-3533-c7fa-6d528afc8e2c",
                "name": "Extract Payload",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "a1ffeb29-15ce-3533-c7fa-6d528afc8e2c",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Extract Payload",
                    "type": "EvaluateJsonPath",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "6ab68a60-2cc1-3fcc-0297-e401831028dd",
            "uri": "https://localhost:8179/nifi-api/processors/6ab68a60-2cc1-3fcc-0297-e401831028dd",
            "position": {
                "x": 1752.136631493926,
                "y": 236.4176025390625
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "6ab68a60-2cc1-3fcc-0297-e401831028dd",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 1752.136631493926,
                    "y": 236.4176025390625
                },
                "name": "No Data - Release Highwater Mark",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.ReleaseHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#f21308"
                },
                "relationships": [
                    {
                        "name": "cancelledWaterMark",
                        "description": "The active water mark for the flowfile was cancelled",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "adc39d7a-0163-1000-5739-f8ab47ad267f",
                        "System feed category": "${metadata.category.systemName}",
                        "System feed name": "${metadata.systemFeedName}",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Mode": "COMMIT",
                        "Release All": "true"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Mode": {
                            "name": "Mode",
                            "displayName": "Mode",
                            "description": "Indicates whether this processor should commit or reject high-water mark updates",
                            "defaultValue": "COMMIT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Commit",
                                        "value": "COMMIT",
                                        "description": "Commits the updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Reject",
                                        "value": "REJECT",
                                        "description": "Rejects any updates to the high-water mark(s)"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Release All": {
                            "name": "Release All",
                            "displayName": "Release All",
                            "description": "If true, commits or rolls back all pending high-water marks.  Otherwise, commits/rolls back only the named water mark property.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "True",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "False",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "6ab68a60-2cc1-3fcc-0297-e401831028dd",
                "name": "No Data - Release Highwater Mark",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "6ab68a60-2cc1-3fcc-0297-e401831028dd",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "No Data - Release Highwater Mark",
                    "type": "ReleaseHighWaterMark",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "2c33686f-3c63-3b9c-94d4-9c0e56dfd597",
            "uri": "https://localhost:8179/nifi-api/processors/2c33686f-3c63-3b9c-94d4-9c0e56dfd597",
            "position": {
                "x": 2185.451496762167,
                "y": 1059.6119988941964
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "2c33686f-3c63-3b9c-94d4-9c0e56dfd597",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 2185.451496762167,
                    "y": 1059.6119988941964
                },
                "name": "Register Tables",
                "type": "com.thinkbiganalytics.nifi.v2.ingest.RegisterFeedTables",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#da05ff"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Successfully relationship.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Database Connection Pooling Service": "51f09b62-b321-39b3-e7fb-cb527eba7521",
                        "System feed category": "${category}",
                        "System feed name": "${feed}",
                        "Table Type": "ALL",
                        "Field specification": "${metadata.table.fieldStructure}",
                        "Partition specification": "${metadata.table.partitionStructure}",
                        "Feed Field specification": "${metadata.table.feedFieldStructure}",
                        "Feed Table Storage Format": "${metadata.table.feedFormat}",
                        "Target Table Format": "${metadata.table.targetFormat}",
                        "Target Table Properties": "${metadata.table.targetTblProperties}",
                        "Feed Table Properties": "${metadata.table.feedTblProperties}",
                        "Feed Root Path": "${hive.ingest.root}",
                        "Profile Root Path": "${hive.profile.root}",
                        "Master Root Path": "${hive.master.root}",
                        "Feed Table Override": "${metadata.table.feedTableOverride}"
                    },
                    "descriptors": {
                        "Database Connection Pooling Service": {
                            "name": "Database Connection Pooling Service",
                            "displayName": "Database Connection Pooling Service",
                            "description": "The Controller Service that is used to obtain connection to database",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "51f09b62-b321-39b3-e7fb-cb527eba7521"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "adc2fd36-0163-1000-c94e-9156591e27ee"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.thrift.ThriftService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Table Type": {
                            "name": "Table Type",
                            "displayName": "Table Type",
                            "description": "Specifies the standard table type to create or ALL for standard set.",
                            "defaultValue": "ALL",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "FEED",
                                        "value": "FEED"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "VALID",
                                        "value": "VALID"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "INVALID",
                                        "value": "INVALID"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "PROFILE",
                                        "value": "PROFILE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "MASTER",
                                        "value": "MASTER"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ALL",
                                        "value": "ALL"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Field specification": {
                            "name": "Field specification",
                            "displayName": "Field specification",
                            "description": "Pipe-delim and newline for each field: column name|data type|comment|primary_key?|created_dt?|modified_dt?",
                            "defaultValue": "${metadata.table.fieldStructure}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Partition specification": {
                            "name": "Partition specification",
                            "displayName": "Partition specification",
                            "description": "Provide list of partition columns column-delimited",
                            "defaultValue": "${metadata.table.partitionStructure}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed Field specification": {
                            "name": "Feed Field specification",
                            "displayName": "Feed Field specification",
                            "description": "Pipe-delim and newline for each field: column name|data type|comment",
                            "defaultValue": "${metadata.table.feedFieldStructure}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed Table Storage Format": {
                            "name": "Feed Table Storage Format",
                            "displayName": "Feed Table Storage Format",
                            "description": "Provide format and delimiter specification. This is the full clause starting with the INPUTFORMAT such as: INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat' OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat' ",
                            "defaultValue": "${metadata.table.feedFormat}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Target Table Format": {
                            "name": "Target Table Format",
                            "displayName": "Target Table Format",
                            "description": "Provide storage format specification for the target tables",
                            "defaultValue": "${metadata.table.targetFormat}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Target Table Properties": {
                            "name": "Target Table Properties",
                            "displayName": "Target Table Properties",
                            "description": "TblProperties clause generally specifying the compression option",
                            "defaultValue": "${metadata.table.targetTblProperties}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed Table Properties": {
                            "name": "Feed Table Properties",
                            "displayName": "Feed Table Properties",
                            "description": "TblProperties clause for feed table serde",
                            "defaultValue": "${metadata.table.feedTblProperties}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed Root Path": {
                            "name": "Feed Root Path",
                            "displayName": "Feed Root Path",
                            "description": "Specify the full HDFS or S3 root path for the feed,valid,invalid tables.",
                            "defaultValue": "${hive.ingest.root}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Profile Root Path": {
                            "name": "Profile Root Path",
                            "displayName": "Profile Root Path",
                            "description": "Specify the HDFS or S3 folder root path for creating the profile table",
                            "defaultValue": "${hive.profile.root}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Master Root Path": {
                            "name": "Master Root Path",
                            "displayName": "Master Root Path",
                            "description": "Specify the HDFS or S3 folder root path for creating the master table",
                            "defaultValue": "${hive.master.root}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed Table Override": {
                            "name": "Feed Table Override",
                            "displayName": "Feed Table Override",
                            "description": "Executes the provided DDL for the feed table create instead of the default behavior.",
                            "defaultValue": "${metadata.table.feedTableOverride}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 10,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "2c33686f-3c63-3b9c-94d4-9c0e56dfd597",
                "name": "Register Tables",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "2c33686f-3c63-3b9c-94d4-9c0e56dfd597",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Register Tables",
                    "type": "RegisterFeedTables",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "3620fbe2-66e7-341d-b1a0-d448cccb8608",
            "uri": "https://localhost:8179/nifi-api/processors/3620fbe2-66e7-341d-b1a0-d448cccb8608",
            "position": {
                "x": 482.5220584116687,
                "y": 1059.2837036372548
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "3620fbe2-66e7-341d-b1a0-d448cccb8608",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 482.5220584116687,
                    "y": 1059.2837036372548
                },
                "name": "SFTP",
                "type": "org.apache.nifi.processors.standard.GetSFTP",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Hostname": null,
                        "Port": "22",
                        "Username": null,
                        "Password": null,
                        "Private Key Path": null,
                        "Private Key Passphrase": null,
                        "Remote Path": null,
                        "File Filter Regex": null,
                        "Path Filter Regex": null,
                        "Polling Interval": "60 sec",
                        "Search Recursively": "false",
                        "Ignore Dotted Files": "true",
                        "Delete Original": "true",
                        "Connection Timeout": "30 sec",
                        "Data Timeout": "30 sec",
                        "Host Key File": null,
                        "Max Selects": "100",
                        "Remote Poll Batch Size": "5000",
                        "Strict Host Key Checking": "false",
                        "Send Keep Alive On Timeout": "true",
                        "Use Compression": "false",
                        "Use Natural Ordering": "false"
                    },
                    "descriptors": {
                        "Hostname": {
                            "name": "Hostname",
                            "displayName": "Hostname",
                            "description": "The fully qualified hostname or IP address of the remote system",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Port": {
                            "name": "Port",
                            "displayName": "Port",
                            "description": "The port that the remote system is listening on for file transfers",
                            "defaultValue": "22",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Username": {
                            "name": "Username",
                            "displayName": "Username",
                            "description": "Username",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "Password for the user account",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Private Key Path": {
                            "name": "Private Key Path",
                            "displayName": "Private Key Path",
                            "description": "The fully qualified path to the Private Key file",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Private Key Passphrase": {
                            "name": "Private Key Passphrase",
                            "displayName": "Private Key Passphrase",
                            "description": "Password for the private key",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Remote Path": {
                            "name": "Remote Path",
                            "displayName": "Remote Path",
                            "description": "The path on the remote system from which to pull or push files",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter Regex": {
                            "name": "File Filter Regex",
                            "displayName": "File Filter Regex",
                            "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter Regex": {
                            "name": "Path Filter Regex",
                            "displayName": "Path Filter Regex",
                            "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Determines how long to wait between fetching the listing for new files",
                            "defaultValue": "60 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Search Recursively": {
                            "name": "Search Recursively",
                            "displayName": "Search Recursively",
                            "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Dotted Files": {
                            "name": "Ignore Dotted Files",
                            "displayName": "Ignore Dotted Files",
                            "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Delete Original": {
                            "name": "Delete Original",
                            "displayName": "Delete Original",
                            "description": "Determines whether or not the file is deleted from the remote system after it has been successfully transferred",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Connection Timeout": {
                            "name": "Connection Timeout",
                            "displayName": "Connection Timeout",
                            "description": "Amount of time to wait before timing out while creating a connection",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Data Timeout": {
                            "name": "Data Timeout",
                            "displayName": "Data Timeout",
                            "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Host Key File": {
                            "name": "Host Key File",
                            "displayName": "Host Key File",
                            "description": "If supplied, the given file will be used as the Host Key; otherwise, no use host key file will be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Selects": {
                            "name": "Max Selects",
                            "displayName": "Max Selects",
                            "description": "The maximum number of files to pull in a single connection",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Poll Batch Size": {
                            "name": "Remote Poll Batch Size",
                            "displayName": "Remote Poll Batch Size",
                            "description": "The value specifies how many file paths to find in a given directory on the remote system when doing a file listing. This value in general should not need to be modified but when polling against a remote system with a tremendous number of files this value can be critical.  Setting this value too high can result very poor performance and setting it too low can cause the flow to be slower than normal.",
                            "defaultValue": "5000",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Strict Host Key Checking": {
                            "name": "Strict Host Key Checking",
                            "displayName": "Strict Host Key Checking",
                            "description": "Indicates whether or not strict enforcement of hosts keys should be applied",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Send Keep Alive On Timeout": {
                            "name": "Send Keep Alive On Timeout",
                            "displayName": "Send Keep Alive On Timeout",
                            "description": "Indicates whether or not to send a single Keep Alive message when SSH socket times out",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Compression": {
                            "name": "Use Compression",
                            "displayName": "Use Compression",
                            "description": "Indicates whether or not ZLIB compression should be used when transferring files",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Natural Ordering": {
                            "name": "Use Natural Ordering",
                            "displayName": "Use Natural Ordering",
                            "description": "If true, will pull files in the order in which they are naturally listed; otherwise, the order in which the files will be pulled is not defined",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "3620fbe2-66e7-341d-b1a0-d448cccb8608",
                "name": "SFTP",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "3620fbe2-66e7-341d-b1a0-d448cccb8608",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "SFTP",
                    "type": "GetSFTP",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "fa4cc73b-7b8c-3880-8be9-ec8ddb52a9d5",
            "uri": "https://localhost:8179/nifi-api/processors/fa4cc73b-7b8c-3880-8be9-ec8ddb52a9d5",
            "position": {
                "x": 1354.3815395696106,
                "y": 249.96551528663986
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "fa4cc73b-7b8c-3880-8be9-ec8ddb52a9d5",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 1354.3815395696106,
                    "y": 249.96551528663986
                },
                "name": "Register HDFS Folders",
                "type": "com.thinkbiganalytics.nifi.v2.hdfs.CreateHDFSFolder",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-hadoop-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#da05ff"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Hadoop Configuration Resources": "/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml",
                        "Kerberos Principal": null,
                        "Kerberos Keytab": null,
                        "Kerberos Relogin Period": "4 hours",
                        "Directory": "${hive.ingest.root}/${category}\n${hive.ingest.root}/${category}/${feed}\n${hive.ingest.root}/${category}/${feed}/valid\n${hive.profile.root}/${category}/\n${hive.profile.root}/${category}/${feed}/\n${hive.profile.root}/${category}/${feed}/profile\n${hive.master.root}\n${hive.master.root}/${category}/\n${hive.master.root}/${category}/${feed}/",
                        "Permissions umask": null,
                        "Remote Owner": null,
                        "Remote Group": null
                    },
                    "descriptors": {
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Relogin Period": {
                            "name": "Kerberos Relogin Period",
                            "displayName": "Kerberos Relogin Period",
                            "description": "Period of time which should pass before attempting a kerberos relogin",
                            "defaultValue": "4 hours",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Directory": {
                            "name": "Directory",
                            "displayName": "Directory",
                            "description": "The full HDFS directory(s) to create separated by newline",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Permissions umask": {
                            "name": "Permissions umask",
                            "displayName": "Permissions umask",
                            "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration fs.permissions.umask-mode",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Owner": {
                            "name": "Remote Owner",
                            "displayName": "Remote Owner",
                            "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Remote Group": {
                            "name": "Remote Group",
                            "displayName": "Remote Group",
                            "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "30 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 10,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "fa4cc73b-7b8c-3880-8be9-ec8ddb52a9d5",
                "name": "Register HDFS Folders",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "fa4cc73b-7b8c-3880-8be9-ec8ddb52a9d5",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Register HDFS Folders",
                    "type": "CreateHDFSFolder",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "20f1762a-f818-38a9-36db-8bab8766e845",
            "uri": "https://localhost:8179/nifi-api/processors/20f1762a-f818-38a9-36db-8bab8766e845",
            "position": {
                "x": 477.3463277278479,
                "y": 911.9318201342085
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "20f1762a-f818-38a9-36db-8bab8766e845",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 477.3463277278479,
                    "y": 911.9318201342085
                },
                "name": "Fetch Azure BLOB",
                "type": "org.apache.nifi.processors.azure.storage.FetchAzureBlobStorage",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-azure-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Unsuccessful operations will be transferred to the failure relationship.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successfully processed FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "container-name": "${azure.container}",
                        "storage-sas-token": null,
                        "storage-account-name": null,
                        "storage-account-key": null,
                        "blob": "${azure.blobname}"
                    },
                    "descriptors": {
                        "container-name": {
                            "name": "container-name",
                            "displayName": "Container Name",
                            "description": "Name of the Azure storage container",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-sas-token": {
                            "name": "storage-sas-token",
                            "displayName": "SAS Token",
                            "description": "Shared Access Signature token, including the leading '?'. Specify either SAS Token (recommended) or Account Key. There are certain risks in allowing the SAS token to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-name": {
                            "name": "storage-account-name",
                            "displayName": "Storage Account Name",
                            "description": "The storage account name.  There are certain risks in allowing the account name to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account name to be fetched dynamically from a flowfile attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": true,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "storage-account-key": {
                            "name": "storage-account-key",
                            "displayName": "Storage Account Key",
                            "description": "The storage account key. This is an admin-like password providing access to every container in this account. It is recommended one uses Shared Access Signature (SAS) token instead for fine-grained control with policies. There are certain risks in allowing the account key to be stored as a flowfile attribute. While it does provide for a more flexible flow by allowing the account key to be fetched dynamically from a flow file attribute, care must be taken to restrict access to the event provenance data (e.g. by strictly controlling the policies governing provenance for this Processor). In addition, the provenance repositories may be put on encrypted disk partitions.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "blob": {
                            "name": "blob",
                            "displayName": "Blob",
                            "description": "The filename of the blob",
                            "defaultValue": "${azure.blobname}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "validationErrors": [
                    "'Storage Account Name' is invalid because Storage Account Name is required"
                ],
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "20f1762a-f818-38a9-36db-8bab8766e845",
                "name": "Fetch Azure BLOB",
                "runStatus": "Invalid",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "20f1762a-f818-38a9-36db-8bab8766e845",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "Fetch Azure BLOB",
                    "type": "FetchAzureBlobStorage",
                    "runStatus": "Invalid",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 3
            },
            "id": "d46dde68-e119-3ac1-1aee-4a2f0739a39e",
            "uri": "https://localhost:8179/nifi-api/processors/d46dde68-e119-3ac1-1aee-4a2f0739a39e",
            "position": {
                "x": 664.2453210721069,
                "y": 240.3673019148746
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "d46dde68-e119-3ac1-1aee-4a2f0739a39e",
                "parentGroupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "position": {
                    "x": 664.2453210721069,
                    "y": 240.3673019148746
                },
                "name": "Fetch RDBMS Data",
                "type": "com.thinkbiganalytics.nifi.v2.ingest.GetTableData",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#3cff00"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "nodata",
                        "description": "Successful but no new data to process.",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Successfully relationship.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Source Database Connection": "14a2aaca-6d30-3e3f-eee0-07c32c1d16de",
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "website",
                        "System feed name": "testing_multi_b",
                        "Source Table": "NA",
                        "Source Fields": "host\ndescription\nprincipalundefinedname\nprincipalundefinedtype\nlocalundefinedusername\nkeytabundefinedfileundefinedpath\nkeytabundefinedfileundefinedowner\nkeytabundefinedfileundefinedownerundefinedaccess\nkeytabundefinedfileundefinedgroup\nkeytabundefinedfileundefinedgroupundefinedaccess\nkeytabundefinedfileundefinedmode\nkeytabundefinedfileundefinedinstalled",
                        "Load Strategy": "FULL_LOAD",
                        "High-Water Mark Property Name": "water.mark",
                        "Date Field": null,
                        "Overlap Period": "300 seconds",
                        "Max Wait Time": "0 seconds",
                        "Backoff Period": "300 seconds",
                        "Minimum Time Unit": "NONE",
                        "Output Type": "DELIMITED",
                        "Output Delimiter": ","
                    },
                    "descriptors": {
                        "Source Database Connection": {
                            "name": "Source Database Connection",
                            "displayName": "Source Database Connection",
                            "description": "The database where the source table resides",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo MySQL",
                                        "value": "14a2aaca-6d30-3e3f-eee0-07c32c1d16de"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo MySQL",
                                        "value": "adc4634a-0163-1000-81d8-40e5bab304cb"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source Table": {
                            "name": "Source Table",
                            "displayName": "Source Table",
                            "description": "Name of table including schema (if applicable)",
                            "defaultValue": "${metadata.table.sourceTableSchema.name}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source Fields": {
                            "name": "Source Fields",
                            "displayName": "Source Fields",
                            "description": "Field names (in order) to read from the source table. ie. the select fields. The format is separated by newline. Inconsistent order will cause corruption of the downstream Hive data.",
                            "defaultValue": "${metadata.table.sourceFields}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Load Strategy": {
                            "name": "Load Strategy",
                            "displayName": "Load Strategy",
                            "description": "Whether to load the entire table or perform an incremental extract",
                            "defaultValue": "FULL_LOAD",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "FULL_LOAD",
                                        "value": "FULL_LOAD"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "INCREMENTAL",
                                        "value": "INCREMENTAL"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "High-Water Mark Property Name": {
                            "name": "High-Water Mark Property Name",
                            "displayName": "High-Water Mark Property Name",
                            "description": "Name of the flow file attribute that should contain the current hig-water mark date, and which this processor will update with new values.  Required if the load strategy is set to INCREMENTAL.",
                            "defaultValue": "high.water.date",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Date Field": {
                            "name": "Date Field",
                            "displayName": "Date Field",
                            "description": "Source field containing a modified date for tracking incremental load",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Overlap Period": {
                            "name": "Overlap Period",
                            "displayName": "Overlap Period",
                            "description": "Amount of time to overlap into the last load date to ensure long running transactions missed by previous load weren't missed. Recommended: >0s",
                            "defaultValue": "0 seconds",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Max Wait Time": {
                            "name": "Max Wait Time",
                            "displayName": "Max Wait Time",
                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.",
                            "defaultValue": "0 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Backoff Period": {
                            "name": "Backoff Period",
                            "displayName": "Backoff Period",
                            "description": "Only records older than the backoff period will be eligible for pickup. This can be used in the ILM use case to define a retention period. Recommended: >5m",
                            "defaultValue": "300 seconds",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum Time Unit": {
                            "name": "Minimum Time Unit",
                            "displayName": "Minimum Time Unit",
                            "description": "The minimum unit of data eligible to load. For the ILM case, this would be DAY, WEEK, MONTH, YEAR , zero means there is no limit. Max time less than 1 second will be equal to zero.",
                            "defaultValue": "NONE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "NONE",
                                        "value": "NONE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "HOUR",
                                        "value": "HOUR"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DAY",
                                        "value": "DAY"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "WEEK",
                                        "value": "WEEK"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "MONTH",
                                        "value": "MONTH"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "YEAR",
                                        "value": "YEAR"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Output Type": {
                            "name": "Output Type",
                            "displayName": "Output Type",
                            "description": "How should the results be returned.  Either a Delimited output such as CSV, or AVRO.  If delimited you must specify the delimiter.",
                            "defaultValue": "DELIMITED",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DELIMITED",
                                        "value": "DELIMITED"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AVRO",
                                        "value": "AVRO"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Output Delimiter": {
                            "name": "Output Delimiter",
                            "displayName": "Output Delimiter",
                            "description": "Used only if the Output Type is 'Delimited'.  If this is empty and the Output Type is delimited it will default to a ','.  This property is not used if the Output Type is AVRO.",
                            "defaultValue": ",",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "id": "d46dde68-e119-3ac1-1aee-4a2f0739a39e",
                "name": "Fetch RDBMS Data",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "d46dde68-e119-3ac1-1aee-4a2f0739a39e",
                    "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                    "name": "Fetch RDBMS Data",
                    "type": "GetTableData",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 299,
                    "tasksDurationNanos": 11589872,
                    "tasks": "299",
                    "tasksDuration": "00:00:00.011",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "3a70fb9e-fad8-3c5a-40b9-5326526ab1be",
            "uri": "https://localhost:8179/nifi-api/processors/3a70fb9e-fad8-3c5a-40b9-5326526ab1be",
            "position": {
                "x": 1862.1446118121853,
                "y": 1404.5762845653953
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "3a70fb9e-fad8-3c5a-40b9-5326526ab1be",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 1862.1446118121853,
                    "y": 1404.5762845653953
                },
                "name": "Set Metadata for Indexing",
                "type": "org.apache.nifi.processors.standard.AttributesToJSON",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Failed to convert attributes to JSON",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Successfully converted attributes to JSON",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Attributes List": "feed,category,feedts,metadata.table.fieldIndexString",
                        "attributes-to-json-regex": null,
                        "Destination": "flowfile-content",
                        "Include Core Attributes": "false",
                        "Null Value": "false"
                    },
                    "descriptors": {
                        "Attributes List": {
                            "name": "Attributes List",
                            "displayName": "Attributes List",
                            "description": "Comma separated list of attributes to be included in the resulting JSON. If this value is left empty then all existing Attributes will be included. This list of attributes is case sensitive. If an attribute specified in the list is not found it will be be emitted to the resulting JSON with an empty string or NULL value.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "attributes-to-json-regex": {
                            "name": "attributes-to-json-regex",
                            "displayName": "Attributes Regular Expression",
                            "description": "Regular expression that will be evaluated against the flow file attributes to select the matching attributes. This property can be used in combination with the attributes list property.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Destination": {
                            "name": "Destination",
                            "displayName": "Destination",
                            "description": "Control if JSON value is written as a new flowfile attribute 'JSONAttributes' or written in the flowfile content. Writing to flowfile content will overwrite any existing flowfile content.",
                            "defaultValue": "flowfile-attribute",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "flowfile-attribute",
                                        "value": "flowfile-attribute"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "flowfile-content",
                                        "value": "flowfile-content"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Include Core Attributes": {
                            "name": "Include Core Attributes",
                            "displayName": "Include Core Attributes",
                            "description": "Determines if the FlowFile org.apache.nifi.flowfile.attributes.CoreAttributes which are contained in every FlowFile should be included in the final JSON value generated.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Null Value": {
                            "name": "Null Value",
                            "displayName": "Null Value",
                            "description": "If true a non existing or empty attribute will be NULL in the resulting JSON. If false an empty string will be placed in the JSON",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "3a70fb9e-fad8-3c5a-40b9-5326526ab1be",
                "name": "Set Metadata for Indexing",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "3a70fb9e-fad8-3c5a-40b9-5326526ab1be",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Set Metadata for Indexing",
                    "type": "AttributesToJSON",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "eeb7c5f9-f0fc-33dc-17f9-6969a688cf25",
            "uri": "https://localhost:8179/nifi-api/processors/eeb7c5f9-f0fc-33dc-17f9-6969a688cf25",
            "position": {
                "x": 476.0848189423923,
                "y": 590.5721942169075
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "eeb7c5f9-f0fc-33dc-17f9-6969a688cf25",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 476.0848189423923,
                    "y": 590.5721942169075
                },
                "name": "HDFS",
                "type": "org.apache.nifi.processors.hadoop.GetHDFS",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-hadoop-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All files retrieved from HDFS are transferred to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Hadoop Configuration Resources": "/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml",
                        "kerberos-credentials-service": null,
                        "Kerberos Principal": "nifi",
                        "Kerberos Keytab": "/etc/security/keytabs/nifi.headless.keytab",
                        "Kerberos Relogin Period": "4 hours",
                        "Additional Classpath Resources": null,
                        "Directory": null,
                        "Recurse Subdirectories": "false",
                        "Keep Source File": "false",
                        "File Filter Regex": null,
                        "Filter Match Name Only": "true",
                        "Ignore Dotted Files": "true",
                        "Minimum File Age": "0 sec",
                        "Maximum File Age": null,
                        "Polling Interval": "0 sec",
                        "Batch Size": "100",
                        "IO Buffer Size": null,
                        "Compression codec": "NONE"
                    },
                    "descriptors": {
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration. To use swebhdfs, see 'Additional Details' section of PutHDFS's documentation.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "kerberos-credentials-service": {
                            "name": "kerberos-credentials-service",
                            "displayName": "Kerberos Credentials Service",
                            "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "KeytabCredentialsService",
                                        "value": "618a3674-0165-1000-3e4e-f6dfd8dff05f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Kerberos Relogin Period": {
                            "name": "Kerberos Relogin Period",
                            "displayName": "Kerberos Relogin Period",
                            "description": "Period of time which should pass before attempting a kerberos relogin.\n\nThis property has been deprecated, and has no effect on processing. Relogins now occur automatically.",
                            "defaultValue": "4 hours",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Additional Classpath Resources": {
                            "name": "Additional Classpath Resources",
                            "displayName": "Additional Classpath Resources",
                            "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Directory": {
                            "name": "Directory",
                            "displayName": "Directory",
                            "description": "The HDFS directory from which files should be read",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Recurse Subdirectories": {
                            "name": "Recurse Subdirectories",
                            "displayName": "Recurse Subdirectories",
                            "description": "Indicates whether to pull files from subdirectories of the HDFS directory",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Keep Source File": {
                            "name": "Keep Source File",
                            "displayName": "Keep Source File",
                            "description": "Determines whether to delete the file from HDFS after it has been successfully transferred. If true, the file will be fetched repeatedly. This is intended for testing only.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "File Filter Regex": {
                            "name": "File Filter Regex",
                            "displayName": "File Filter Regex",
                            "description": "A Java Regular Expression for filtering Filenames; if a filter is supplied then only files whose names match that Regular Expression will be fetched, otherwise all files will be fetched",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Filter Match Name Only": {
                            "name": "Filter Match Name Only",
                            "displayName": "Filter Match Name Only",
                            "description": "If true then File Filter Regex will match on just the filename, otherwise subdirectory names will be included with filename in the regex comparison",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Dotted Files": {
                            "name": "Ignore Dotted Files",
                            "displayName": "Ignore Dotted Files",
                            "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Age": {
                            "name": "Minimum File Age",
                            "displayName": "Minimum File Age",
                            "description": "The minimum age that a file must be in order to be pulled; any file younger than this amount of time (based on last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Age": {
                            "name": "Maximum File Age",
                            "displayName": "Maximum File Age",
                            "description": "The maximum age that a file must be in order to be pulled; any file older than this amount of time (based on last modification date) will be ignored",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Indicates how long to wait between performing directory listings",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Batch Size": {
                            "name": "Batch Size",
                            "displayName": "Batch Size",
                            "description": "The maximum number of files to pull in each iteration, based on run schedule.",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "IO Buffer Size": {
                            "name": "IO Buffer Size",
                            "displayName": "IO Buffer Size",
                            "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Compression codec": {
                            "name": "Compression codec",
                            "displayName": "Compression codec",
                            "description": "",
                            "defaultValue": "NONE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "NONE",
                                        "value": "NONE",
                                        "description": "No compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DEFAULT",
                                        "value": "DEFAULT",
                                        "description": "Default ZLIB compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BZIP",
                                        "value": "BZIP",
                                        "description": "BZIP compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "GZIP",
                                        "value": "GZIP",
                                        "description": "GZIP compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "LZ4",
                                        "value": "LZ4",
                                        "description": "LZ4 compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "LZO",
                                        "value": "LZO",
                                        "description": "LZO compression - it assumes LD_LIBRARY_PATH has been set and jar is available"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SNAPPY",
                                        "value": "SNAPPY",
                                        "description": "Snappy compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AUTOMATIC",
                                        "value": "AUTOMATIC",
                                        "description": "Will attempt to automatically detect the compression codec."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "eeb7c5f9-f0fc-33dc-17f9-6969a688cf25",
                "name": "HDFS",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "eeb7c5f9-f0fc-33dc-17f9-6969a688cf25",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "HDFS",
                    "type": "GetHDFS",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "f78f7aa1-9d0e-3c62-e56d-b94491afedc8",
            "uri": "https://localhost:8179/nifi-api/processors/f78f7aa1-9d0e-3c62-e56d-b94491afedc8",
            "position": {
                "x": 2342.240425547301,
                "y": 474.9038470586529
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "f78f7aa1-9d0e-3c62-e56d-b94491afedc8",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 2342.240425547301,
                    "y": 474.9038470586529
                },
                "name": "Detect DB Avro Ingest",
                "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "table-avro",
                        "description": "",
                        "autoTerminate": false
                    },
                    {
                        "name": "unmatched",
                        "description": "FlowFiles that do not match any user-define expression will be routed here",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Routing Strategy": "Route to Property name",
                        "table-avro": "${db.table.output.format:equals('AVRO')}"
                    },
                    "descriptors": {
                        "Routing Strategy": {
                            "name": "Routing Strategy",
                            "displayName": "Routing Strategy",
                            "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                            "defaultValue": "Route to Property name",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to Property name",
                                        "value": "Route to Property name",
                                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if all match",
                                        "value": "Route to 'match' if all match",
                                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if any matches",
                                        "value": "Route to 'match' if any matches",
                                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "table-avro": {
                            "name": "table-avro",
                            "displayName": "table-avro",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "f78f7aa1-9d0e-3c62-e56d-b94491afedc8",
                "name": "Detect DB Avro Ingest",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "f78f7aa1-9d0e-3c62-e56d-b94491afedc8",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "Detect DB Avro Ingest",
                    "type": "RouteOnAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "ee630075-7389-36ac-77ca-1689f5be1f8f",
            "uri": "https://localhost:8179/nifi-api/processors/ee630075-7389-36ac-77ca-1689f5be1f8f",
            "position": {
                "x": 10,
                "y": 13.03180347556372
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "ee630075-7389-36ac-77ca-1689f5be1f8f",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 10,
                    "y": 13.03180347556372
                },
                "name": "Receive Index Request",
                "type": "org.apache.nifi.jms.processors.ConsumeJMS",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-jms-processors-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received from the JMS Destination are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Connection Factory Service": "341ad194-9884-3ae3-1d07-ec78f6f9ec5a",
                        "Destination Name": "thinkbig.nifi.index",
                        "Destination Type": "QUEUE",
                        "User Name": null,
                        "Password": null,
                        "Connection Client ID": null,
                        "Session Cache size": "1",
                        "character-set": "UTF-8",
                        "Acknowledgement Mode": "2",
                        "Durable subscription": "false",
                        "Shared subscription": "false",
                        "Subscription Name": null
                    },
                    "descriptors": {
                        "Connection Factory Service": {
                            "name": "Connection Factory Service",
                            "displayName": "Connection Factory Service",
                            "description": "The Controller Service that is used to obtain ConnectionFactory",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "JMSConnectionFactoryProvider",
                                        "value": "341ad194-9884-3ae3-1d07-ec78f6f9ec5a"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "JMSConnectionFactoryProvider",
                                        "value": "adc2fd10-0163-1000-6bee-28216e32df50"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.jms.cf.JMSConnectionFactoryProviderDefinition",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-jms-cf-service-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Destination Name": {
                            "name": "Destination Name",
                            "displayName": "Destination Name",
                            "description": "The name of the JMS Destination. Usually provided by the administrator (e.g., 'topic://myTopic' or 'myTopic').",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Destination Type": {
                            "name": "Destination Type",
                            "displayName": "Destination Type",
                            "description": "The type of the JMS Destination. Could be one of 'QUEUE' or 'TOPIC'. Usually provided by the administrator. Defaults to 'TOPIC",
                            "defaultValue": "QUEUE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "QUEUE",
                                        "value": "QUEUE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "TOPIC",
                                        "value": "TOPIC"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "User Name": {
                            "name": "User Name",
                            "displayName": "User Name",
                            "description": "User Name used for authentication and authorization.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "Password used for authentication and authorization.",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Connection Client ID": {
                            "name": "Connection Client ID",
                            "displayName": "Connection Client ID",
                            "description": "The client id to be set on the connection, if set. For durable non shared consumer this is mandatory, for all others it is optional, typically with shared consumers it is undesirable to be set. Please see JMS spec for further details",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Session Cache size": {
                            "name": "Session Cache size",
                            "displayName": "Session Cache size",
                            "description": "This property is deprecated and no longer has any effect on the Processor. It will be removed in a later version.",
                            "defaultValue": "1",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "character-set": {
                            "name": "character-set",
                            "displayName": "Character Set",
                            "description": "The name of the character set to use to construct or interpret TextMessages",
                            "defaultValue": "UTF-8",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Acknowledgement Mode": {
                            "name": "Acknowledgement Mode",
                            "displayName": "Acknowledgement Mode",
                            "description": "The JMS Acknowledgement Mode. Using Auto Acknowledge can cause messages to be lost on restart of NiFi but may provide better performance than Client Acknowledge.",
                            "defaultValue": "2",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "AUTO_ACKNOWLEDGE (1)",
                                        "value": "1",
                                        "description": "Automatically acknowledges a client's receipt of a message, regardless if NiFi session has been commited. Can result in data loss in the event where NiFi abruptly stopped before session was commited."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "CLIENT_ACKNOWLEDGE (2)",
                                        "value": "2",
                                        "description": "(DEFAULT) Manually acknowledges a client's receipt of a message after NiFi Session was commited, thus ensuring no data loss"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DUPS_OK_ACKNOWLEDGE (3)",
                                        "value": "3",
                                        "description": "This acknowledgment mode instructs the session to lazily acknowledge the delivery of messages. May result in both data duplication and data loss while achieving the best throughput."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Durable subscription": {
                            "name": "Durable subscription",
                            "displayName": "Durable subscription",
                            "description": "If destination is Topic if present then make it the consumer durable. @see https://docs.oracle.com/javaee/7/api/javax/jms/Session.html#createDurableConsumer-javax.jms.Topic-java.lang.String-",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Shared subscription": {
                            "name": "Shared subscription",
                            "displayName": "Shared subscription",
                            "description": "If destination is Topic if present then make it the consumer shared. @see https://docs.oracle.com/javaee/7/api/javax/jms/Session.html#createSharedConsumer-javax.jms.Topic-java.lang.String-",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Subscription Name": {
                            "name": "Subscription Name",
                            "displayName": "Subscription Name",
                            "description": "The name of the subscription to use if destination is Topic and is shared or durable.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "ee630075-7389-36ac-77ca-1689f5be1f8f",
                "name": "Receive Index Request",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "ee630075-7389-36ac-77ca-1689f5be1f8f",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Receive Index Request",
                    "type": "ConsumeJMS",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 299,
                    "tasksDurationNanos": 299389751685,
                    "tasks": "299",
                    "tasksDuration": "00:04:59.389",
                    "activeThreadCount": 1
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "e1122b6d-d961-3721-55d9-3a24345a761e",
            "uri": "https://localhost:8179/nifi-api/processors/e1122b6d-d961-3721-55d9-3a24345a761e",
            "position": {
                "x": 2708.0355399376044,
                "y": 2086.2879762476505
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "e1122b6d-d961-3721-55d9-3a24345a761e",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 2708.0355399376044,
                    "y": 2086.2879762476505
                },
                "name": "Remove Field Policies",
                "type": "org.apache.nifi.processors.script.ExecuteScript",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-scripting-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles that failed to be processed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "FlowFiles that were successfully processed",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Script Engine": "Groovy",
                        "Script File": null,
                        "Script Body": "def flowFile = session.get()\n    if(!flowFile) return\n    def inputFolder = flowFile.getAttribute(\"spark.input_folder\")\n    def feed = flowFile.getAttribute(\"feed\")\n    def category = flowFile.getAttribute(\"category\")\n    def feedts = flowFile.getAttribute(\"feedts\")\n    def folder = new File(inputFolder + \"/\"+category+\"/\"+feed+\"/\"+feedts)\n    // If it doesn't exist\n    if( folder.exists() ) {\n    // Delete the folder for this feed\n    folder.deleteDir()\n    }\n    session.transfer(flowFile, REL_SUCCESS)\n",
                        "Module Directory": null
                    },
                    "descriptors": {
                        "Script Engine": {
                            "name": "Script Engine",
                            "displayName": "Script Engine",
                            "description": "The engine to execute scripts",
                            "defaultValue": "Clojure",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Clojure",
                                        "value": "Clojure"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ECMAScript",
                                        "value": "ECMAScript"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Groovy",
                                        "value": "Groovy"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "lua",
                                        "value": "lua"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "python",
                                        "value": "python"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ruby",
                                        "value": "ruby"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Script File": {
                            "name": "Script File",
                            "displayName": "Script File",
                            "description": "Path to script file to execute. Only one of Script File or Script Body may be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Script Body": {
                            "name": "Script Body",
                            "displayName": "Script Body",
                            "description": "Body of script to execute. Only one of Script File or Script Body may be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Module Directory": {
                            "name": "Module Directory",
                            "displayName": "Module Directory",
                            "description": "Comma-separated list of paths to files and/or directories which contain modules required by the script.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "e1122b6d-d961-3721-55d9-3a24345a761e",
                "name": "Remove Field Policies",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "e1122b6d-d961-3721-55d9-3a24345a761e",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Remove Field Policies",
                    "type": "ExecuteScript",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "e5929a82-cadb-33bc-bf0b-92d70fe6b9a8",
            "uri": "https://localhost:8179/nifi-api/processors/e5929a82-cadb-33bc-bf0b-92d70fe6b9a8",
            "position": {
                "x": 1532.2840059610753,
                "y": 2623.209758864249
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "e5929a82-cadb-33bc-bf0b-92d70fe6b9a8",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 1532.2840059610753,
                    "y": 2623.209758864249
                },
                "name": "Merge Table",
                "type": "com.thinkbiganalytics.nifi.v2.ingest.MergeTable",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#2cfa08"
                },
                "relationships": [
                    {
                        "name": "blocked",
                        "description": "A block detection will route the FlowFile here.",
                        "autoTerminate": false
                    },
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Successfully relationship.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Database Connection Pooling Service": "51f09b62-b321-39b3-e7fb-cb527eba7521",
                        "Merge Strategy": "${metadata.table.targetMergeStrategy}",
                        "Source schema": "${category}",
                        "Source table": "${feed}_valid",
                        "Target schema": "${category}",
                        "Target table": "${feed}",
                        "Feed partition value": "${feedts}",
                        "Partition Specification": "${metadata.table.partitionSpecs}",
                        "Field specification": "${metadata.table.fieldStructure}",
                        "Hive Configurations": null,
                        "Reset hive on connection": "true",
                        "blocking-id": "${category}.${feed}",
                        "Hive Connection Pooling Service": null
                    },
                    "descriptors": {
                        "Database Connection Pooling Service": {
                            "name": "Database Connection Pooling Service",
                            "displayName": "Database Connection Pooling Service",
                            "description": "The Controller Service that is used to obtain connection to database",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "51f09b62-b321-39b3-e7fb-cb527eba7521"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "adc2fd36-0163-1000-c94e-9156591e27ee"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.thrift.ThriftService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "Merge Strategy": {
                            "name": "Merge Strategy",
                            "displayName": "Merge Strategy",
                            "description": "Specifies the algorithm used to merge. Valid values are SYNC,MERGE, PK_MERGE, DEDUPE_AND_MERGE, and ROLLING_SYNC.  Sync will completely overwrite the target table with the source data. Rolling Sync will overwrite target partitions only when present in source. Merge will append the data into the target partitions. Dedupe will insert into the target partition but ensure no duplicate rows are remaining. PK Merge will insert or update existing rows matching the same primary key.",
                            "defaultValue": "${metadata.table.targetMergeStrategy}",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "MERGE",
                                        "value": "MERGE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DEDUPE_AND_MERGE",
                                        "value": "DEDUPE_AND_MERGE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "PK_MERGE",
                                        "value": "PK_MERGE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SYNC",
                                        "value": "SYNC"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ROLLING_SYNC",
                                        "value": "ROLLING_SYNC"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "${metadata.table.targetMergeStrategy}",
                                        "value": "${metadata.table.targetMergeStrategy}"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source schema": {
                            "name": "Source schema",
                            "displayName": "Source schema",
                            "description": "Name of the schema or database for the source table",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source table": {
                            "name": "Source table",
                            "displayName": "Source table",
                            "description": "Name of the source table",
                            "defaultValue": "${metadata.systemFeedName}_valid",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Target schema": {
                            "name": "Target schema",
                            "displayName": "Target schema",
                            "description": "Name of the schema or database for the target table",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Target table": {
                            "name": "Target table",
                            "displayName": "Target table",
                            "description": "Name of the target table",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed partition value": {
                            "name": "Feed partition value",
                            "displayName": "Feed partition value",
                            "description": "Feed timestamp that identifies the current feed partition",
                            "defaultValue": "${feedts}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Partition Specification": {
                            "name": "Partition Specification",
                            "displayName": "Partition Specification",
                            "description": "Partition specification in format: field|type|formula\nfield|type|formula",
                            "defaultValue": "${metadata.table.partitionSpecs}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Field specification": {
                            "name": "Field specification",
                            "displayName": "Field specification",
                            "description": "Pipe-delim and newline for each field: column name|data type|comment|primary_key?|created_dt?|modified_dt?",
                            "defaultValue": "${metadata.table.fieldStructure}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Hive Configurations": {
                            "name": "Hive Configurations",
                            "displayName": "Hive Configurations",
                            "description": "Pipe separated list of Hive Configurations that you would like to set for Hive queries ",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Reset hive on connection": {
                            "name": "Reset hive on connection",
                            "displayName": "Reset hive on connection",
                            "description": "Upon getting a new connection it will call Hive 'reset' to reset hive settings back to the default.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "blocking-id": {
                            "name": "blocking-id",
                            "displayName": "Blocking Id",
                            "description": "A value, or the results of an Attribute Expression Language statement, which will be evaluated against a FlowFile in order to determine the blocking key.  If more than 1 flowfile enter this processor with the same blocking key the flowfile will be penalized and routed to the 'blocked' relationship where it can retry if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Hive Connection Pooling Service": {
                            "name": "Hive Connection Pooling Service",
                            "displayName": "Hive Connection Pooling Service",
                            "description": "If specified this connection pool will be used in place of the Thrift Service",
                            "allowableValues": [],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.dbcp.hive.HiveDBCPService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-hive-services-api-nar",
                                "version": "1.6.0"
                            }
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 10,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "e5929a82-cadb-33bc-bf0b-92d70fe6b9a8",
                "name": "Merge Table",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "e5929a82-cadb-33bc-bf0b-92d70fe6b9a8",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Merge Table",
                    "type": "MergeTable",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 4
            },
            "id": "e7d65722-b190-3323-0122-09e9c4c111b5",
            "uri": "https://localhost:8179/nifi-api/processors/e7d65722-b190-3323-0122-09e9c4c111b5",
            "position": {
                "x": 2186.374501002623,
                "y": 1278.3689269685192
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "e7d65722-b190-3323-0122-09e9c4c111b5",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 2186.374501002623,
                    "y": 1278.3689269685192
                },
                "name": "Record Metadata",
                "type": "com.thinkbiganalytics.nifi.v2.metadata.PutFeedMetadata",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#da05ff"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "All FlowFiles are routed to this relationship on failure",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "All FlowFiles are routed to this relationship on success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Provider Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "Feed Category": "${category}",
                        "Feed Name": "${feed}",
                        "Namespace": "registration",
                        "hdfsFolders": "${hive.ingest.root}/${category}\n${hive.ingest.root}/${category}/${feed}\n${hive.ingest.root}/${category}/${feed}/feed\n${hive.ingest.root}/${category}/${feed}/valid\n${hive.ingest.root}/${category}/${feed}/invalid\n${hive.profile.root}/${category}\n${hive.profile.root}/${category}/${feed}\n${hive.profile.root}/${category}/${feed}/profile\n${hive.master.root}/${category}/\n${hive.master.root}/${category}/${feed}",
                        "hiveSchema": "${category}",
                        "hiveTableNames": "${feed}_feed\n${feed}_valid\n${feed}_invalid\n${feed}_profile\n${feed}"
                    },
                    "descriptors": {
                        "Metadata Provider Service": {
                            "name": "Metadata Provider Service",
                            "displayName": "Metadata Provider Service",
                            "description": "Service supplying the implementations of the various metadata providers.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "Feed Category": {
                            "name": "Feed Category",
                            "displayName": "Feed Category",
                            "description": "They category your feed is created under",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed Name": {
                            "name": "Feed Name",
                            "displayName": "Feed Name",
                            "description": "They name of the feed",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Namespace": {
                            "name": "Namespace",
                            "displayName": "Namespace",
                            "description": "Namespace for the attributes you create. This value will be prepended to the attribute name for storage in the metadata store  ",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "hdfsFolders": {
                            "name": "hdfsFolders",
                            "displayName": "hdfsFolders",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hiveSchema": {
                            "name": "hiveSchema",
                            "displayName": "hiveSchema",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hiveTableNames": {
                            "name": "hiveTableNames",
                            "displayName": "hiveTableNames",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "e7d65722-b190-3323-0122-09e9c4c111b5",
                "name": "Record Metadata",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "e7d65722-b190-3323-0122-09e9c4c111b5",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Record Metadata",
                    "type": "PutFeedMetadata",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "a017cfba-bc97-3053-44b4-f5508792c10a",
            "uri": "https://localhost:8179/nifi-api/processors/a017cfba-bc97-3053-44b4-f5508792c10a",
            "position": {
                "x": 1512.6583465062795,
                "y": 376.4579872699269
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "a017cfba-bc97-3053-44b4-f5508792c10a",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 1512.6583465062795,
                    "y": 376.4579872699269
                },
                "name": "Merge Content",
                "type": "org.apache.nifi.processors.standard.MergeContent",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure",
                        "autoTerminate": false
                    },
                    {
                        "name": "merged",
                        "description": "The FlowFile containing the merged content",
                        "autoTerminate": false
                    },
                    {
                        "name": "original",
                        "description": "The FlowFiles that were used to create the bundle",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Merge Strategy": "Bin-Packing Algorithm",
                        "Merge Format": "Binary Concatenation",
                        "Attribute Strategy": "Keep Only Common Attributes",
                        "Correlation Attribute Name": "merge.correlation",
                        "mergecontent-metadata-strategy": "Do Not Merge Uncommon Metadata",
                        "Minimum Number of Entries": "1",
                        "Maximum Number of Entries": "1000",
                        "Minimum Group Size": "0 B",
                        "Maximum Group Size": null,
                        "Max Bin Age": "10s",
                        "Maximum number of Bins": "100",
                        "Delimiter Strategy": "Text",
                        "Header File": null,
                        "Footer File": null,
                        "Demarcator File": null,
                        "Compression Level": "1",
                        "Keep Path": "false",
                        "Tar Modified Time": "${file.lastModifiedTime}"
                    },
                    "descriptors": {
                        "Merge Strategy": {
                            "name": "Merge Strategy",
                            "displayName": "Merge Strategy",
                            "description": "Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles",
                            "defaultValue": "Bin-Packing Algorithm",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Bin-Packing Algorithm",
                                        "value": "Bin-Packing Algorithm",
                                        "description": "Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the <Correlation Attribute> property is set)"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Defragment",
                                        "value": "Defragment",
                                        "description": "Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes <fragment.identifier>, <fragment.count>, and <fragment.index> or alternatively (for backward compatibility purposes) <segment.identifier>, <segment.count>, and <segment.index>. All FlowFiles with the same value for \"fragment.identifier\" will be grouped together. All FlowFiles in this group must have the same value for the \"fragment.count\" attribute. All FlowFiles in this group must have a unique value for the \"fragment.index\" attribute between 0 and the value of the \"fragment.count\" attribute."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Merge Format": {
                            "name": "Merge Format",
                            "displayName": "Merge Format",
                            "description": "Determines the format that will be used to merge the content.",
                            "defaultValue": "Binary Concatenation",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "TAR",
                                        "value": "TAR",
                                        "description": "A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' <path> attribute will be used to create a directory in the TAR file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named <tar.permissions> that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ZIP",
                                        "value": "ZIP",
                                        "description": "A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' <path> attribute will be used to create a directory in the ZIP file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The <Compression Level> property indicates the ZIP compression to use."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "FlowFile Stream, v3",
                                        "value": "FlowFile Stream, v3",
                                        "description": "A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "FlowFile Stream, v2",
                                        "value": "FlowFile Stream, v2",
                                        "description": "A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "FlowFile Tar, v1",
                                        "value": "FlowFile Tar, v1",
                                        "description": "A bin of FlowFiles will be combined into a single Version 1 FlowFile Package"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Binary Concatenation",
                                        "value": "Binary Concatenation",
                                        "description": "The contents of all FlowFiles will be concatenated together into a single FlowFile"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Avro",
                                        "value": "Avro",
                                        "description": "The Avro contents of all FlowFiles will be concatenated together into a single FlowFile"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Attribute Strategy": {
                            "name": "Attribute Strategy",
                            "displayName": "Attribute Strategy",
                            "description": "Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.",
                            "defaultValue": "Keep Only Common Attributes",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Keep Only Common Attributes",
                                        "value": "Keep Only Common Attributes",
                                        "description": "Any attribute that is not the same on all FlowFiles in a bin will be dropped. Those that are the same across all FlowFiles will be retained."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Keep All Unique Attributes",
                                        "value": "Keep All Unique Attributes",
                                        "description": "Any attribute that has the same value for all FlowFiles in a bin, or has no value for a FlowFile, will be kept. For example, if a bin consists of 3 FlowFiles and 2 of them have a value of 'hello' for the 'greeting' attribute and the third FlowFile has no 'greeting' attribute then the outbound FlowFile will get a 'greeting' attribute with the value 'hello'."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Correlation Attribute Name": {
                            "name": "Correlation Attribute Name",
                            "displayName": "Correlation Attribute Name",
                            "description": "If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "mergecontent-metadata-strategy": {
                            "name": "mergecontent-metadata-strategy",
                            "displayName": "Metadata Strategy",
                            "description": "For FlowFiles whose input format supports metadata (Avro, e.g.), this property determines which metadata should be added to the bundle. If 'Use First Metadata' is selected, the metadata keys/values from the first FlowFile to be bundled will be used. If 'Keep Only Common Metadata' is selected, only the metadata that exists on all FlowFiles in the bundle, with the same value, will be preserved. If 'Ignore Metadata' is selected, no metadata is transferred to the outgoing bundled FlowFile. If 'Do Not Merge Uncommon Metadata' is selected, any FlowFile whose metadata values do not match those of the first bundled FlowFile will not be merged.",
                            "defaultValue": "Do Not Merge Uncommon Metadata",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Use First Metadata",
                                        "value": "Use First Metadata",
                                        "description": "For any input format that supports metadata (Avro, e.g.), the metadata for the first FlowFile in the bin will be set on the output FlowFile."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Keep Only Common Metadata",
                                        "value": "Keep Only Common Metadata",
                                        "description": "For any input format that supports metadata (Avro, e.g.), any FlowFile whose metadata values match those of the first FlowFile, any additional metadata will be dropped but the FlowFile will be merged. Any FlowFile whose metadata values do not match those of the first FlowFile in the bin will not be merged."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Do Not Merge Uncommon Metadata",
                                        "value": "Do Not Merge Uncommon Metadata",
                                        "description": "For any input format that supports metadata (Avro, e.g.), any FlowFile whose metadata values do not match those of the first FlowFile in the bin will not be merged."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Ignore Metadata",
                                        "value": "Ignore Metadata",
                                        "description": "Ignores (does not transfer, compare, etc.) any metadata from a FlowFile whose content supports embedded metadata."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum Number of Entries": {
                            "name": "Minimum Number of Entries",
                            "displayName": "Minimum Number of Entries",
                            "description": "The minimum number of files to include in a bundle",
                            "defaultValue": "1",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum Number of Entries": {
                            "name": "Maximum Number of Entries",
                            "displayName": "Maximum Number of Entries",
                            "description": "The maximum number of files to include in a bundle",
                            "defaultValue": "1000",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum Group Size": {
                            "name": "Minimum Group Size",
                            "displayName": "Minimum Group Size",
                            "description": "The minimum size of for the bundle",
                            "defaultValue": "0 B",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum Group Size": {
                            "name": "Maximum Group Size",
                            "displayName": "Maximum Group Size",
                            "description": "The maximum size for the bundle. If not specified, there is no maximum.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Bin Age": {
                            "name": "Max Bin Age",
                            "displayName": "Max Bin Age",
                            "description": "The maximum age of a Bin that will trigger a Bin to be complete. Expected format is <duration> <time unit> where <duration> is a positive integer and time unit is one of seconds, minutes, hours",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum number of Bins": {
                            "name": "Maximum number of Bins",
                            "displayName": "Maximum number of Bins",
                            "description": "Specifies the maximum number of bins that can be held in memory at any one time",
                            "defaultValue": "5",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Delimiter Strategy": {
                            "name": "Delimiter Strategy",
                            "displayName": "Delimiter Strategy",
                            "description": "Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.",
                            "defaultValue": "Filename",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Filename",
                                        "value": "Filename",
                                        "description": "The values of Header, Footer, and Demarcator will be retrieved from the contents of a file"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Text",
                                        "value": "Text",
                                        "description": "The values of Header, Footer, and Demarcator will be specified as property values"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Header File": {
                            "name": "Header File",
                            "displayName": "Header",
                            "description": "Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Footer File": {
                            "name": "Footer File",
                            "displayName": "Footer",
                            "description": "Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Demarcator File": {
                            "name": "Demarcator File",
                            "displayName": "Demarcator",
                            "description": "Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Compression Level": {
                            "name": "Compression Level",
                            "displayName": "Compression Level",
                            "description": "Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored",
                            "defaultValue": "1",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "0",
                                        "value": "0"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "1",
                                        "value": "1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "2",
                                        "value": "2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "3",
                                        "value": "3"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "4",
                                        "value": "4"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "5",
                                        "value": "5"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "6",
                                        "value": "6"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "7",
                                        "value": "7"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "8",
                                        "value": "8"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "9",
                                        "value": "9"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Keep Path": {
                            "name": "Keep Path",
                            "displayName": "Keep Path",
                            "description": "If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Tar Modified Time": {
                            "name": "Tar Modified Time",
                            "displayName": "Tar Modified Time",
                            "description": "If using the Tar Merge Format, specifies if the Tar entry should store the modified timestamp either by expression (e.g. ${file.lastModifiedTime} or static value, both of which must match the ISO8601 format 'yyyy-MM-dd'T'HH:mm:ssZ'; if using other merge strategy or left blank, this value is ignored",
                            "defaultValue": "${file.lastModifiedTime}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "a017cfba-bc97-3053-44b4-f5508792c10a",
                "name": "Merge Content",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "a017cfba-bc97-3053-44b4-f5508792c10a",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Merge Content",
                    "type": "MergeContent",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 300,
                    "tasksDurationNanos": 14017374,
                    "tasks": "300",
                    "tasksDuration": "00:00:00.014",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "ced90dbf-162a-316a-dd88-156d4ca9c63c",
            "uri": "https://localhost:8179/nifi-api/processors/ced90dbf-162a-316a-dd88-156d4ca9c63c",
            "position": {
                "x": 573.7694694867009,
                "y": 13.031774720330304
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "ced90dbf-162a-316a-dd88-156d4ca9c63c",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 573.7694694867009,
                    "y": 13.031774720330304
                },
                "name": "Set Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Do not store state",
                        "Stateful Variables Initial Value": null,
                        "index-or-collection-name": "kylo-data",
                        "searchengine": "elasticsearch"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "index-or-collection-name": {
                            "name": "index-or-collection-name",
                            "displayName": "index-or-collection-name",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "searchengine": {
                            "name": "searchengine",
                            "displayName": "searchengine",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "ced90dbf-162a-316a-dd88-156d4ca9c63c",
                "name": "Set Parameters",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "ced90dbf-162a-316a-dd88-156d4ca9c63c",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Set Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "15777fa9-4a06-3078-1908-c521fe8a594f",
            "uri": "https://localhost:8179/nifi-api/processors/15777fa9-4a06-3078-1908-c521fe8a594f",
            "position": {
                "x": 1782.9553713302557,
                "y": 1354.9560579438003
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "15777fa9-4a06-3078-1908-c521fe8a594f",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 1782.9553713302557,
                    "y": 1354.9560579438003
                },
                "name": "Initialize Cleanup Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "category": "concerts",
                        "feed": "events",
                        "hdfs.ingest.root": "/etl",
                        "hive.ingest.root": "/model.db",
                        "hive.master.root": "/app/warehouse",
                        "hive.profile.root": "/model.db"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "category": {
                            "name": "category",
                            "displayName": "category",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "feed": {
                            "name": "feed",
                            "displayName": "feed",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "15777fa9-4a06-3078-1908-c521fe8a594f",
                "name": "Initialize Cleanup Parameters",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "15777fa9-4a06-3078-1908-c521fe8a594f",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "Initialize Cleanup Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "cb47741d-36c6-352e-ea96-e9b66923268d",
            "uri": "https://localhost:8179/nifi-api/processors/cb47741d-36c6-352e-ea96-e9b66923268d",
            "position": {
                "x": 1353.2561610430853,
                "y": 670.638883829688
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "cb47741d-36c6-352e-ea96-e9b66923268d",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 1353.2561610430853,
                    "y": 670.638883829688
                },
                "name": "Record Metadata",
                "type": "com.thinkbiganalytics.nifi.v2.metadata.PutFeedMetadata",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#da05ff"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "All FlowFiles are routed to this relationship on failure",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "All FlowFiles are routed to this relationship on success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Provider Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "Feed Category": "${category}",
                        "Feed Name": "${feed}",
                        "Namespace": "metadata",
                        "hdfsFolders": "${hive.master.root}/${category}/\n${hive.master.root}/${category}/${feed}\n${hive.profile.root}/${category}/\n${hive.profile.root}/${category}/${feed}\n${hive.profile.root}/${category}/${feed}/profile",
                        "hiveSchema": "${category}",
                        "hiveTableNames": "${feed}_feed\n${feed}_valid\n${feed}_invalid\n${feed}_profile\n${feed}"
                    },
                    "descriptors": {
                        "Metadata Provider Service": {
                            "name": "Metadata Provider Service",
                            "displayName": "Metadata Provider Service",
                            "description": "Service supplying the implementations of the various metadata providers.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "Feed Category": {
                            "name": "Feed Category",
                            "displayName": "Feed Category",
                            "description": "They category your feed is created under",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed Name": {
                            "name": "Feed Name",
                            "displayName": "Feed Name",
                            "description": "They name of the feed",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Namespace": {
                            "name": "Namespace",
                            "displayName": "Namespace",
                            "description": "Namespace for the attributes you create. This value will be prepended to the attribute name for storage in the metadata store  ",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "hdfsFolders": {
                            "name": "hdfsFolders",
                            "displayName": "hdfsFolders",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hiveSchema": {
                            "name": "hiveSchema",
                            "displayName": "hiveSchema",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hiveTableNames": {
                            "name": "hiveTableNames",
                            "displayName": "hiveTableNames",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "cb47741d-36c6-352e-ea96-e9b66923268d",
                "name": "Record Metadata",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "cb47741d-36c6-352e-ea96-e9b66923268d",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Record Metadata",
                    "type": "PutFeedMetadata",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "a044c643-c503-3773-7096-988d3601b391",
            "uri": "https://localhost:8179/nifi-api/processors/a044c643-c503-3773-7096-988d3601b391",
            "position": {
                "x": 16.205852895502176,
                "y": 755.3197421390705
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "a044c643-c503-3773-7096-988d3601b391",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 16.205852895502176,
                    "y": 755.3197421390705
                },
                "name": "S3",
                "type": "org.apache.nifi.processors.aws.s3.ListS3",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-aws-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "FlowFiles are routed to success relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": false,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Bucket": null,
                        "Region": "us-west-2",
                        "Access Key": null,
                        "Secret Key": null,
                        "Credentials File": null,
                        "AWS Credentials Provider service": "2af72d4b-ed23-31a3-0000-000000000000",
                        "Communications Timeout": "30 secs",
                        "SSL Context Service": null,
                        "Endpoint Override URL": null,
                        "Signer Override": "Default Signature",
                        "Proxy Host": null,
                        "Proxy Host Port": null,
                        "delimiter": null,
                        "prefix": null,
                        "use-versions": "false",
                        "list-type": "1",
                        "min-age": "0 sec"
                    },
                    "descriptors": {
                        "Bucket": {
                            "name": "Bucket",
                            "displayName": "Bucket",
                            "description": "",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Region": {
                            "name": "Region",
                            "displayName": "Region",
                            "description": "",
                            "defaultValue": "us-west-2",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "us-gov-west-1",
                                        "value": "us-gov-west-1",
                                        "description": "us-gov-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-1",
                                        "value": "us-east-1",
                                        "description": "us-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-2",
                                        "value": "us-east-2",
                                        "description": "us-east-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-1",
                                        "value": "us-west-1",
                                        "description": "us-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-2",
                                        "value": "us-west-2",
                                        "description": "us-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-1",
                                        "value": "eu-west-1",
                                        "description": "eu-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-2",
                                        "value": "eu-west-2",
                                        "description": "eu-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-central-1",
                                        "value": "eu-central-1",
                                        "description": "eu-central-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-south-1",
                                        "value": "ap-south-1",
                                        "description": "ap-south-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-1",
                                        "value": "ap-southeast-1",
                                        "description": "ap-southeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-2",
                                        "value": "ap-southeast-2",
                                        "description": "ap-southeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-1",
                                        "value": "ap-northeast-1",
                                        "description": "ap-northeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-2",
                                        "value": "ap-northeast-2",
                                        "description": "ap-northeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "sa-east-1",
                                        "value": "sa-east-1",
                                        "description": "sa-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "cn-north-1",
                                        "value": "cn-north-1",
                                        "description": "cn-north-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ca-central-1",
                                        "value": "ca-central-1",
                                        "description": "ca-central-1"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Access Key": {
                            "name": "Access Key",
                            "displayName": "Access Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Secret Key": {
                            "name": "Secret Key",
                            "displayName": "Secret Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Credentials File": {
                            "name": "Credentials File",
                            "displayName": "Credentials File",
                            "description": "Path to a file containing AWS access key and secret key in properties file format.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "AWS Credentials Provider service": {
                            "name": "AWS Credentials Provider service",
                            "displayName": "AWS Credentials Provider service",
                            "description": "The Controller Service that is used to obtain aws credentials provider",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "adc46394-0163-1000-4fc1-afbc4db6d274"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "b63b608a-40fb-3499-0efd-60054f62dade"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-aws-service-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Communications Timeout": {
                            "name": "Communications Timeout",
                            "displayName": "Communications Timeout",
                            "description": "",
                            "defaultValue": "30 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Endpoint Override URL": {
                            "name": "Endpoint Override URL",
                            "displayName": "Endpoint Override URL",
                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Signer Override": {
                            "name": "Signer Override",
                            "displayName": "Signer Override",
                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                            "defaultValue": "Default Signature",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Default Signature",
                                        "value": "Default Signature"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v4",
                                        "value": "AWSS3V4SignerType"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v2",
                                        "value": "S3SignerType"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "Proxy host name or IP",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Host Port": {
                            "name": "Proxy Host Port",
                            "displayName": "Proxy Host Port",
                            "description": "Proxy host port",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "delimiter": {
                            "name": "delimiter",
                            "displayName": "Delimiter",
                            "description": "The string used to delimit directories within the bucket. Please consult the AWS documentation for the correct use of this field.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "prefix": {
                            "name": "prefix",
                            "displayName": "Prefix",
                            "description": "The prefix used to filter the object list. In most cases, it should end with a forward slash ('/').",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "use-versions": {
                            "name": "use-versions",
                            "displayName": "Use Versions",
                            "description": "Specifies whether to use S3 versions, if applicable.  If false, only the latest version of each object will be returned.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "list-type": {
                            "name": "list-type",
                            "displayName": "List Type",
                            "description": "Specifies whether to use the original List Objects or the newer List Objects Version 2 endpoint.",
                            "defaultValue": "1",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "List Objects V1",
                                        "value": "1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "List Objects V2",
                                        "value": "2"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "min-age": {
                            "name": "min-age",
                            "displayName": "Minimum Object Age",
                            "description": "The minimum age that an S3 object must be in order to be considered; any object younger than this amount of time (according to last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "a044c643-c503-3773-7096-988d3601b391",
                "name": "S3",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "a044c643-c503-3773-7096-988d3601b391",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "S3",
                    "type": "ListS3",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 1
            },
            "id": "2272733d-6725-3963-1dd6-facdcd4fb7da",
            "uri": "https://localhost:8179/nifi-api/processors/2272733d-6725-3963-1dd6-facdcd4fb7da",
            "position": {
                "x": 1268.107416043942,
                "y": 476.262245496152
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "2272733d-6725-3963-1dd6-facdcd4fb7da",
                "parentGroupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "position": {
                    "x": 1268.107416043942,
                    "y": 476.262245496152
                },
                "name": "Detect DB Avro Ingest",
                "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "table-avro",
                        "description": "",
                        "autoTerminate": false
                    },
                    {
                        "name": "unmatched",
                        "description": "FlowFiles that do not match any user-define expression will be routed here",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Routing Strategy": "Route to Property name",
                        "table-avro": "${db.table.output.format:equals('AVRO')}"
                    },
                    "descriptors": {
                        "Routing Strategy": {
                            "name": "Routing Strategy",
                            "displayName": "Routing Strategy",
                            "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                            "defaultValue": "Route to Property name",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to Property name",
                                        "value": "Route to Property name",
                                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if all match",
                                        "value": "Route to 'match' if all match",
                                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if any matches",
                                        "value": "Route to 'match' if any matches",
                                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "table-avro": {
                            "name": "table-avro",
                            "displayName": "table-avro",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "id": "2272733d-6725-3963-1dd6-facdcd4fb7da",
                "name": "Detect DB Avro Ingest",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "2272733d-6725-3963-1dd6-facdcd4fb7da",
                    "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                    "name": "Detect DB Avro Ingest",
                    "type": "RouteOnAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "d1c44439-8e52-3cf3-20fc-d0a1a1d1615d",
            "uri": "https://localhost:8179/nifi-api/processors/d1c44439-8e52-3cf3-20fc-d0a1a1d1615d",
            "position": {
                "x": 1525.13549992775,
                "y": 1600.9349921262647
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "d1c44439-8e52-3cf3-20fc-d0a1a1d1615d",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 1525.13549992775,
                    "y": 1600.9349921262647
                },
                "name": "Create Feed Partition",
                "type": "com.thinkbiganalytics.nifi.v2.thrift.ExecuteHQLStatement",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#2cfa08"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Successfully relationship.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Database Connection Pooling Service": "51f09b62-b321-39b3-e7fb-cb527eba7521",
                        "Statement": "alter table `${category}`.`${feed}_feed` add\n    if not exists partition (processing_dttm=${feedts})\n    location '${hdfs.ingest.root}/${category}/${feed}/${feedts}/'"
                    },
                    "descriptors": {
                        "Database Connection Pooling Service": {
                            "name": "Database Connection Pooling Service",
                            "displayName": "Database Connection Pooling Service",
                            "description": "The Controller Service that is used to obtain connection to database",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "51f09b62-b321-39b3-e7fb-cb527eba7521"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "adc2fd36-0163-1000-c94e-9156591e27ee"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.thrift.ThriftService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "Statement": {
                            "name": "Statement",
                            "displayName": "Statement",
                            "description": "Provide the DDL or DML statement. Return values will be ignored.",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 10,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "d1c44439-8e52-3cf3-20fc-d0a1a1d1615d",
                "name": "Create Feed Partition",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "d1c44439-8e52-3cf3-20fc-d0a1a1d1615d",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Create Feed Partition",
                    "type": "ExecuteHQLStatement",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "9c5c342b-e405-3420-bd32-15adbcb41842",
            "uri": "https://localhost:8179/nifi-api/processors/9c5c342b-e405-3420-bd32-15adbcb41842",
            "position": {
                "x": 16.205852895502176,
                "y": 755.3197421390705
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "9c5c342b-e405-3420-bd32-15adbcb41842",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 16.205852895502176,
                    "y": 755.3197421390705
                },
                "name": "S3",
                "type": "org.apache.nifi.processors.aws.s3.ListS3",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-aws-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "FlowFiles are routed to success relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": false,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Bucket": null,
                        "Region": "us-west-2",
                        "Access Key": null,
                        "Secret Key": null,
                        "Credentials File": null,
                        "AWS Credentials Provider service": "491de246-9d82-3933-1bd1-2e4cc346aabd",
                        "Communications Timeout": "30 secs",
                        "SSL Context Service": null,
                        "Endpoint Override URL": null,
                        "Signer Override": "Default Signature",
                        "Proxy Host": null,
                        "Proxy Host Port": null,
                        "delimiter": null,
                        "prefix": null,
                        "use-versions": "false",
                        "list-type": "1",
                        "min-age": "0 sec"
                    },
                    "descriptors": {
                        "Bucket": {
                            "name": "Bucket",
                            "displayName": "Bucket",
                            "description": "",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Region": {
                            "name": "Region",
                            "displayName": "Region",
                            "description": "",
                            "defaultValue": "us-west-2",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "us-gov-west-1",
                                        "value": "us-gov-west-1",
                                        "description": "us-gov-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-1",
                                        "value": "us-east-1",
                                        "description": "us-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-east-2",
                                        "value": "us-east-2",
                                        "description": "us-east-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-1",
                                        "value": "us-west-1",
                                        "description": "us-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "us-west-2",
                                        "value": "us-west-2",
                                        "description": "us-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-1",
                                        "value": "eu-west-1",
                                        "description": "eu-west-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-west-2",
                                        "value": "eu-west-2",
                                        "description": "eu-west-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "eu-central-1",
                                        "value": "eu-central-1",
                                        "description": "eu-central-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-south-1",
                                        "value": "ap-south-1",
                                        "description": "ap-south-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-1",
                                        "value": "ap-southeast-1",
                                        "description": "ap-southeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-southeast-2",
                                        "value": "ap-southeast-2",
                                        "description": "ap-southeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-1",
                                        "value": "ap-northeast-1",
                                        "description": "ap-northeast-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ap-northeast-2",
                                        "value": "ap-northeast-2",
                                        "description": "ap-northeast-2"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "sa-east-1",
                                        "value": "sa-east-1",
                                        "description": "sa-east-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "cn-north-1",
                                        "value": "cn-north-1",
                                        "description": "cn-north-1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ca-central-1",
                                        "value": "ca-central-1",
                                        "description": "ca-central-1"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Access Key": {
                            "name": "Access Key",
                            "displayName": "Access Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Secret Key": {
                            "name": "Secret Key",
                            "displayName": "Secret Key",
                            "description": "",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Credentials File": {
                            "name": "Credentials File",
                            "displayName": "Credentials File",
                            "description": "Path to a file containing AWS access key and secret key in properties file format.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "AWS Credentials Provider service": {
                            "name": "AWS Credentials Provider service",
                            "displayName": "AWS Credentials Provider service",
                            "description": "The Controller Service that is used to obtain aws credentials provider",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "adc46394-0163-1000-4fc1-afbc4db6d274"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AWSCredentialsProviderControllerService",
                                        "value": "b63b608a-40fb-3499-0efd-60054f62dade"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-aws-service-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Communications Timeout": {
                            "name": "Communications Timeout",
                            "displayName": "Communications Timeout",
                            "description": "",
                            "defaultValue": "30 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Endpoint Override URL": {
                            "name": "Endpoint Override URL",
                            "displayName": "Endpoint Override URL",
                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Signer Override": {
                            "name": "Signer Override",
                            "displayName": "Signer Override",
                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                            "defaultValue": "Default Signature",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Default Signature",
                                        "value": "Default Signature"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v4",
                                        "value": "AWSS3V4SignerType"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Signature v2",
                                        "value": "S3SignerType"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "Proxy host name or IP",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Proxy Host Port": {
                            "name": "Proxy Host Port",
                            "displayName": "Proxy Host Port",
                            "description": "Proxy host port",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "delimiter": {
                            "name": "delimiter",
                            "displayName": "Delimiter",
                            "description": "The string used to delimit directories within the bucket. Please consult the AWS documentation for the correct use of this field.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "prefix": {
                            "name": "prefix",
                            "displayName": "Prefix",
                            "description": "The prefix used to filter the object list. In most cases, it should end with a forward slash ('/').",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "use-versions": {
                            "name": "use-versions",
                            "displayName": "Use Versions",
                            "description": "Specifies whether to use S3 versions, if applicable.  If false, only the latest version of each object will be returned.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "list-type": {
                            "name": "list-type",
                            "displayName": "List Type",
                            "description": "Specifies whether to use the original List Objects or the newer List Objects Version 2 endpoint.",
                            "defaultValue": "1",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "List Objects V1",
                                        "value": "1"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "List Objects V2",
                                        "value": "2"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "min-age": {
                            "name": "min-age",
                            "displayName": "Minimum Object Age",
                            "description": "The minimum age that an S3 object must be in order to be considered; any object younger than this amount of time (according to last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "9c5c342b-e405-3420-bd32-15adbcb41842",
                "name": "S3",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "9c5c342b-e405-3420-bd32-15adbcb41842",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "S3",
                    "type": "ListS3",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 3
            },
            "id": "d04defbc-04c6-3ad1-9bf6-d457793e25e7",
            "uri": "https://localhost:8179/nifi-api/processors/d04defbc-04c6-3ad1-9bf6-d457793e25e7",
            "position": {
                "x": 64.50888623599167,
                "y": 939.8286793618263
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "d04defbc-04c6-3ad1-9bf6-d457793e25e7",
                "parentGroupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "position": {
                    "x": 64.50888623599167,
                    "y": 939.8286793618263
                },
                "name": "TriggerCleanup",
                "type": "com.thinkbiganalytics.nifi.v2.metadata.TriggerCleanup",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "DISABLED",
                "style": {
                    "background-color": "#ff9900"
                },
                "relationships": [
                    {
                        "name": "Success",
                        "description": "Relationship followed on successful precondition event.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Feed Cleanup Event Service": "adc464ec-0163-1000-c5ab-a6429af8c498",
                        "Metadata Provider Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "website",
                        "System feed name": "testing_multi_b"
                    },
                    "descriptors": {
                        "Feed Cleanup Event Service": {
                            "name": "Feed Cleanup Event Service",
                            "displayName": "Feed Cleanup Event Service",
                            "description": "Service that manages the cleanup of feeds.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Cleanup Service",
                                        "value": "adc464ec-0163-1000-c5ab-a6429af8c498"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Cleanup Service",
                                        "value": "d791170d-8275-3f04-815c-05d79c0dc931"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.cleanup.CleanupEventService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "Metadata Provider Service": {
                            "name": "Metadata Provider Service",
                            "displayName": "Metadata Provider Service",
                            "description": "Service supplying the implementations of the various metadata providers.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "The category name of this feed. The default is to have this name automatically set when the feed is created. Normally you do not need to change the default value.",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "The system name of this feed. The default is to have this name automatically set when the feed is created. Normally you do not need to change the default value.",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "id": "d04defbc-04c6-3ad1-9bf6-d457793e25e7",
                "name": "TriggerCleanup",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "d04defbc-04c6-3ad1-9bf6-d457793e25e7",
                    "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                    "name": "TriggerCleanup",
                    "type": "TriggerCleanup",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "523f321d-09b8-34f9-45e3-c9168986cca6",
            "uri": "https://localhost:8179/nifi-api/processors/523f321d-09b8-34f9-45e3-c9168986cca6",
            "position": {
                "x": 2119.7820911378767,
                "y": 2623.0575376903207
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "523f321d-09b8-34f9-45e3-c9168986cca6",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 2119.7820911378767,
                    "y": 2623.0575376903207
                },
                "name": "Route If Data To Be Indexed",
                "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "indexColumns",
                        "description": "",
                        "autoTerminate": false
                    },
                    {
                        "name": "unmatched",
                        "description": "FlowFiles that do not match any user-define expression will be routed here",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Routing Strategy": "Route to Property name",
                        "indexColumns": "${metadata.table.fieldIndexString:isEmpty():not()}"
                    },
                    "descriptors": {
                        "Routing Strategy": {
                            "name": "Routing Strategy",
                            "displayName": "Routing Strategy",
                            "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                            "defaultValue": "Route to Property name",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to Property name",
                                        "value": "Route to Property name",
                                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if all match",
                                        "value": "Route to 'match' if all match",
                                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if any matches",
                                        "value": "Route to 'match' if any matches",
                                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "indexColumns": {
                            "name": "indexColumns",
                            "displayName": "indexColumns",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "523f321d-09b8-34f9-45e3-c9168986cca6",
                "name": "Route If Data To Be Indexed",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "523f321d-09b8-34f9-45e3-c9168986cca6",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Route If Data To Be Indexed",
                    "type": "RouteOnAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "160268d8-a252-3307-f119-884d3a927d86",
            "uri": "https://localhost:8179/nifi-api/processors/160268d8-a252-3307-f119-884d3a927d86",
            "position": {
                "x": 618.0929985562943,
                "y": 1402.8872239651173
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "160268d8-a252-3307-f119-884d3a927d86",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 618.0929985562943,
                    "y": 1402.8872239651173
                },
                "name": "Merge Table",
                "type": "com.thinkbiganalytics.nifi.v2.ingest.MergeTable",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#2bff05"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Successfully relationship.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Database Connection Pooling Service": "51f09b62-b321-39b3-e7fb-cb527eba7521",
                        "Merge Strategy": "${metadata.table.targetMergeStrategy}",
                        "Source schema": "${category}",
                        "Source table": "${feed}_valid",
                        "Target schema": "${category}",
                        "Target table": "${feed}",
                        "Feed partition value": "${feedts}",
                        "Partition Specification": "${metadata.table.partitionSpecs}",
                        "Field specification": "${metadata.table.fieldStructure}",
                        "Hive Configurations": null,
                        "Reset hive on connection": "true",
                        "blocking-id": null,
                        "Hive Connection Pooling Service": null
                    },
                    "descriptors": {
                        "Database Connection Pooling Service": {
                            "name": "Database Connection Pooling Service",
                            "displayName": "Database Connection Pooling Service",
                            "description": "The Controller Service that is used to obtain connection to database",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "51f09b62-b321-39b3-e7fb-cb527eba7521"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "adc2fd36-0163-1000-c94e-9156591e27ee"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.thrift.ThriftService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "Merge Strategy": {
                            "name": "Merge Strategy",
                            "displayName": "Merge Strategy",
                            "description": "Specifies the algorithm used to merge. Valid values are SYNC,MERGE, PK_MERGE, DEDUPE_AND_MERGE, and ROLLING_SYNC.  Sync will completely overwrite the target table with the source data. Rolling Sync will overwrite target partitions only when present in source. Merge will append the data into the target partitions. Dedupe will insert into the target partition but ensure no duplicate rows are remaining. PK Merge will insert or update existing rows matching the same primary key.",
                            "defaultValue": "${metadata.table.targetMergeStrategy}",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "MERGE",
                                        "value": "MERGE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DEDUPE_AND_MERGE",
                                        "value": "DEDUPE_AND_MERGE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "PK_MERGE",
                                        "value": "PK_MERGE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SYNC",
                                        "value": "SYNC"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ROLLING_SYNC",
                                        "value": "ROLLING_SYNC"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "${metadata.table.targetMergeStrategy}",
                                        "value": "${metadata.table.targetMergeStrategy}"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source schema": {
                            "name": "Source schema",
                            "displayName": "Source schema",
                            "description": "Name of the schema or database for the source table",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Source table": {
                            "name": "Source table",
                            "displayName": "Source table",
                            "description": "Name of the source table",
                            "defaultValue": "${metadata.systemFeedName}_valid",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Target schema": {
                            "name": "Target schema",
                            "displayName": "Target schema",
                            "description": "Name of the schema or database for the target table",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Target table": {
                            "name": "Target table",
                            "displayName": "Target table",
                            "description": "Name of the target table",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Feed partition value": {
                            "name": "Feed partition value",
                            "displayName": "Feed partition value",
                            "description": "Feed timestamp that identifies the current feed partition",
                            "defaultValue": "${feedts}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Partition Specification": {
                            "name": "Partition Specification",
                            "displayName": "Partition Specification",
                            "description": "Partition specification in format: field|type|formula\nfield|type|formula",
                            "defaultValue": "${metadata.table.partitionSpecs}",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Field specification": {
                            "name": "Field specification",
                            "displayName": "Field specification",
                            "description": "Pipe-delim and newline for each field: column name|data type|comment|primary_key?|created_dt?|modified_dt?",
                            "defaultValue": "${metadata.table.fieldStructure}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Hive Configurations": {
                            "name": "Hive Configurations",
                            "displayName": "Hive Configurations",
                            "description": "Pipe separated list of Hive Configurations that you would like to set for Hive queries ",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Reset hive on connection": {
                            "name": "Reset hive on connection",
                            "displayName": "Reset hive on connection",
                            "description": "Upon getting a new connection it will call Hive 'reset' to reset hive settings back to the default.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "blocking-id": {
                            "name": "blocking-id",
                            "displayName": "Blocking Id",
                            "description": "A value, or the results of an Attribute Expression Language statement, which will be evaluated against a FlowFile in order to determine the blocking key.  If more than 1 flowfile enter this processor with the same blocking key the flowfile will be penalized and routed to the 'blocked' relationship where it can retry if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Hive Connection Pooling Service": {
                            "name": "Hive Connection Pooling Service",
                            "displayName": "Hive Connection Pooling Service",
                            "description": "If specified this connection pool will be used in place of the Thrift Service",
                            "allowableValues": [],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.dbcp.hive.HiveDBCPService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-hive-services-api-nar",
                                "version": "1.6.0"
                            }
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "160268d8-a252-3307-f119-884d3a927d86",
                "name": "Merge Table",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "160268d8-a252-3307-f119-884d3a927d86",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Merge Table",
                    "type": "MergeTable",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "0ab29be3-9a70-3b30-dc79-06cd8e8ad614",
            "uri": "https://localhost:8179/nifi-api/processors/0ab29be3-9a70-3b30-dc79-06cd8e8ad614",
            "position": {
                "x": 3033.3671446285375,
                "y": 1059.960059325661
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "0ab29be3-9a70-3b30-dc79-06cd8e8ad614",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 3033.3671446285375,
                    "y": 1059.960059325661
                },
                "name": "Initialization Failure",
                "type": "com.thinkbiganalytics.nifi.v2.init.CompleteInitializeFeed",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#fa0303"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "${category}",
                        "System feed name": "${feed}",
                        "Initialization Result": "FAILURE"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Initialization Result": {
                            "name": "Initialization Result",
                            "displayName": "Initialization Result",
                            "description": "Indicates how this processor should behave when a flow file arrives after feed initialization has failed.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Successful",
                                        "value": "SUCCESSFUL",
                                        "description": "The mode indicating feed initialization was successful."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Failure",
                                        "value": "FAILURE",
                                        "description": "The mode indicating feed initialization failed."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "0ab29be3-9a70-3b30-dc79-06cd8e8ad614",
                "name": "Initialization Failure",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "0ab29be3-9a70-3b30-dc79-06cd8e8ad614",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Initialization Failure",
                    "type": "CompleteInitializeFeed",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "3d870e61-3cf2-31c0-15f8-f89ed29358e4",
            "uri": "https://localhost:8179/nifi-api/processors/3d870e61-3cf2-31c0-15f8-f89ed29358e4",
            "position": {
                "x": 1526.9129848480225,
                "y": 1832.7642664549485
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "3d870e61-3cf2-31c0-15f8-f89ed29358e4",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 1526.9129848480225,
                    "y": 1832.7642664549485
                },
                "name": "Fetch field policies",
                "type": "org.apache.nifi.processors.script.ExecuteScript",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-scripting-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles that failed to be processed",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "FlowFiles that were successfully processed",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Script Engine": "Groovy",
                        "Script File": null,
                        "Script Body": "def flowFile = session.get()\n    if(!flowFile) return\n    def json = flowFile.getAttribute(\"metadata.table.fieldPoliciesJson\");\n    def inputFolder = flowFile.getAttribute(\"spark.input_folder\")\n    def feed = flowFile.getAttribute(\"feed\")\n    def category = flowFile.getAttribute(\"category\")\n    def feedts = flowFile.getAttribute(\"feedts\")\n    def folder = new File(inputFolder + \"/\"+category+\"/\"+feed+\"/\"+feedts)\n    // If it doesn't exist\n    if( !folder.exists() ) {\n    // Create all folders\n    folder.mkdirs()\n    }\n    def jsonFile = new File(folder,feed+\"_field_policy.json\")\n    jsonFile.write(json)\n    flowFile = session.putAttribute(flowFile,\"table_field_policy_json_file\",jsonFile.getCanonicalPath())\n    session.transfer(flowFile, REL_SUCCESS)\n",
                        "Module Directory": null
                    },
                    "descriptors": {
                        "Script Engine": {
                            "name": "Script Engine",
                            "displayName": "Script Engine",
                            "description": "The engine to execute scripts",
                            "defaultValue": "Clojure",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Clojure",
                                        "value": "Clojure"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ECMAScript",
                                        "value": "ECMAScript"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Groovy",
                                        "value": "Groovy"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "lua",
                                        "value": "lua"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "python",
                                        "value": "python"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ruby",
                                        "value": "ruby"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Script File": {
                            "name": "Script File",
                            "displayName": "Script File",
                            "description": "Path to script file to execute. Only one of Script File or Script Body may be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Script Body": {
                            "name": "Script Body",
                            "displayName": "Script Body",
                            "description": "Body of script to execute. Only one of Script File or Script Body may be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Module Directory": {
                            "name": "Module Directory",
                            "displayName": "Module Directory",
                            "description": "Comma-separated list of paths to files and/or directories which contain modules required by the script.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "3d870e61-3cf2-31c0-15f8-f89ed29358e4",
                "name": "Fetch field policies",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "3d870e61-3cf2-31c0-15f8-f89ed29358e4",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Fetch field policies",
                    "type": "ExecuteScript",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "866f1422-7578-3d1b-7401-7ca5d0120004",
            "uri": "https://localhost:8179/nifi-api/processors/866f1422-7578-3d1b-7401-7ca5d0120004",
            "position": {
                "x": 1127.9087415437643,
                "y": 471.12646810005026
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "866f1422-7578-3d1b-7401-7ca5d0120004",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 1127.9087415437643,
                    "y": 471.12646810005026
                },
                "name": "Initialize Feed Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Do not store state",
                        "Stateful Variables Initial Value": "",
                        "archiveId": "${now():format('yyyyMMddHHmmss')}_${UUID()}",
                        "category": "${metadata.category.systemName}",
                        "feed": "${metadata.systemFeedName}",
                        "hdfs.archive.root": "/archive",
                        "hdfs.ingest.root": "/etl",
                        "hive.ingest.root": "/model.db",
                        "hive.master.root": "/app/warehouse",
                        "hive.profile.root": "/model.db",
                        "kylo.tmp.baseFolder": "/tmp/kylo-nifi",
                        "metadata.table.feedFieldStructure": "${metadata.table.feedFieldStructure}",
                        "metadata.table.feedFormat": "${metadata.table.feedFormat}",
                        "metadata.table.feedTblProperties": "${metadata.table.feedTblProperties}",
                        "metadata.table.fieldIndexString": "${metadata.table.fieldIndexString}",
                        "metadata.table.fieldPoliciesJson": "${metadata.table.fieldPoliciesJson}",
                        "metadata.table.fieldStructure": "${metadata.table.fieldStructure}",
                        "metadata.table.partitionSpecs": "${metadata.table.partitionSpecs}",
                        "metadata.table.partitionStructure": "${metadata.table.partitionStructure}",
                        "metadata.table.targetFormat": "${metadata.table.targetFormat}",
                        "metadata.table.targetMergeStrategy": "${metadata.table.targetMergeStrategy}",
                        "metadata.table.targetTblProperties": "${metadata.table.targetTblProperties}",
                        "nifi.home": "/opt/nifi",
                        "nifi.kylo.applicationJarDirectory": "/opt/nifi/current/lib/app",
                        "savepoint.id": "${UUID()}",
                        "skipHeader": "${metadata.options.skipHeader}",
                        "spark.input_folder": "/tmp/kylo-nifi/spark"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "archiveId": {
                            "name": "archiveId",
                            "displayName": "archiveId",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "category": {
                            "name": "category",
                            "displayName": "category",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "feed": {
                            "name": "feed",
                            "displayName": "feed",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.archive.root": {
                            "name": "hdfs.archive.root",
                            "displayName": "hdfs.archive.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "kylo.tmp.baseFolder": {
                            "name": "kylo.tmp.baseFolder",
                            "displayName": "kylo.tmp.baseFolder",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedFieldStructure": {
                            "name": "metadata.table.feedFieldStructure",
                            "displayName": "metadata.table.feedFieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedFormat": {
                            "name": "metadata.table.feedFormat",
                            "displayName": "metadata.table.feedFormat",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedTblProperties": {
                            "name": "metadata.table.feedTblProperties",
                            "displayName": "metadata.table.feedTblProperties",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldIndexString": {
                            "name": "metadata.table.fieldIndexString",
                            "displayName": "metadata.table.fieldIndexString",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldPoliciesJson": {
                            "name": "metadata.table.fieldPoliciesJson",
                            "displayName": "metadata.table.fieldPoliciesJson",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldStructure": {
                            "name": "metadata.table.fieldStructure",
                            "displayName": "metadata.table.fieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.partitionSpecs": {
                            "name": "metadata.table.partitionSpecs",
                            "displayName": "metadata.table.partitionSpecs",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.partitionStructure": {
                            "name": "metadata.table.partitionStructure",
                            "displayName": "metadata.table.partitionStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetFormat": {
                            "name": "metadata.table.targetFormat",
                            "displayName": "metadata.table.targetFormat",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetMergeStrategy": {
                            "name": "metadata.table.targetMergeStrategy",
                            "displayName": "metadata.table.targetMergeStrategy",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetTblProperties": {
                            "name": "metadata.table.targetTblProperties",
                            "displayName": "metadata.table.targetTblProperties",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.home": {
                            "name": "nifi.home",
                            "displayName": "nifi.home",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.kylo.applicationJarDirectory": {
                            "name": "nifi.kylo.applicationJarDirectory",
                            "displayName": "nifi.kylo.applicationJarDirectory",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "savepoint.id": {
                            "name": "savepoint.id",
                            "displayName": "savepoint.id",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "skipHeader": {
                            "name": "skipHeader",
                            "displayName": "skipHeader",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "spark.input_folder": {
                            "name": "spark.input_folder",
                            "displayName": "spark.input_folder",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "866f1422-7578-3d1b-7401-7ca5d0120004",
                "name": "Initialize Feed Parameters",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "866f1422-7578-3d1b-7401-7ca5d0120004",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "Initialize Feed Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "854f1a65-e71f-3e10-4810-00e7a00f54c3",
            "uri": "https://localhost:8179/nifi-api/processors/854f1a65-e71f-3e10-4810-00e7a00f54c3",
            "position": {
                "x": 713.343695119217,
                "y": 2624.896825159615
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "854f1a65-e71f-3e10-4810-00e7a00f54c3",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 713.343695119217,
                    "y": 2624.896825159615
                },
                "name": "Release Savepoint",
                "type": "com.thinkbiganalytics.nifi.v2.savepoint.TriggerSavepoint",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles will be routed to this relationship if the route_to_failure property is true or an error occurs",
                        "autoTerminate": false
                    },
                    {
                        "name": "max retries",
                        "description": "FlowFiles that exceeded maximum retries are routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "A successful operation will result in FlowFile on this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "savepoint-service": "520f2529-14b8-37bb-57d5-8f2da65b5e93",
                        "savepoint-id": "${savepoint.id}",
                        "behavior": "RELEASE",
                        "max-retries": "10"
                    },
                    "descriptors": {
                        "savepoint-service": {
                            "name": "savepoint-service",
                            "displayName": "Savepoint service",
                            "description": "The Controller Service used to manage retry and release signals for savepoints.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "adc39cd8-0163-1000-9c83-676226a01aa6"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.core.savepoint.SavepointController",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "savepoint-id": {
                            "name": "savepoint-id",
                            "displayName": "Savepoint Id",
                            "description": "A value, or the results of an Attribute Expression Language statement, which will be evaluated against a FlowFile in order to determine the savepoint key",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "behavior": {
                            "name": "behavior",
                            "displayName": "Behavior",
                            "description": "The behavior to apply to the setpoint",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "RETRY",
                                        "value": "RETRY"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "RELEASE",
                                        "value": "RELEASE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "FAIL",
                                        "value": "FAIL"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "max-retries": {
                            "name": "max-retries",
                            "displayName": "Max Retries",
                            "description": "Maximum number of retries before flowfile is routed to failure.",
                            "defaultValue": "10",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 2000,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "854f1a65-e71f-3e10-4810-00e7a00f54c3",
                "name": "Release Savepoint",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "854f1a65-e71f-3e10-4810-00e7a00f54c3",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Release Savepoint",
                    "type": "TriggerSavepoint",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "e5a99c92-f591-32b8-8419-b93e4327e147",
            "uri": "https://localhost:8179/nifi-api/processors/e5a99c92-f591-32b8-8419-b93e4327e147",
            "position": {
                "x": 1206.4221691768507,
                "y": 1358.5903981118263
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "e5a99c92-f591-32b8-8419-b93e4327e147",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 1206.4221691768507,
                    "y": 1358.5903981118263
                },
                "name": "TriggerCleanup",
                "type": "com.thinkbiganalytics.nifi.v2.metadata.TriggerCleanup",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "DISABLED",
                "style": {
                    "background-color": "#ff9900"
                },
                "relationships": [
                    {
                        "name": "Success",
                        "description": "Relationship followed on successful precondition event.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Feed Cleanup Event Service": "d791170d-8275-3f04-815c-05d79c0dc931",
                        "Metadata Provider Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "concerts",
                        "System feed name": "venues"
                    },
                    "descriptors": {
                        "Feed Cleanup Event Service": {
                            "name": "Feed Cleanup Event Service",
                            "displayName": "Feed Cleanup Event Service",
                            "description": "Service that manages the cleanup of feeds.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Cleanup Service",
                                        "value": "adc464ec-0163-1000-c5ab-a6429af8c498"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Cleanup Service",
                                        "value": "d791170d-8275-3f04-815c-05d79c0dc931"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.cleanup.CleanupEventService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "Metadata Provider Service": {
                            "name": "Metadata Provider Service",
                            "displayName": "Metadata Provider Service",
                            "description": "Service supplying the implementations of the various metadata providers.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "The category name of this feed. The default is to have this name automatically set when the feed is created. Normally you do not need to change the default value.",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "The system name of this feed. The default is to have this name automatically set when the feed is created. Normally you do not need to change the default value.",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "e5a99c92-f591-32b8-8419-b93e4327e147",
                "name": "TriggerCleanup",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "e5a99c92-f591-32b8-8419-b93e4327e147",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "TriggerCleanup",
                    "type": "TriggerCleanup",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "d1ec3d67-06f2-3221-bd3d-317d79bbe363",
            "uri": "https://localhost:8179/nifi-api/processors/d1ec3d67-06f2-3221-bd3d-317d79bbe363",
            "position": {
                "x": 475.60957200335906,
                "y": 241.04846845100292
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "d1ec3d67-06f2-3221-bd3d-317d79bbe363",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 475.60957200335906,
                    "y": 241.04846845100292
                },
                "name": "Database",
                "type": "com.thinkbiganalytics.nifi.v2.core.watermark.LoadHighWaterMark",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "activeFailure",
                        "description": "The water mark is actively being processed and has not yet been committed or rejected",
                        "autoTerminate": true
                    },
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "25294dfc-33f5-34ff-0000-000000000000",
                        "System feed category": "concerts",
                        "System feed name": "events",
                        "High-Water Mark": "highWaterMark",
                        "High-Water Mark Value Property Name": "water.mark",
                        "Active Water Mark Strategy": "YIELD",
                        "Max Yield Count Strategy": "CANCEL_PREVIOUS",
                        "Max Yield Count": "50",
                        "Initial Value": "1970-01-01T00:00:00"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark": {
                            "name": "High-Water Mark",
                            "displayName": "High-Water Mark",
                            "description": "The name to be given to this high-water mark, stored in the feed's metadata, which records the latest committed water mark value",
                            "defaultValue": "highWaterMark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "High-Water Mark Value Property Name": {
                            "name": "High-Water Mark Value Property Name",
                            "displayName": "High-Water Mark Value Property Name",
                            "description": "Name of the flow file property which is set to the current high-water mark value for use in subsequent processing and commit",
                            "defaultValue": "water.mark",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Active Water Mark Strategy": {
                            "name": "Active Water Mark Strategy",
                            "displayName": "Active Water Mark Strategy",
                            "description": "Specifies what strategy should be followed when an attempt to obtain the latest high-water mark fails because another flow file is already actively using it",
                            "defaultValue": "YIELD",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Yield",
                                        "value": "YIELD",
                                        "description": "Yield the processor so that another attempt to obtain the high-water mark can be made later."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Penalize",
                                        "value": "PENALIZE",
                                        "description": "Penalize the flow file and return it to the queue that it came from so that another attempt to obtain the high-water mark can be made later.  Behaves the same as \"Yield\" if this processor is the first one in the flow."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route",
                                        "value": "ROUTE",
                                        "description": "Route immediately to the \"activeFailure\" relationship."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Yield Count Strategy": {
                            "name": "Max Yield Count Strategy",
                            "displayName": "Max Yield Count Strategy",
                            "description": "Specifies what strategy should be followed when the maximum yield count (if used) is reached",
                            "defaultValue": "CANCEL_PREVIOUS",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to activeFailure",
                                        "value": "ROUTE_ACTIVE",
                                        "description": "Routes the flow file to the \"activeFailure\" relationship"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Cancel previous",
                                        "value": "CANCEL_PREVIOUS",
                                        "description": "Cancels the actived water mark of any previous flow file, reactivates the water mark for the next flow file, and routes it to the \"success\" relationship.  Any in-flight flow file with pending commits will be ignored in favor of the newly routed flow file "
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Yield Count": {
                            "name": "Max Yield Count",
                            "displayName": "Max Yield Count",
                            "description": "The maximum number of yields/penalizations, if the yield strategy is selected, that should be attempted before failures to obtain a high-water mark are handled according to the \"Max Yield Count Strategy\" setting (handling never occurs if unset or less than zero)",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Initial Value": {
                            "name": "Initial Value",
                            "displayName": "Initial Value",
                            "description": "The initial value for the water mark if none currently exists for the feed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "d1ec3d67-06f2-3221-bd3d-317d79bbe363",
                "name": "Database",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "d1ec3d67-06f2-3221-bd3d-317d79bbe363",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "Database",
                    "type": "LoadHighWaterMark",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "38079d8d-f146-33d9-0df5-a044039c7ce8",
            "uri": "https://localhost:8179/nifi-api/processors/38079d8d-f146-33d9-0df5-a044039c7ce8",
            "position": {
                "x": 1167.7415409693585,
                "y": 2892.5582771219006
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "38079d8d-f146-33d9-0df5-a044039c7ce8",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 1167.7415409693585,
                    "y": 2892.5582771219006
                },
                "name": "Drop Feed Tables",
                "type": "com.thinkbiganalytics.nifi.v2.ingest.DropFeedTables",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#ff9900"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Successfully relationship.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Database Connection Pooling Service": "51f09b62-b321-39b3-e7fb-cb527eba7521",
                        "System feed category": "${category}",
                        "System feed name": "${feed}",
                        "Table Type": "ALL",
                        "Additional Tables": null
                    },
                    "descriptors": {
                        "Database Connection Pooling Service": {
                            "name": "Database Connection Pooling Service",
                            "displayName": "Database Connection Pooling Service",
                            "description": "The Controller Service that is used to obtain connection to database",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "51f09b62-b321-39b3-e7fb-cb527eba7521"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "adc2fd36-0163-1000-c94e-9156591e27ee"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.thrift.ThriftService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Table Type": {
                            "name": "Table Type",
                            "displayName": "Table Type",
                            "description": "Specifies the standard table type to drop or ALL for standard set.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "ALL",
                                        "value": "ALL"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "MASTER",
                                        "value": "MASTER"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "PROFILE",
                                        "value": "PROFILE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "VALID",
                                        "value": "VALID"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "INVALID",
                                        "value": "INVALID"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "FEED",
                                        "value": "FEED"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Additional Tables": {
                            "name": "Additional Tables",
                            "displayName": "Additional Tables",
                            "description": "Additional tables to drop separated by comma.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "38079d8d-f146-33d9-0df5-a044039c7ce8",
                "name": "Drop Feed Tables",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "38079d8d-f146-33d9-0df5-a044039c7ce8",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Drop Feed Tables",
                    "type": "DropFeedTables",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "972e5cc7-c4dc-32f6-acf6-576fa7146862",
            "uri": "https://localhost:8179/nifi-api/processors/972e5cc7-c4dc-32f6-acf6-576fa7146862",
            "position": {
                "x": 10,
                "y": 2020.1398669553773
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "972e5cc7-c4dc-32f6-acf6-576fa7146862",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 10,
                    "y": 2020.1398669553773
                },
                "name": "Failed Flow",
                "type": "org.apache.nifi.processors.standard.PutFile",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#fa0303"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Files that could not be written to the output directory for some reason are transferred to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Files that have been successfully written to the output directory are transferred to this relationship",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Directory": "${kylo.tmp.baseFolder:replaceEmpty('/tmp/kylo-nifi')}/failed-flows/${category}/${feed}/${feedts}",
                        "Conflict Resolution Strategy": "ignore",
                        "Create Missing Directories": "true",
                        "Maximum File Count": null,
                        "Last Modified Time": null,
                        "Permissions": null,
                        "Owner": null,
                        "Group": null
                    },
                    "descriptors": {
                        "Directory": {
                            "name": "Directory",
                            "displayName": "Directory",
                            "description": "The directory to which files should be written. You may use expression language such as /aa/bb/${path}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Conflict Resolution Strategy": {
                            "name": "Conflict Resolution Strategy",
                            "displayName": "Conflict Resolution Strategy",
                            "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                            "defaultValue": "fail",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "replace",
                                        "value": "replace"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ignore",
                                        "value": "ignore"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "fail",
                                        "value": "fail"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Create Missing Directories": {
                            "name": "Create Missing Directories",
                            "displayName": "Create Missing Directories",
                            "description": "If true, then missing destination directories will be created. If false, flowfiles are penalized and sent to failure.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Count": {
                            "name": "Maximum File Count",
                            "displayName": "Maximum File Count",
                            "description": "Specifies the maximum number of files that can exist in the output directory",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Last Modified Time": {
                            "name": "Last Modified Time",
                            "displayName": "Last Modified Time",
                            "description": "Sets the lastModifiedTime on the output file to the value of this attribute.  Format must be yyyy-MM-dd'T'HH:mm:ssZ.  You may also use expression language such as ${file.lastModifiedTime}.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Permissions": {
                            "name": "Permissions",
                            "displayName": "Permissions",
                            "description": "Sets the permissions on the output file to the value of this attribute.  Format must be either UNIX rwxrwxrwx with a - in place of denied permissions (e.g. rw-r--r--) or an octal number (e.g. 644).  You may also use expression language such as ${file.permissions}.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Owner": {
                            "name": "Owner",
                            "displayName": "Owner",
                            "description": "Sets the owner on the output file to the value of this attribute.  You may also use expression language such as ${file.owner}.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Group": {
                            "name": "Group",
                            "displayName": "Group",
                            "description": "Sets the group on the output file to the value of this attribute.  You may also use expression language such as ${file.group}.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 10,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "972e5cc7-c4dc-32f6-acf6-576fa7146862",
                "name": "Failed Flow",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "972e5cc7-c4dc-32f6-acf6-576fa7146862",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Failed Flow",
                    "type": "PutFile",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a4be7746-0165-1000-4a18-11c1909e5d4e",
                "version": 4
            },
            "id": "f969fbab-dfda-37af-5d52-c7364b025339",
            "uri": "https://localhost:8179/nifi-api/processors/f969fbab-dfda-37af-5d52-c7364b025339",
            "position": {
                "x": 1511.4698561237656,
                "y": 1097.7787726805354
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "f969fbab-dfda-37af-5d52-c7364b025339",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 1511.4698561237656,
                    "y": 1097.7787726805354
                },
                "name": "Upload to HDFS",
                "type": "org.apache.nifi.processors.hadoop.PutHDFS",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-hadoop-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#2cfa08"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Hadoop Configuration Resources": "/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml",
                        "kerberos-credentials-service": "618a3674-0165-1000-3e4e-f6dfd8dff05f",
                        "Kerberos Principal": null,
                        "Kerberos Keytab": null,
                        "Kerberos Relogin Period": "4 hours",
                        "Additional Classpath Resources": null,
                        "Directory": "${hdfs.ingest.root}/${category}/${feed}/${feedts}",
                        "Conflict Resolution Strategy": "replace",
                        "Block Size": null,
                        "IO Buffer Size": null,
                        "Replication": null,
                        "Permissions umask": null,
                        "Remote Owner": null,
                        "Remote Group": null,
                        "Compression codec": "NONE"
                    },
                    "descriptors": {
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration. To use swebhdfs, see 'Additional Details' section of PutHDFS's documentation.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "kerberos-credentials-service": {
                            "name": "kerberos-credentials-service",
                            "displayName": "Kerberos Credentials Service",
                            "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "KeytabCredentialsService",
                                        "value": "618a3674-0165-1000-3e4e-f6dfd8dff05f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Kerberos Relogin Period": {
                            "name": "Kerberos Relogin Period",
                            "displayName": "Kerberos Relogin Period",
                            "description": "Period of time which should pass before attempting a kerberos relogin.\n\nThis property has been deprecated, and has no effect on processing. Relogins now occur automatically.",
                            "defaultValue": "4 hours",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Additional Classpath Resources": {
                            "name": "Additional Classpath Resources",
                            "displayName": "Additional Classpath Resources",
                            "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Directory": {
                            "name": "Directory",
                            "displayName": "Directory",
                            "description": "The parent HDFS directory to which files should be written. The directory will be created if it doesn't exist.",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Conflict Resolution Strategy": {
                            "name": "Conflict Resolution Strategy",
                            "displayName": "Conflict Resolution Strategy",
                            "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                            "defaultValue": "fail",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "replace",
                                        "value": "replace",
                                        "description": "Replaces the existing file if any."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ignore",
                                        "value": "ignore",
                                        "description": "Ignores the flow file and routes it to success."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "fail",
                                        "value": "fail",
                                        "description": "Penalizes the flow file and routes it to failure."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "append",
                                        "value": "append",
                                        "description": "Appends to the existing file if any, creates a new file otherwise."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Block Size": {
                            "name": "Block Size",
                            "displayName": "Block Size",
                            "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "IO Buffer Size": {
                            "name": "IO Buffer Size",
                            "displayName": "IO Buffer Size",
                            "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Replication": {
                            "name": "Replication",
                            "displayName": "Replication",
                            "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Permissions umask": {
                            "name": "Permissions umask",
                            "displayName": "Permissions umask",
                            "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Owner": {
                            "name": "Remote Owner",
                            "displayName": "Remote Owner",
                            "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Remote Group": {
                            "name": "Remote Group",
                            "displayName": "Remote Group",
                            "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Compression codec": {
                            "name": "Compression codec",
                            "displayName": "Compression codec",
                            "description": "",
                            "defaultValue": "NONE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "NONE",
                                        "value": "NONE",
                                        "description": "No compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DEFAULT",
                                        "value": "DEFAULT",
                                        "description": "Default ZLIB compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BZIP",
                                        "value": "BZIP",
                                        "description": "BZIP compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "GZIP",
                                        "value": "GZIP",
                                        "description": "GZIP compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "LZ4",
                                        "value": "LZ4",
                                        "description": "LZ4 compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "LZO",
                                        "value": "LZO",
                                        "description": "LZO compression - it assumes LD_LIBRARY_PATH has been set and jar is available"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SNAPPY",
                                        "value": "SNAPPY",
                                        "description": "Snappy compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AUTOMATIC",
                                        "value": "AUTOMATIC",
                                        "description": "Will attempt to automatically detect the compression codec."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 10,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "f969fbab-dfda-37af-5d52-c7364b025339",
                "name": "Upload to HDFS",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "f969fbab-dfda-37af-5d52-c7364b025339",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Upload to HDFS",
                    "type": "PutHDFS",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "338cf1bc-897e-336e-f70c-7b0b919eaf89",
            "uri": "https://localhost:8179/nifi-api/processors/338cf1bc-897e-336e-f70c-7b0b919eaf89",
            "position": {
                "x": 2697.482594406433,
                "y": 2620.556491063172
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "338cf1bc-897e-336e-f70c-7b0b919eaf89",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 2697.482594406433,
                    "y": 2620.556491063172
                },
                "name": "Set Metadata for Indexing",
                "type": "org.apache.nifi.processors.standard.AttributesToJSON",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Failed to convert attributes to JSON",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Successfully converted attributes to JSON",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Attributes List": "feed,category,feedts,metadata.table.fieldIndexString",
                        "attributes-to-json-regex": null,
                        "Destination": "flowfile-content",
                        "Include Core Attributes": "false",
                        "Null Value": "false"
                    },
                    "descriptors": {
                        "Attributes List": {
                            "name": "Attributes List",
                            "displayName": "Attributes List",
                            "description": "Comma separated list of attributes to be included in the resulting JSON. If this value is left empty then all existing Attributes will be included. This list of attributes is case sensitive. If an attribute specified in the list is not found it will be be emitted to the resulting JSON with an empty string or NULL value.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "attributes-to-json-regex": {
                            "name": "attributes-to-json-regex",
                            "displayName": "Attributes Regular Expression",
                            "description": "Regular expression that will be evaluated against the flow file attributes to select the matching attributes. This property can be used in combination with the attributes list property.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Destination": {
                            "name": "Destination",
                            "displayName": "Destination",
                            "description": "Control if JSON value is written as a new flowfile attribute 'JSONAttributes' or written in the flowfile content. Writing to flowfile content will overwrite any existing flowfile content.",
                            "defaultValue": "flowfile-attribute",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "flowfile-attribute",
                                        "value": "flowfile-attribute"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "flowfile-content",
                                        "value": "flowfile-content"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Include Core Attributes": {
                            "name": "Include Core Attributes",
                            "displayName": "Include Core Attributes",
                            "description": "Determines if the FlowFile org.apache.nifi.flowfile.attributes.CoreAttributes which are contained in every FlowFile should be included in the final JSON value generated.",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Null Value": {
                            "name": "Null Value",
                            "displayName": "Null Value",
                            "description": "If true a non existing or empty attribute will be NULL in the resulting JSON. If false an empty string will be placed in the JSON",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "338cf1bc-897e-336e-f70c-7b0b919eaf89",
                "name": "Set Metadata for Indexing",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "338cf1bc-897e-336e-f70c-7b0b919eaf89",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Set Metadata for Indexing",
                    "type": "AttributesToJSON",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "75110928-3e5a-35f7-4446-b1ae1853be5a",
            "uri": "https://localhost:8179/nifi-api/processors/75110928-3e5a-35f7-4446-b1ae1853be5a",
            "position": {
                "x": 613.6643604710152,
                "y": 10
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "75110928-3e5a-35f7-4446-b1ae1853be5a",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 613.6643604710152,
                    "y": 10
                },
                "name": "Set Feed Defaults",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#2bff05"
                },
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "feedts": "${now():toNumber()}",
                        "hdfs.ingest.root": "${hdfs.ingest.root:replaceEmpty('/etl')}",
                        "hive.ingest.root": "${hive.ingest.root:replaceEmpty('/model.db')}",
                        "hive.master.root": "${hive.master.root:replaceEmpty('/app/warehouse')}",
                        "hive.profile.root": "${hive.profile.root:replaceEmpty('/model.db')}",
                        "metadata.dataTransformation.dataTransformScript": "${metadata.dataTransformation.dataTransformScript:replaceEmpty(${transform_script})}",
                        "metadata.table.targetMergeStrategy": "${metadata.table.targetMergeStrategy:replaceEmpty('SYNC')}",
                        "nifi.home": "${nifi.home:replaceEmpty('/opt/nifi')}",
                        "nifi.kylo.applicationJarDirectory": "${nifi.kylo.applicationJarDirectory:replaceEmpty('/opt/nifi/current/lib/app')}",
                        "spark.version": "${spark.version:replaceEmpty('1')}"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "feedts": {
                            "name": "feedts",
                            "displayName": "feedts",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.dataTransformation.dataTransformScript": {
                            "name": "metadata.dataTransformation.dataTransformScript",
                            "displayName": "metadata.dataTransformation.dataTransformScript",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetMergeStrategy": {
                            "name": "metadata.table.targetMergeStrategy",
                            "displayName": "metadata.table.targetMergeStrategy",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.home": {
                            "name": "nifi.home",
                            "displayName": "nifi.home",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.kylo.applicationJarDirectory": {
                            "name": "nifi.kylo.applicationJarDirectory",
                            "displayName": "nifi.kylo.applicationJarDirectory",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "spark.version": {
                            "name": "spark.version",
                            "displayName": "spark.version",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "75110928-3e5a-35f7-4446-b1ae1853be5a",
                "name": "Set Feed Defaults",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "75110928-3e5a-35f7-4446-b1ae1853be5a",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Set Feed Defaults",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "7c28657c-c703-3322-8aef-e7aa22d4e563",
            "uri": "https://localhost:8179/nifi-api/processors/7c28657c-c703-3322-8aef-e7aa22d4e563",
            "position": {
                "x": 1528.3065744101332,
                "y": 2083.9136289276967
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "7c28657c-c703-3322-8aef-e7aa22d4e563",
                "parentGroupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "position": {
                    "x": 1528.3065744101332,
                    "y": 2083.9136289276967
                },
                "name": "Validate And Split Records",
                "type": "com.thinkbiganalytics.nifi.v2.spark.ExecuteSparkJob",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-spark-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#2cfa08"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Spark execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "success",
                        "description": "Successful result.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "ApplicationJAR": "${nifi.kylo.applicationJarDirectory}/kylo-spark-validate-cleanse-jar-with-dependencies.jar",
                        "Extra JARs": "/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar",
                        "MainClass": "com.thinkbiganalytics.spark.datavalidator.Validator",
                        "MainArgs": "${category},${feed},${feedts},${table_field_policy_json_file}",
                        "SparkMaster": "local",
                        "Spark YARN Deploy Mode": null,
                        "SparkHome": "/usr/lib/spark2",
                        "Spark Process Timeout": "1 hr",
                        "Driver Memory": "1024m",
                        "Executor Memory": "1024m",
                        "Number of Executors": "1",
                        "Spark Application Name": "Validator",
                        "Executor Cores": "1",
                        "Network Timeout": "120s",
                        "Hadoop Configuration Resources": null,
                        "Kerberos Principal": null,
                        "Kerberos Keytab": null,
                        "Yarn Queue": null,
                        "Spark Configurations": null,
                        "Extra Files": null,
                        "Data Sources": null,
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                    },
                    "descriptors": {
                        "ApplicationJAR": {
                            "name": "ApplicationJAR",
                            "displayName": "ApplicationJAR",
                            "description": "Path to the JAR file containing the Spark job application",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Extra JARs": {
                            "name": "Extra JARs",
                            "displayName": "Extra JARs",
                            "description": "A file or a list of files separated by comma which should be added to the class path",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "MainClass": {
                            "name": "MainClass",
                            "displayName": "MainClass",
                            "description": "Qualified classname of the Spark job application class",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "MainArgs": {
                            "name": "MainArgs",
                            "displayName": "MainArgs",
                            "description": "Comma separated arguments to be passed into the main as args",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SparkMaster": {
                            "name": "SparkMaster",
                            "displayName": "SparkMaster",
                            "description": "The Spark master",
                            "defaultValue": "local",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark YARN Deploy Mode": {
                            "name": "Spark YARN Deploy Mode",
                            "displayName": "Spark YARN Deploy Mode",
                            "description": "The deploy mode for YARN master (client, cluster). Only applicable for yarn mode. NOTE: Please ensure that you have not set this in your application.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SparkHome": {
                            "name": "SparkHome",
                            "displayName": "SparkHome",
                            "description": "Path to the Spark Client directory",
                            "defaultValue": "/usr/hdp/current/spark-client",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Process Timeout": {
                            "name": "Spark Process Timeout",
                            "displayName": "Spark Process Timeout",
                            "description": "Time to wait for successful completion of Spark process. Routes to failure if Spark process runs for longer than expected here",
                            "defaultValue": "1 hr",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Driver Memory": {
                            "name": "Driver Memory",
                            "displayName": "Driver Memory",
                            "description": "How much RAM to allocate to the driver",
                            "defaultValue": "512m",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Executor Memory": {
                            "name": "Executor Memory",
                            "displayName": "Executor Memory",
                            "description": "How much RAM to allocate to the executor",
                            "defaultValue": "512m",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Number of Executors": {
                            "name": "Number of Executors",
                            "displayName": "Number of Executors",
                            "description": "The number of exectors to be used",
                            "defaultValue": "1",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Application Name": {
                            "name": "Spark Application Name",
                            "displayName": "Spark Application Name",
                            "description": "The name of the spark application",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Executor Cores": {
                            "name": "Executor Cores",
                            "displayName": "Executor Cores",
                            "description": "The number of executor cores to be used",
                            "defaultValue": "1",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Network Timeout": {
                            "name": "Network Timeout",
                            "displayName": "Network Timeout",
                            "description": "Default timeout for all network interactions. This config will be used in place of spark.core.connection.ack.wait.timeout, spark.akka.timeout, spark.storage.blockManagerSlaveTimeoutMs, spark.shuffle.io.connectionTimeout, spark.rpc.askTimeout or spark.rpc.lookupTimeout if they are not configured.",
                            "defaultValue": "120s",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Yarn Queue": {
                            "name": "Yarn Queue",
                            "displayName": "Yarn Queue",
                            "description": "Optional Yarn Queue",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Spark Configurations": {
                            "name": "Spark Configurations",
                            "displayName": "Spark Configurations",
                            "description": "Pipe separated arguments to be passed into the Spark as configurations i.e <CONF1>=<VALUE1>|<CONF2>=<VALUE2>..",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Extra Files": {
                            "name": "Extra Files",
                            "displayName": "Extra Files",
                            "description": "Comma separated file paths to be passed to the Spark Executors",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Data Sources": {
                            "name": "Data Sources",
                            "displayName": "Data Sources",
                            "description": "A comma-separated list of data source ids to include in the environment for Spark.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Kylo metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 10,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                "id": "7c28657c-c703-3322-8aef-e7aa22d4e563",
                "name": "Validate And Split Records",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "7c28657c-c703-3322-8aef-e7aa22d4e563",
                    "groupId": "7f2e33d6-f76d-3f22-c655-eb485b7ba1de",
                    "name": "Validate And Split Records",
                    "type": "ExecuteSparkJob",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "8adecaa4-1b37-3b66-6f86-7216a7212eb5",
            "uri": "https://localhost:8179/nifi-api/processors/8adecaa4-1b37-3b66-6f86-7216a7212eb5",
            "position": {
                "x": 480.61680814094143,
                "y": 1210.0718685985066
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "8adecaa4-1b37-3b66-6f86-7216a7212eb5",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 480.61680814094143,
                    "y": 1210.0718685985066
                },
                "name": "FTP",
                "type": "org.apache.nifi.processors.standard.GetFTP",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All FlowFiles that are received are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Hostname": null,
                        "Port": "21",
                        "Username": null,
                        "Password": null,
                        "Connection Mode": "Passive",
                        "Transfer Mode": "Binary",
                        "Remote Path": null,
                        "File Filter Regex": null,
                        "Path Filter Regex": null,
                        "Polling Interval": "60 sec",
                        "Search Recursively": "false",
                        "Ignore Dotted Files": "true",
                        "Delete Original": "true",
                        "Connection Timeout": "30 sec",
                        "Data Timeout": "30 sec",
                        "Max Selects": "100",
                        "Remote Poll Batch Size": "5000",
                        "Use Natural Ordering": "false",
                        "Proxy Type": "DIRECT",
                        "Proxy Host": null,
                        "Proxy Port": null,
                        "Http Proxy Username": null,
                        "Http Proxy Password": null,
                        "Internal Buffer Size": "16KB",
                        "ftp-use-utf8": "false"
                    },
                    "descriptors": {
                        "Hostname": {
                            "name": "Hostname",
                            "displayName": "Hostname",
                            "description": "The fully qualified hostname or IP address of the remote system",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Port": {
                            "name": "Port",
                            "displayName": "Port",
                            "description": "The port that the remote system is listening on for file transfers",
                            "defaultValue": "21",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Username": {
                            "name": "Username",
                            "displayName": "Username",
                            "description": "Username",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "Password for the user account",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Connection Mode": {
                            "name": "Connection Mode",
                            "displayName": "Connection Mode",
                            "description": "The FTP Connection Mode",
                            "defaultValue": "Passive",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Active",
                                        "value": "Active"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Passive",
                                        "value": "Passive"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Transfer Mode": {
                            "name": "Transfer Mode",
                            "displayName": "Transfer Mode",
                            "description": "The FTP Transfer Mode",
                            "defaultValue": "Binary",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Binary",
                                        "value": "Binary"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ASCII",
                                        "value": "ASCII"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Path": {
                            "name": "Remote Path",
                            "displayName": "Remote Path",
                            "description": "The path on the remote system from which to pull or push files",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter Regex": {
                            "name": "File Filter Regex",
                            "displayName": "File Filter Regex",
                            "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter Regex": {
                            "name": "Path Filter Regex",
                            "displayName": "Path Filter Regex",
                            "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Determines how long to wait between fetching the listing for new files",
                            "defaultValue": "60 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Search Recursively": {
                            "name": "Search Recursively",
                            "displayName": "Search Recursively",
                            "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Dotted Files": {
                            "name": "Ignore Dotted Files",
                            "displayName": "Ignore Dotted Files",
                            "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Delete Original": {
                            "name": "Delete Original",
                            "displayName": "Delete Original",
                            "description": "Determines whether or not the file is deleted from the remote system after it has been successfully transferred",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Connection Timeout": {
                            "name": "Connection Timeout",
                            "displayName": "Connection Timeout",
                            "description": "Amount of time to wait before timing out while creating a connection",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Data Timeout": {
                            "name": "Data Timeout",
                            "displayName": "Data Timeout",
                            "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                            "defaultValue": "30 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Max Selects": {
                            "name": "Max Selects",
                            "displayName": "Max Selects",
                            "description": "The maximum number of files to pull in a single connection",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Remote Poll Batch Size": {
                            "name": "Remote Poll Batch Size",
                            "displayName": "Remote Poll Batch Size",
                            "description": "The value specifies how many file paths to find in a given directory on the remote system when doing a file listing. This value in general should not need to be modified but when polling against a remote system with a tremendous number of files this value can be critical.  Setting this value too high can result very poor performance and setting it too low can cause the flow to be slower than normal.",
                            "defaultValue": "5000",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Use Natural Ordering": {
                            "name": "Use Natural Ordering",
                            "displayName": "Use Natural Ordering",
                            "description": "If true, will pull files in the order in which they are naturally listed; otherwise, the order in which the files will be pulled is not defined",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Type": {
                            "name": "Proxy Type",
                            "displayName": "Proxy Type",
                            "description": "Proxy type used for file transfers",
                            "defaultValue": "DIRECT",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DIRECT",
                                        "value": "DIRECT"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "HTTP",
                                        "value": "HTTP"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SOCKS",
                                        "value": "SOCKS"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Host": {
                            "name": "Proxy Host",
                            "displayName": "Proxy Host",
                            "description": "The fully qualified hostname or IP address of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Proxy Port": {
                            "name": "Proxy Port",
                            "displayName": "Proxy Port",
                            "description": "The port of the proxy server",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Http Proxy Username": {
                            "name": "Http Proxy Username",
                            "displayName": "Http Proxy Username",
                            "description": "Http Proxy Username",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Http Proxy Password": {
                            "name": "Http Proxy Password",
                            "displayName": "Http Proxy Password",
                            "description": "Http Proxy Password",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Internal Buffer Size": {
                            "name": "Internal Buffer Size",
                            "displayName": "Internal Buffer Size",
                            "description": "Set the internal buffer size for buffered data streams",
                            "defaultValue": "16KB",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "ftp-use-utf8": {
                            "name": "ftp-use-utf8",
                            "displayName": "Use UTF-8 Encoding",
                            "description": "Tells the client to use UTF-8 encoding when processing files and filenames. If set to true, the server must also support UTF-8 encoding.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "8adecaa4-1b37-3b66-6f86-7216a7212eb5",
                "name": "FTP",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "8adecaa4-1b37-3b66-6f86-7216a7212eb5",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "FTP",
                    "type": "GetFTP",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "d0631e47-a867-3bce-a22f-1d9fca1ed6db",
            "uri": "https://localhost:8179/nifi-api/processors/d0631e47-a867-3bce-a22f-1d9fca1ed6db",
            "position": {
                "x": 2862.8857543831637,
                "y": 751.238353971758
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "d0631e47-a867-3bce-a22f-1d9fca1ed6db",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 2862.8857543831637,
                    "y": 751.238353971758
                },
                "name": "Set Document Identifier (Solr)",
                "type": "org.apache.nifi.processors.script.ExecuteScript",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-scripting-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles that failed to be processed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "FlowFiles that were successfully processed",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Script Engine": "Groovy",
                        "Script File": null,
                        "Script Body": "import org.apache.commons.io.IOUtils\nimport java.security.MessageDigest\nimport java.nio.charset.*\n\ndef flowFile = session.get();\nif (flowFile == null) {\n    return;\n}\ndef slurper = new groovy.json.JsonSlurper()\n\nflowFile = session.write(flowFile,\n        { inputStream, outputStream ->\n            def text = IOUtils.toString(inputStream, StandardCharsets.UTF_8)\n            def obj = slurper.parseText(text)\n\t    def hash = MessageDigest.getInstance(\"MD5\").digest(obj.toString().bytes).encodeHex().toString()\n\t    def category = flowFile.getAttribute('category')\n\t    def feed = flowFile.getAttribute(\"feed\")\n            def identifier = category + \"::\" + feed + \"::\" + hash\n   \t    def builder = new groovy.json.JsonBuilder()\n\t\tbuilder.call { \n      \t\t\tobj.forEach {k,v ->\n         \t\t   \t\t\"$k\" \"$v\"\n                                         \"id\" identifier\n      \t\t   \t}\n  \t\t   }\n           outputStream.write(builder.toPrettyString().getBytes(StandardCharsets.UTF_8)) \n        } as StreamCallback)\nsession.transfer(flowFile, ExecuteScript.REL_SUCCESS)",
                        "Module Directory": null
                    },
                    "descriptors": {
                        "Script Engine": {
                            "name": "Script Engine",
                            "displayName": "Script Engine",
                            "description": "The engine to execute scripts",
                            "defaultValue": "Clojure",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Clojure",
                                        "value": "Clojure"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ECMAScript",
                                        "value": "ECMAScript"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Groovy",
                                        "value": "Groovy"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "lua",
                                        "value": "lua"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "python",
                                        "value": "python"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ruby",
                                        "value": "ruby"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Script File": {
                            "name": "Script File",
                            "displayName": "Script File",
                            "description": "Path to script file to execute. Only one of Script File or Script Body may be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Script Body": {
                            "name": "Script Body",
                            "displayName": "Script Body",
                            "description": "Body of script to execute. Only one of Script File or Script Body may be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Module Directory": {
                            "name": "Module Directory",
                            "displayName": "Module Directory",
                            "description": "Comma-separated list of paths to files and/or directories which contain modules required by the script.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "d0631e47-a867-3bce-a22f-1d9fca1ed6db",
                "name": "Set Document Identifier (Solr)",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "d0631e47-a867-3bce-a22f-1d9fca1ed6db",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Set Document Identifier (Solr)",
                    "type": "ExecuteScript",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "91794028-388b-3b54-b539-c7a5843f0976",
            "uri": "https://localhost:8179/nifi-api/processors/91794028-388b-3b54-b539-c7a5843f0976",
            "position": {
                "x": 1354.8833916738472,
                "y": 864.507758972788
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "91794028-388b-3b54-b539-c7a5843f0976",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 1354.8833916738472,
                    "y": 864.507758972788
                },
                "name": "Record Initialization",
                "type": "com.thinkbiganalytics.nifi.v2.init.CompleteInitializeFeed",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#da05ff"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "${category}",
                        "System feed name": "${feed}",
                        "Initialization Result": "SUCCESSFUL"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Initialization Result": {
                            "name": "Initialization Result",
                            "displayName": "Initialization Result",
                            "description": "Indicates how this processor should behave when a flow file arrives after feed initialization has failed.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Successful",
                                        "value": "SUCCESSFUL",
                                        "description": "The mode indicating feed initialization was successful."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Failure",
                                        "value": "FAILURE",
                                        "description": "The mode indicating feed initialization failed."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "91794028-388b-3b54-b539-c7a5843f0976",
                "name": "Record Initialization",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "91794028-388b-3b54-b539-c7a5843f0976",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Record Initialization",
                    "type": "CompleteInitializeFeed",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "6736aa0a-eafb-31be-15aa-61d2d08234f7",
            "uri": "https://localhost:8179/nifi-api/processors/6736aa0a-eafb-31be-15aa-61d2d08234f7",
            "position": {
                "x": 2946.996346597596,
                "y": 471.82618889558034
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "6736aa0a-eafb-31be-15aa-61d2d08234f7",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 2946.996346597596,
                    "y": 471.82618889558034
                },
                "name": "DB Avro Ingest Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "metadata.table.feedFieldStructure": "${db.table.avro.schema}",
                        "skipHeader": "false"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "metadata.table.feedFieldStructure": {
                            "name": "metadata.table.feedFieldStructure",
                            "displayName": "metadata.table.feedFieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "skipHeader": {
                            "name": "skipHeader",
                            "displayName": "skipHeader",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "6736aa0a-eafb-31be-15aa-61d2d08234f7",
                "name": "DB Avro Ingest Parameters",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "6736aa0a-eafb-31be-15aa-61d2d08234f7",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "DB Avro Ingest Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "d4c322bd-2f10-3ebc-33f2-4f05c30df273",
            "uri": "https://localhost:8179/nifi-api/processors/d4c322bd-2f10-3ebc-33f2-4f05c30df273",
            "position": {
                "x": 1435.9878651828012,
                "y": 1027.7922666627755
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "d4c322bd-2f10-3ebc-33f2-4f05c30df273",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 1435.9878651828012,
                    "y": 1027.7922666627755
                },
                "name": "Update Elasticsearch",
                "type": "org.apache.nifi.processors.elasticsearch.PutElasticsearchHttp",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-elasticsearch-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "All FlowFiles that cannot be written to Elasticsearch are routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "retry",
                        "description": "A FlowFile is routed to this relationship if the database cannot be updated but attempting the operation again may succeed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All FlowFiles that are written to Elasticsearch are routed to this relationship",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "elasticsearch-http-url": "http://localhost:9200",
                        "SSL Context Service": null,
                        "Username": null,
                        "Password": null,
                        "elasticsearch-http-connect-timeout": "5 secs",
                        "elasticsearch-http-response-timeout": "15 secs",
                        "put-es-id-attr": "documentId",
                        "put-es-index": "${index-or-collection-name}",
                        "put-es-type": "hive-data",
                        "Character Set": "UTF-8",
                        "put-es-batch-size": "100",
                        "put-es-index-op": "index"
                    },
                    "descriptors": {
                        "elasticsearch-http-url": {
                            "name": "elasticsearch-http-url",
                            "displayName": "Elasticsearch URL",
                            "description": "Elasticsearch URL which will be connected to, including scheme (http, e.g.), host, and port. The default port for the REST API is 9200.",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "SSL Context Service": {
                            "name": "SSL Context Service",
                            "displayName": "SSL Context Service",
                            "description": "The SSL Context Service used to provide client certificate information for TLS/SSL connections. This service only applies if the Elasticsearch endpoint(s) have been secured with TLS/SSL.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "StandardSSLContextService",
                                        "value": "a460b24b-0165-1000-a9f1-a49dc800dc3b"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Username": {
                            "name": "Username",
                            "displayName": "Username",
                            "description": "Username to access the Elasticsearch cluster",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Password": {
                            "name": "Password",
                            "displayName": "Password",
                            "description": "Password to access the Elasticsearch cluster",
                            "required": false,
                            "sensitive": true,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "elasticsearch-http-connect-timeout": {
                            "name": "elasticsearch-http-connect-timeout",
                            "displayName": "Connection Timeout",
                            "description": "Max wait time for the connection to the Elasticsearch REST API.",
                            "defaultValue": "5 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "elasticsearch-http-response-timeout": {
                            "name": "elasticsearch-http-response-timeout",
                            "displayName": "Response Timeout",
                            "description": "Max wait time for a response from the Elasticsearch REST API.",
                            "defaultValue": "15 secs",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "put-es-id-attr": {
                            "name": "put-es-id-attr",
                            "displayName": "Identifier Attribute",
                            "description": "The name of the FlowFile attribute containing the identifier for the document. If the Index Operation is \"index\", this property may be left empty or evaluate to an empty value, in which case the document's identifier will be auto-generated by Elasticsearch. For all other Index Operations, the attribute must evaluate to a non-empty value.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "put-es-index": {
                            "name": "put-es-index",
                            "displayName": "Index",
                            "description": "The name of the index to insert into",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "put-es-type": {
                            "name": "put-es-type",
                            "displayName": "Type",
                            "description": "The type of this document (used by Elasticsearch for indexing and searching)",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Character Set": {
                            "name": "Character Set",
                            "displayName": "Character Set",
                            "description": "Specifies the character set of the document data.",
                            "defaultValue": "UTF-8",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "put-es-batch-size": {
                            "name": "put-es-batch-size",
                            "displayName": "Batch Size",
                            "description": "The preferred number of flow files to put to the database in a single transaction. Note that the contents of the flow files will be stored in memory until the bulk operation is performed. Also the results should be returned in the same order the flow files were received.",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "put-es-index-op": {
                            "name": "put-es-index-op",
                            "displayName": "Index Operation",
                            "description": "The type of the operation used to index (index, update, upsert, delete)",
                            "defaultValue": "index",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "d4c322bd-2f10-3ebc-33f2-4f05c30df273",
                "name": "Update Elasticsearch",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "d4c322bd-2f10-3ebc-33f2-4f05c30df273",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Update Elasticsearch",
                    "type": "PutElasticsearchHttp",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "60218728-4328-38b3-39a0-8f703697355e",
            "uri": "https://localhost:8179/nifi-api/processors/60218728-4328-38b3-39a0-8f703697355e",
            "position": {
                "x": 476.0848189423923,
                "y": 590.5721942169075
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "60218728-4328-38b3-39a0-8f703697355e",
                "parentGroupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "position": {
                    "x": 476.0848189423923,
                    "y": 590.5721942169075
                },
                "name": "HDFS",
                "type": "org.apache.nifi.processors.hadoop.GetHDFS",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-hadoop-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All files retrieved from HDFS are transferred to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Hadoop Configuration Resources": "/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml",
                        "kerberos-credentials-service": null,
                        "Kerberos Principal": null,
                        "Kerberos Keytab": null,
                        "Kerberos Relogin Period": "4 hours",
                        "Additional Classpath Resources": null,
                        "Directory": null,
                        "Recurse Subdirectories": "false",
                        "Keep Source File": "false",
                        "File Filter Regex": null,
                        "Filter Match Name Only": "true",
                        "Ignore Dotted Files": "true",
                        "Minimum File Age": "0 sec",
                        "Maximum File Age": null,
                        "Polling Interval": "0 sec",
                        "Batch Size": "100",
                        "IO Buffer Size": null,
                        "Compression codec": "NONE"
                    },
                    "descriptors": {
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration. To use swebhdfs, see 'Additional Details' section of PutHDFS's documentation.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "kerberos-credentials-service": {
                            "name": "kerberos-credentials-service",
                            "displayName": "Kerberos Credentials Service",
                            "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "KeytabCredentialsService",
                                        "value": "618a3674-0165-1000-3e4e-f6dfd8dff05f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Kerberos Relogin Period": {
                            "name": "Kerberos Relogin Period",
                            "displayName": "Kerberos Relogin Period",
                            "description": "Period of time which should pass before attempting a kerberos relogin.\n\nThis property has been deprecated, and has no effect on processing. Relogins now occur automatically.",
                            "defaultValue": "4 hours",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Additional Classpath Resources": {
                            "name": "Additional Classpath Resources",
                            "displayName": "Additional Classpath Resources",
                            "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Directory": {
                            "name": "Directory",
                            "displayName": "Directory",
                            "description": "The HDFS directory from which files should be read",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Recurse Subdirectories": {
                            "name": "Recurse Subdirectories",
                            "displayName": "Recurse Subdirectories",
                            "description": "Indicates whether to pull files from subdirectories of the HDFS directory",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Keep Source File": {
                            "name": "Keep Source File",
                            "displayName": "Keep Source File",
                            "description": "Determines whether to delete the file from HDFS after it has been successfully transferred. If true, the file will be fetched repeatedly. This is intended for testing only.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "File Filter Regex": {
                            "name": "File Filter Regex",
                            "displayName": "File Filter Regex",
                            "description": "A Java Regular Expression for filtering Filenames; if a filter is supplied then only files whose names match that Regular Expression will be fetched, otherwise all files will be fetched",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Filter Match Name Only": {
                            "name": "Filter Match Name Only",
                            "displayName": "Filter Match Name Only",
                            "description": "If true then File Filter Regex will match on just the filename, otherwise subdirectory names will be included with filename in the regex comparison",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Dotted Files": {
                            "name": "Ignore Dotted Files",
                            "displayName": "Ignore Dotted Files",
                            "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Age": {
                            "name": "Minimum File Age",
                            "displayName": "Minimum File Age",
                            "description": "The minimum age that a file must be in order to be pulled; any file younger than this amount of time (based on last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Age": {
                            "name": "Maximum File Age",
                            "displayName": "Maximum File Age",
                            "description": "The maximum age that a file must be in order to be pulled; any file older than this amount of time (based on last modification date) will be ignored",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Indicates how long to wait between performing directory listings",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Batch Size": {
                            "name": "Batch Size",
                            "displayName": "Batch Size",
                            "description": "The maximum number of files to pull in each iteration, based on run schedule.",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "IO Buffer Size": {
                            "name": "IO Buffer Size",
                            "displayName": "IO Buffer Size",
                            "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Compression codec": {
                            "name": "Compression codec",
                            "displayName": "Compression codec",
                            "description": "",
                            "defaultValue": "NONE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "NONE",
                                        "value": "NONE",
                                        "description": "No compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DEFAULT",
                                        "value": "DEFAULT",
                                        "description": "Default ZLIB compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BZIP",
                                        "value": "BZIP",
                                        "description": "BZIP compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "GZIP",
                                        "value": "GZIP",
                                        "description": "GZIP compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "LZ4",
                                        "value": "LZ4",
                                        "description": "LZ4 compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "LZO",
                                        "value": "LZO",
                                        "description": "LZO compression - it assumes LD_LIBRARY_PATH has been set and jar is available"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SNAPPY",
                                        "value": "SNAPPY",
                                        "description": "Snappy compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AUTOMATIC",
                                        "value": "AUTOMATIC",
                                        "description": "Will attempt to automatically detect the compression codec."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                "id": "60218728-4328-38b3-39a0-8f703697355e",
                "name": "HDFS",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "60218728-4328-38b3-39a0-8f703697355e",
                    "groupId": "cf5d1431-c026-3216-d959-6c8f63db1241",
                    "name": "HDFS",
                    "type": "GetHDFS",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "83f6a890-b14a-3fdf-9846-cffea6fa5ae5",
            "uri": "https://localhost:8179/nifi-api/processors/83f6a890-b14a-3fdf-9846-cffea6fa5ae5",
            "position": {
                "x": 2209.991900242447,
                "y": 751.238353971758
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "83f6a890-b14a-3fdf-9846-cffea6fa5ae5",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 2209.991900242447,
                    "y": 751.238353971758
                },
                "name": "Split Records (Solr)",
                "type": "org.apache.nifi.processors.standard.SplitJson",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "failure",
                        "description": "If a FlowFile fails processing for any reason (for example, the FlowFile is not valid JSON or the specified path does not exist), it will be routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "original",
                        "description": "The original FlowFile that was split into segments. If the FlowFile fails processing, nothing will be sent to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "split",
                        "description": "All segments of the original FlowFile will be routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "JsonPath Expression": "$.*",
                        "Null Value Representation": "empty string"
                    },
                    "descriptors": {
                        "JsonPath Expression": {
                            "name": "JsonPath Expression",
                            "displayName": "JsonPath Expression",
                            "description": "A JsonPath expression that indicates the array element to split into JSON/scalar fragments.",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Null Value Representation": {
                            "name": "Null Value Representation",
                            "displayName": "Null Value Representation",
                            "description": "Indicates the desired representation of JSON Path expressions resulting in a null value.",
                            "defaultValue": "empty string",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "empty string",
                                        "value": "empty string"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "the string 'null'",
                                        "value": "the string 'null'"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "83f6a890-b14a-3fdf-9846-cffea6fa5ae5",
                "name": "Split Records (Solr)",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "83f6a890-b14a-3fdf-9846-cffea6fa5ae5",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Split Records (Solr)",
                    "type": "SplitJson",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "6081c02a-bd78-33cd-103c-32f0ce47990c",
            "uri": "https://localhost:8179/nifi-api/processors/6081c02a-bd78-33cd-103c-32f0ce47990c",
            "position": {
                "x": 2946.996346597596,
                "y": 471.82618889558034
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "6081c02a-bd78-33cd-103c-32f0ce47990c",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 2946.996346597596,
                    "y": 471.82618889558034
                },
                "name": "DB Avro Ingest Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "metadata.table.feedFieldStructure": "${db.table.avro.schema}",
                        "skipHeader": "false"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "metadata.table.feedFieldStructure": {
                            "name": "metadata.table.feedFieldStructure",
                            "displayName": "metadata.table.feedFieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "skipHeader": {
                            "name": "skipHeader",
                            "displayName": "skipHeader",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "6081c02a-bd78-33cd-103c-32f0ce47990c",
                "name": "DB Avro Ingest Parameters",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "6081c02a-bd78-33cd-103c-32f0ce47990c",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "DB Avro Ingest Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 1
            },
            "id": "fd0fda7f-c705-3170-144c-c905710ae7f4",
            "uri": "https://localhost:8179/nifi-api/processors/fd0fda7f-c705-3170-144c-c905710ae7f4",
            "position": {
                "x": 1872.863337094237,
                "y": 473.18458733308034
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "fd0fda7f-c705-3170-144c-c905710ae7f4",
                "parentGroupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "position": {
                    "x": 1872.863337094237,
                    "y": 473.18458733308034
                },
                "name": "DB Avro Ingest Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "metadata.table.feedFieldStructure": "${db.table.avro.schema}",
                        "skipHeader": "false"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "metadata.table.feedFieldStructure": {
                            "name": "metadata.table.feedFieldStructure",
                            "displayName": "metadata.table.feedFieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "skipHeader": {
                            "name": "skipHeader",
                            "displayName": "skipHeader",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "id": "fd0fda7f-c705-3170-144c-c905710ae7f4",
                "name": "DB Avro Ingest Parameters",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "fd0fda7f-c705-3170-144c-c905710ae7f4",
                    "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                    "name": "DB Avro Ingest Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 2
            },
            "id": "7ce0aace-a98d-3536-c42c-2f873c09aab3",
            "uri": "https://localhost:8179/nifi-api/processors/7ce0aace-a98d-3536-c42c-2f873c09aab3",
            "position": {
                "x": 666.4847164154053,
                "y": 473.91699544380117
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "7ce0aace-a98d-3536-c42c-2f873c09aab3",
                "parentGroupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "position": {
                    "x": 666.4847164154053,
                    "y": 473.91699544380117
                },
                "name": "Initialize Feed Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "archiveId": "${now():format('yyyyMMddHHmmss')}_${UUID()}",
                        "category": "website",
                        "feed": "testing_multi_b",
                        "hdfs.archive.root": "/archive",
                        "hdfs.ingest.root": "/etl",
                        "hive.ingest.root": "/model.db",
                        "hive.master.root": "/app/warehouse",
                        "hive.profile.root": "/model.db",
                        "kylo.tmp.baseFolder": "/tmp/kylo-nifi",
                        "metadata.table.feedFieldStructure": "host|string||0|0|0|host\ndescription|string||0|0|0|description\nprincipalundefinedname|string||0|0|0|principalundefinedname\nprincipalundefinedtype|string||0|0|0|principalundefinedtype\nlocalundefinedusername|string||0|0|0|localundefinedusername\nkeytabundefinedfileundefinedpath|string||0|0|0|keytabundefinedfileundefinedpath\nkeytabundefinedfileundefinedowner|string||0|0|0|keytabundefinedfileundefinedowner\nkeytabundefinedfileundefinedownerundefinedaccess|string||0|0|0|keytabundefinedfileundefinedownerundefinedaccess\nkeytabundefinedfileundefinedgroup|string||0|0|0|keytabundefinedfileundefinedgroup\nkeytabundefinedfileundefinedgroupundefinedaccess|string||0|0|0|keytabundefinedfileundefinedgroupundefinedaccess\nkeytabundefinedfileundefinedmode|int||0|0|0|keytabundefinedfileundefinedmode\nkeytabundefinedfileundefinedinstalled|string||0|0|0|keytabundefinedfileundefinedinstalled",
                        "metadata.table.feedFormat": "ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'\n WITH SERDEPROPERTIES ( 'separatorChar' = ',' ,'escapeChar' = '\\\\' ,'quoteChar' = '\\\"') STORED AS TEXTFILE",
                        "metadata.table.fieldPoliciesJson": "[{\"profile\":true,\"index\":false,\"fieldName\":\"host\",\"feedFieldName\":\"host\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"description\",\"feedFieldName\":\"description\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"principalundefinedname\",\"feedFieldName\":\"principalundefinedname\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"principalundefinedtype\",\"feedFieldName\":\"principalundefinedtype\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"localundefinedusername\",\"feedFieldName\":\"localundefinedusername\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"keytabundefinedfileundefinedpath\",\"feedFieldName\":\"keytabundefinedfileundefinedpath\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"keytabundefinedfileundefinedowner\",\"feedFieldName\":\"keytabundefinedfileundefinedowner\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"keytabundefinedfileundefinedownerundefinedaccess\",\"feedFieldName\":\"keytabundefinedfileundefinedownerundefinedaccess\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"keytabundefinedfileundefinedgroup\",\"feedFieldName\":\"keytabundefinedfileundefinedgroup\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"keytabundefinedfileundefinedgroupundefinedaccess\",\"feedFieldName\":\"keytabundefinedfileundefinedgroupundefinedaccess\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"keytabundefinedfileundefinedmode\",\"feedFieldName\":\"keytabundefinedfileundefinedmode\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false},{\"profile\":true,\"index\":false,\"fieldName\":\"keytabundefinedfileundefinedinstalled\",\"feedFieldName\":\"keytabundefinedfileundefinedinstalled\",\"standardization\":null,\"validation\":null,\"domainTypeId\":null,\"partitionColumn\":false}]",
                        "metadata.table.fieldStructure": "host|string||0|0|0|host\ndescription|string||0|0|0|description\nprincipalundefinedname|string||0|0|0|principalundefinedname\nprincipalundefinedtype|string||0|0|0|principalundefinedtype\nlocalundefinedusername|string||0|0|0|localundefinedusername\nkeytabundefinedfileundefinedpath|string||0|0|0|keytabundefinedfileundefinedpath\nkeytabundefinedfileundefinedowner|string||0|0|0|keytabundefinedfileundefinedowner\nkeytabundefinedfileundefinedownerundefinedaccess|string||0|0|0|keytabundefinedfileundefinedownerundefinedaccess\nkeytabundefinedfileundefinedgroup|string||0|0|0|keytabundefinedfileundefinedgroup\nkeytabundefinedfileundefinedgroupundefinedaccess|string||0|0|0|keytabundefinedfileundefinedgroupundefinedaccess\nkeytabundefinedfileundefinedmode|int||0|0|0|keytabundefinedfileundefinedmode\nkeytabundefinedfileundefinedinstalled|string||0|0|0|keytabundefinedfileundefinedinstalled",
                        "metadata.table.targetFormat": "STORED AS ORC",
                        "metadata.table.targetMergeStrategy": "DEDUPE_AND_MERGE",
                        "nifi.home": "/opt/nifi",
                        "nifi.kylo.applicationJarDirectory": "/opt/nifi/current/lib/app",
                        "skipHeader": "true",
                        "spark.input_folder": "/tmp/kylo-nifi/spark"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "archiveId": {
                            "name": "archiveId",
                            "displayName": "archiveId",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "category": {
                            "name": "category",
                            "displayName": "category",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "feed": {
                            "name": "feed",
                            "displayName": "feed",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.archive.root": {
                            "name": "hdfs.archive.root",
                            "displayName": "hdfs.archive.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hdfs.ingest.root": {
                            "name": "hdfs.ingest.root",
                            "displayName": "hdfs.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.ingest.root": {
                            "name": "hive.ingest.root",
                            "displayName": "hive.ingest.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.master.root": {
                            "name": "hive.master.root",
                            "displayName": "hive.master.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "hive.profile.root": {
                            "name": "hive.profile.root",
                            "displayName": "hive.profile.root",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "kylo.tmp.baseFolder": {
                            "name": "kylo.tmp.baseFolder",
                            "displayName": "kylo.tmp.baseFolder",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedFieldStructure": {
                            "name": "metadata.table.feedFieldStructure",
                            "displayName": "metadata.table.feedFieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.feedFormat": {
                            "name": "metadata.table.feedFormat",
                            "displayName": "metadata.table.feedFormat",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldPoliciesJson": {
                            "name": "metadata.table.fieldPoliciesJson",
                            "displayName": "metadata.table.fieldPoliciesJson",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.fieldStructure": {
                            "name": "metadata.table.fieldStructure",
                            "displayName": "metadata.table.fieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetFormat": {
                            "name": "metadata.table.targetFormat",
                            "displayName": "metadata.table.targetFormat",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "metadata.table.targetMergeStrategy": {
                            "name": "metadata.table.targetMergeStrategy",
                            "displayName": "metadata.table.targetMergeStrategy",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.home": {
                            "name": "nifi.home",
                            "displayName": "nifi.home",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "nifi.kylo.applicationJarDirectory": {
                            "name": "nifi.kylo.applicationJarDirectory",
                            "displayName": "nifi.kylo.applicationJarDirectory",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "skipHeader": {
                            "name": "skipHeader",
                            "displayName": "skipHeader",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "spark.input_folder": {
                            "name": "spark.input_folder",
                            "displayName": "spark.input_folder",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                "id": "7ce0aace-a98d-3536-c42c-2f873c09aab3",
                "name": "Initialize Feed Parameters",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "7ce0aace-a98d-3536-c42c-2f873c09aab3",
                    "groupId": "a4f63483-0165-1000-da44-a6575f7f7d55",
                    "name": "Initialize Feed Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "3d4090b1-0f5a-3ddc-1117-9a71a9285a3e",
            "uri": "https://localhost:8179/nifi-api/processors/3d4090b1-0f5a-3ddc-1117-9a71a9285a3e",
            "position": {
                "x": 2946.996346597596,
                "y": 471.82618889558034
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "3d4090b1-0f5a-3ddc-1117-9a71a9285a3e",
                "parentGroupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "position": {
                    "x": 2946.996346597596,
                    "y": 471.82618889558034
                },
                "name": "DB Avro Ingest Parameters",
                "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-update-attribute-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "set state fail",
                        "description": "A failure to set the state after adding the attributes to the FlowFile will route the FlowFile here.",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "All successful FlowFiles are routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": true,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Delete Attributes Expression": null,
                        "Store State": "Store state locally",
                        "Stateful Variables Initial Value": "",
                        "metadata.table.feedFieldStructure": "${db.table.avro.schema}",
                        "skipHeader": "false"
                    },
                    "descriptors": {
                        "Delete Attributes Expression": {
                            "name": "Delete Attributes Expression",
                            "displayName": "Delete Attributes Expression",
                            "description": "Regular expression for attributes to be deleted from FlowFiles.  Existing attributes that match will be deleted regardless of whether they are updated by this processor.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Store State": {
                            "name": "Store State",
                            "displayName": "Store State",
                            "description": "Select whether or not state will be stored. Selecting 'Stateless' will offer the default functionality of purely updating the attributes on a FlowFile in a stateless manner. Selecting a stateful option will not only store the attributes on the FlowFile but also in the Processors state. See the 'Stateful Usage' topic of the 'Additional Details' section of this processor's documentation for more information",
                            "defaultValue": "Do not store state",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Do not store state",
                                        "value": "Do not store state"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Store state locally",
                                        "value": "Store state locally"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Stateful Variables Initial Value": {
                            "name": "Stateful Variables Initial Value",
                            "displayName": "Stateful Variables Initial Value",
                            "description": "If using state to set/reference variables then this value is used to set the initial value of the stateful variable. This will only be used in the @OnScheduled method when state does not contain a value for the variable. This is required if running statefully but can be empty if needed.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "metadata.table.feedFieldStructure": {
                            "name": "metadata.table.feedFieldStructure",
                            "displayName": "metadata.table.feedFieldStructure",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "skipHeader": {
                            "name": "skipHeader",
                            "displayName": "skipHeader",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "customUiUrl": "/nifi-update-attribute-ui-1.6.0/configure",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                "id": "3d4090b1-0f5a-3ddc-1117-9a71a9285a3e",
                "name": "DB Avro Ingest Parameters",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "3d4090b1-0f5a-3ddc-1117-9a71a9285a3e",
                    "groupId": "05b9fb7b-a5a2-38cc-4ece-a9831f38e0d5",
                    "name": "DB Avro Ingest Parameters",
                    "type": "UpdateAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 3
            },
            "id": "a3193fe7-68c3-396a-ad44-2e7b8554ac9f",
            "uri": "https://localhost:8179/nifi-api/processors/a3193fe7-68c3-396a-ad44-2e7b8554ac9f",
            "position": {
                "x": 1259.489428668519,
                "y": 1719.8767799845518
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "a3193fe7-68c3-396a-ad44-2e7b8554ac9f",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 1259.489428668519,
                    "y": 1719.8767799845518
                },
                "name": "Drop Feed Tables",
                "type": "com.thinkbiganalytics.nifi.v2.ingest.DropFeedTables",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#ff9900"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "SQL query execution failed. Incoming FlowFile will be penalized and routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Successfully relationship.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Database Connection Pooling Service": "51f09b62-b321-39b3-e7fb-cb527eba7521",
                        "System feed category": "${category}",
                        "System feed name": "${feed}",
                        "Table Type": "ALL",
                        "Additional Tables": null
                    },
                    "descriptors": {
                        "Database Connection Pooling Service": {
                            "name": "Database Connection Pooling Service",
                            "displayName": "Database Connection Pooling Service",
                            "description": "The Controller Service that is used to obtain connection to database",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "51f09b62-b321-39b3-e7fb-cb527eba7521"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Hive Thrift Service",
                                        "value": "adc2fd36-0163-1000-c94e-9156591e27ee"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.thrift.ThriftService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Table Type": {
                            "name": "Table Type",
                            "displayName": "Table Type",
                            "description": "Specifies the standard table type to drop or ALL for standard set.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "ALL",
                                        "value": "ALL"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "MASTER",
                                        "value": "MASTER"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "PROFILE",
                                        "value": "PROFILE"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "VALID",
                                        "value": "VALID"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "INVALID",
                                        "value": "INVALID"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "FEED",
                                        "value": "FEED"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Additional Tables": {
                            "name": "Additional Tables",
                            "displayName": "Additional Tables",
                            "description": "Additional tables to drop separated by comma.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "a3193fe7-68c3-396a-ad44-2e7b8554ac9f",
                "name": "Drop Feed Tables",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "a3193fe7-68c3-396a-ad44-2e7b8554ac9f",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Drop Feed Tables",
                    "type": "DropFeedTables",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "2025a02a-e3ad-3ac8-0699-557354dd1bf7",
            "uri": "https://localhost:8179/nifi-api/processors/2025a02a-e3ad-3ac8-0699-557354dd1bf7",
            "position": {
                "x": 615.3816413683817,
                "y": 493.40027265861136
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "2025a02a-e3ad-3ac8-0699-557354dd1bf7",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 615.3816413683817,
                    "y": 493.40027265861136
                },
                "name": "Prepare Script",
                "type": "org.apache.nifi.processors.script.ExecuteScript",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-scripting-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {
                    "background-color": "#2bff05"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "FlowFiles that failed to be processed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "FlowFiles that were successfully processed",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": true,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Script Engine": "Groovy",
                        "Script File": null,
                        "Script Body": "// Get flow file\ndef flowFile = session.get()\nif (!flowFile) return\n// Create output directory\ndef inputFolder = flowFile.getAttribute(\"spark.input_folder\")\ndef category = flowFile.getAttribute(\"category\")\ndef feed = flowFile.getAttribute(\"feed\")\ndef feedts = flowFile.getAttribute(\"feedts\")\ndef folder = new File(inputFolder + \"/\" + category + \"/\" + feed + \"/\" + feedts)\nif (!folder.exists()) folder.mkdirs()\n// Write script\ndef script = \"sqlContext.setConf(\\\"hive.exec.dynamic.partition\\\", \\\"true\\\")\\n\"\nscript = script + \"sqlContext.setConf(\\\"hive.exec.dynamic.partition.mode\\\", \\\"nonstrict\\\")\\n\"\nscript = script + flowFile.getAttribute(\"metadata.dataTransformation.dataTransformScript\")\nscript = script + \".withColumn(\\\"processing_dttm\\\", org.apache.spark.sql.functions.lit(\\\"\" + feedts + \"\\\"))\"\nscript = script + \".write.mode(SaveMode.Overwrite)\"\ndef isPreFeed = (flowFile.getAttribute(\"transform_script\") != null)\ndef sparkVersion = flowFile.getAttribute(\"spark.version\")\nif (!isPreFeed && (sparkVersion == null || sparkVersion == \"1\")) {\n  script = script + \".partitionBy(\\\"processing_dttm\\\")\"\n}\nscript = script + \".insertInto(\\\"\" + category + \".\" + feed + (isPreFeed ? \"\" : \"_feed\") + \"\\\")\"\ndef scalaFile = new File(folder, \"transform.scala\")\nscalaFile.write(script)\n// Write field policies\ndef json = flowFile.getAttribute(\"metadata.table.fieldPoliciesJson\")\nif (json != null) {\n  def jsonFile = new File(folder, feed + \"_field_policy.json\")\n  jsonFile.write(json)\n  flowFile = session.putAttribute(flowFile, \"table_field_policy_json_file\", jsonFile.getCanonicalPath())\n}\n// Output file path\nflowFile = session.putAttribute(flowFile, \"transform_script_file\", scalaFile.getCanonicalPath())\nsession.transfer(flowFile, REL_SUCCESS)\n",
                        "Module Directory": null
                    },
                    "descriptors": {
                        "Script Engine": {
                            "name": "Script Engine",
                            "displayName": "Script Engine",
                            "description": "The engine to execute scripts",
                            "defaultValue": "Clojure",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Clojure",
                                        "value": "Clojure"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ECMAScript",
                                        "value": "ECMAScript"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Groovy",
                                        "value": "Groovy"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "lua",
                                        "value": "lua"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "python",
                                        "value": "python"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "ruby",
                                        "value": "ruby"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Script File": {
                            "name": "Script File",
                            "displayName": "Script File",
                            "description": "Path to script file to execute. Only one of Script File or Script Body may be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Script Body": {
                            "name": "Script Body",
                            "displayName": "Script Body",
                            "description": "Body of script to execute. Only one of Script File or Script Body may be used",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Module Directory": {
                            "name": "Module Directory",
                            "displayName": "Module Directory",
                            "description": "Comma-separated list of paths to files and/or directories which contain modules required by the script.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "2025a02a-e3ad-3ac8-0699-557354dd1bf7",
                "name": "Prepare Script",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "2025a02a-e3ad-3ac8-0699-557354dd1bf7",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Prepare Script",
                    "type": "ExecuteScript",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "0adb24c2-9602-3b1b-d89a-6b7d0ed8c77f",
            "uri": "https://localhost:8179/nifi-api/processors/0adb24c2-9602-3b1b-d89a-6b7d0ed8c77f",
            "position": {
                "x": 2147.9356943174384,
                "y": 460.05783997832987
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "0adb24c2-9602-3b1b-d89a-6b7d0ed8c77f",
                "parentGroupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "position": {
                    "x": 2147.9356943174384,
                    "y": 460.05783997832987
                },
                "name": "Initialization Failure",
                "type": "com.thinkbiganalytics.nifi.v2.init.CompleteInitializeFeed",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#f20909"
                },
                "relationships": [
                    {
                        "name": "failure",
                        "description": "Processing failed",
                        "autoTerminate": true
                    },
                    {
                        "name": "success",
                        "description": "Processing was successful",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Metadata Service": "7b5f7077-5df2-320b-d940-98f6014d9c3c",
                        "System feed category": "${category}",
                        "System feed name": "${feed}",
                        "Initialization Result": "FAILURE"
                    },
                    "descriptors": {
                        "Metadata Service": {
                            "name": "Metadata Service",
                            "displayName": "Metadata Service",
                            "description": "Think Big metadata service",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "System category of the feed this processor supports",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "Name of feed this processor supports",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Initialization Result": {
                            "name": "Initialization Result",
                            "displayName": "Initialization Result",
                            "description": "Indicates how this processor should behave when a flow file arrives after feed initialization has failed.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Successful",
                                        "value": "SUCCESSFUL",
                                        "description": "The mode indicating feed initialization was successful."
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Failure",
                                        "value": "FAILURE",
                                        "description": "The mode indicating feed initialization failed."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                "id": "0adb24c2-9602-3b1b-d89a-6b7d0ed8c77f",
                "name": "Initialization Failure",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "0adb24c2-9602-3b1b-d89a-6b7d0ed8c77f",
                    "groupId": "b0ddd96e-88e1-3a90-6283-8f1c9d48485a",
                    "name": "Initialization Failure",
                    "type": "CompleteInitializeFeed",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "clientId": "a44bb9b8-0165-1000-715d-8a06f85e605a",
                "version": 1
            },
            "id": "010cb22d-3079-3e1e-0e0d-048ca7bbc546",
            "uri": "https://localhost:8179/nifi-api/processors/010cb22d-3079-3e1e-0e0d-048ca7bbc546",
            "position": {
                "x": 1760.7356959620392,
                "y": 473.52102002896936
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "010cb22d-3079-3e1e-0e0d-048ca7bbc546",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 1760.7356959620392,
                    "y": 473.52102002896936
                },
                "name": "Savepoint 1",
                "type": "com.thinkbiganalytics.nifi.v2.savepoint.SetSavepoint",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "RUNNING",
                "style": {},
                "relationships": [
                    {
                        "name": "expired",
                        "description": "A FlowFile that has exceeded the configured expiration Duration will be routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "failure",
                        "description": "FlowFiles will be routed to this relationship if the controller cannot be reached or Savepoint Identifier evaluates to null or empty",
                        "autoTerminate": false
                    },
                    {
                        "name": "release-failure",
                        "description": "A FlowFile with a release signal from controller will be routed to this relationship",
                        "autoTerminate": false
                    },
                    {
                        "name": "release-success",
                        "description": "A FlowFile with a release signal from controller will be routed to this relationship",
                        "autoTerminate": true
                    },
                    {
                        "name": "try",
                        "description": "A FlowFile will be cloned upon new entry or receiving a retry signal from the controller and routed to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "savepoint-id": "${savepoint.id}",
                        "expiration-duration": "72 hours",
                        "savepoint-service": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                    },
                    "descriptors": {
                        "savepoint-id": {
                            "name": "savepoint-id",
                            "displayName": "Savepoint Id",
                            "description": "A value, or the results of an Attribute Expression Language statement, which will be evaluated against a FlowFile in order to determine the savepoint key",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "expiration-duration": {
                            "name": "expiration-duration",
                            "displayName": "Expiration Duration",
                            "description": "Indicates the duration after which waiting FlowFiles will be routed to the 'expired' relationship",
                            "defaultValue": "72 hours",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "savepoint-service": {
                            "name": "savepoint-service",
                            "displayName": "Savepoint service",
                            "description": "The Controller Service used to manage retry and release signals for savepoints.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "520f2529-14b8-37bb-57d5-8f2da65b5e93"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DistributedSavepointController",
                                        "value": "adc39cd8-0163-1000-9c83-676226a01aa6"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.v2.core.savepoint.SavepointController",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        }
                    },
                    "schedulingPeriod": "1 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 2000,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "010cb22d-3079-3e1e-0e0d-048ca7bbc546",
                "name": "Savepoint 1",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "010cb22d-3079-3e1e-0e0d-048ca7bbc546",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "Savepoint 1",
                    "type": "SetSavepoint",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "e4d68d82-a480-35d3-2341-0a3edadbce75",
            "uri": "https://localhost:8179/nifi-api/processors/e4d68d82-a480-35d3-2341-0a3edadbce75",
            "position": {
                "x": 473.82096726703094,
                "y": 436.66956567237867
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "e4d68d82-a480-35d3-2341-0a3edadbce75",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 473.82096726703094,
                    "y": 436.66956567237867
                },
                "name": "Filesystem",
                "type": "org.apache.nifi.processors.standard.GetFile",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "RUNNING",
                "style": {
                    "background-color": "#11f237"
                },
                "relationships": [
                    {
                        "name": "success",
                        "description": "All files are routed to success",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Input Directory": "/var/dropzone",
                        "File Filter": "mydata\\d{1,3}.csv",
                        "Path Filter": null,
                        "Batch Size": "100",
                        "Keep Source File": "false",
                        "Recurse Subdirectories": "false",
                        "Polling Interval": "0 sec",
                        "Ignore Hidden Files": "true",
                        "Minimum File Age": "0 sec",
                        "Maximum File Age": null,
                        "Minimum File Size": "0 B",
                        "Maximum File Size": null
                    },
                    "descriptors": {
                        "Input Directory": {
                            "name": "Input Directory",
                            "displayName": "Input Directory",
                            "description": "The input directory from which to pull files",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "File Filter": {
                            "name": "File Filter",
                            "displayName": "File Filter",
                            "description": "Only files whose names match the given regular expression will be picked up",
                            "defaultValue": "[^\\.].*",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Path Filter": {
                            "name": "Path Filter",
                            "displayName": "Path Filter",
                            "description": "When Recurse Subdirectories is true, then only subdirectories whose path matches the given regular expression will be scanned",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Batch Size": {
                            "name": "Batch Size",
                            "displayName": "Batch Size",
                            "description": "The maximum number of files to pull in each iteration",
                            "defaultValue": "10",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Keep Source File": {
                            "name": "Keep Source File",
                            "displayName": "Keep Source File",
                            "description": "If true, the file is not deleted after it has been copied to the Content Repository; this causes the file to be picked up continually and is useful for testing purposes.  If not keeping original NiFi will need write permissions on the directory it is pulling from otherwise it will ignore the file.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Recurse Subdirectories": {
                            "name": "Recurse Subdirectories",
                            "displayName": "Recurse Subdirectories",
                            "description": "Indicates whether or not to pull files from subdirectories",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Indicates how long to wait before performing a directory listing",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Hidden Files": {
                            "name": "Ignore Hidden Files",
                            "displayName": "Ignore Hidden Files",
                            "description": "Indicates whether or not hidden files should be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Age": {
                            "name": "Minimum File Age",
                            "displayName": "Minimum File Age",
                            "description": "The minimum age that a file must be in order to be pulled; any file younger than this amount of time (according to last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Age": {
                            "name": "Maximum File Age",
                            "displayName": "Maximum File Age",
                            "description": "The maximum age that a file must be in order to be pulled; any file older than this amount of time (according to last modification date) will be ignored",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Size": {
                            "name": "Minimum File Size",
                            "displayName": "Minimum File Size",
                            "description": "The minimum size that a file must be in order to be pulled",
                            "defaultValue": "0 B",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Size": {
                            "name": "Maximum File Size",
                            "displayName": "Maximum File Size",
                            "description": "The maximum size that a file can be in order to be pulled",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "5 min",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "e4d68d82-a480-35d3-2341-0a3edadbce75",
                "name": "Filesystem",
                "runStatus": "Running",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "e4d68d82-a480-35d3-2341-0a3edadbce75",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "Filesystem",
                    "type": "GetFile",
                    "runStatus": "Running",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 1,
                    "tasksDurationNanos": 327369,
                    "tasks": "1",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "c53ade63-51c8-33b5-1f57-20223d656714",
            "uri": "https://localhost:8179/nifi-api/processors/c53ade63-51c8-33b5-1f57-20223d656714",
            "position": {
                "x": 2342.240425547301,
                "y": 474.9038470586529
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "c53ade63-51c8-33b5-1f57-20223d656714",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 2342.240425547301,
                    "y": 474.9038470586529
                },
                "name": "Detect DB Avro Ingest",
                "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "table-avro",
                        "description": "",
                        "autoTerminate": false
                    },
                    {
                        "name": "unmatched",
                        "description": "FlowFiles that do not match any user-define expression will be routed here",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Routing Strategy": "Route to Property name",
                        "table-avro": "${db.table.output.format:equals('AVRO')}"
                    },
                    "descriptors": {
                        "Routing Strategy": {
                            "name": "Routing Strategy",
                            "displayName": "Routing Strategy",
                            "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                            "defaultValue": "Route to Property name",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to Property name",
                                        "value": "Route to Property name",
                                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if all match",
                                        "value": "Route to 'match' if all match",
                                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if any matches",
                                        "value": "Route to 'match' if any matches",
                                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "table-avro": {
                            "name": "table-avro",
                            "displayName": "table-avro",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "c53ade63-51c8-33b5-1f57-20223d656714",
                "name": "Detect DB Avro Ingest",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:37 UTC",
                "aggregateSnapshot": {
                    "id": "c53ade63-51c8-33b5-1f57-20223d656714",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "Detect DB Avro Ingest",
                    "type": "RouteOnAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "9671eac2-bcdf-33e9-a4f9-ed9b69077a28",
            "uri": "https://localhost:8179/nifi-api/processors/9671eac2-bcdf-33e9-a4f9-ed9b69077a28",
            "position": {
                "x": 1206.4221691768507,
                "y": 1358.5903981118263
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "9671eac2-bcdf-33e9-a4f9-ed9b69077a28",
                "parentGroupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "position": {
                    "x": 1206.4221691768507,
                    "y": 1358.5903981118263
                },
                "name": "TriggerCleanup",
                "type": "com.thinkbiganalytics.nifi.v2.metadata.TriggerCleanup",
                "bundle": {
                    "group": "default",
                    "artifact": "kylo-nifi-core-v1.2-nar",
                    "version": "unversioned"
                },
                "state": "DISABLED",
                "style": {
                    "background-color": "#ff9900"
                },
                "relationships": [
                    {
                        "name": "Success",
                        "description": "Relationship followed on successful precondition event.",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_ALLOWED",
                "config": {
                    "properties": {
                        "Feed Cleanup Event Service": "adc464ec-0163-1000-c5ab-a6429af8c498",
                        "Metadata Provider Service": "adc39d7a-0163-1000-5739-f8ab47ad267f",
                        "System feed category": "${metadata.category.systemName}",
                        "System feed name": "${metadata.systemFeedName}"
                    },
                    "descriptors": {
                        "Feed Cleanup Event Service": {
                            "name": "Feed Cleanup Event Service",
                            "displayName": "Feed Cleanup Event Service",
                            "description": "Service that manages the cleanup of feeds.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Cleanup Service",
                                        "value": "adc464ec-0163-1000-c5ab-a6429af8c498"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Cleanup Service",
                                        "value": "d791170d-8275-3f04-815c-05d79c0dc931"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.cleanup.CleanupEventService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "Metadata Provider Service": {
                            "name": "Metadata Provider Service",
                            "displayName": "Metadata Provider Service",
                            "description": "Service supplying the implementations of the various metadata providers.",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "7b5f7077-5df2-320b-d940-98f6014d9c3c"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Kylo Metadata Service",
                                        "value": "adc39d7a-0163-1000-5739-f8ab47ad267f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "com.thinkbiganalytics.nifi.core.api.metadata.MetadataProviderService",
                            "identifiesControllerServiceBundle": {
                                "group": "default",
                                "artifact": "kylo-nifi-standard-services-v1.2-nar",
                                "version": "unversioned"
                            }
                        },
                        "System feed category": {
                            "name": "System feed category",
                            "displayName": "System feed category",
                            "description": "The category name of this feed. The default is to have this name automatically set when the feed is created. Normally you do not need to change the default value.",
                            "defaultValue": "${metadata.category.systemName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "System feed name": {
                            "name": "System feed name",
                            "displayName": "System feed name",
                            "description": "The system name of this feed. The default is to have this name automatically set when the feed is created. Normally you do not need to change the default value.",
                            "defaultValue": "${metadata.systemFeedName}",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_ALLOWED",
            "status": {
                "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                "id": "9671eac2-bcdf-33e9-a4f9-ed9b69077a28",
                "name": "TriggerCleanup",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "9671eac2-bcdf-33e9-a4f9-ed9b69077a28",
                    "groupId": "9f786432-0165-1000-3cdc-b8a71ca5f707",
                    "name": "TriggerCleanup",
                    "type": "TriggerCleanup",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "e0dcd457-b712-354f-0211-14fa3aa641b7",
            "uri": "https://localhost:8179/nifi-api/processors/e0dcd457-b712-354f-0211-14fa3aa641b7",
            "position": {
                "x": 1855.6196735309895,
                "y": 482.0758351473801
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "e0dcd457-b712-354f-0211-14fa3aa641b7",
                "parentGroupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "position": {
                    "x": 1855.6196735309895,
                    "y": 482.0758351473801
                },
                "name": "Detect Search Engine",
                "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-nar",
                    "version": "1.6.0"
                },
                "state": "STOPPED",
                "style": {},
                "relationships": [
                    {
                        "name": "elasticsearch",
                        "description": "",
                        "autoTerminate": false
                    },
                    {
                        "name": "solr",
                        "description": "",
                        "autoTerminate": false
                    },
                    {
                        "name": "unmatched",
                        "description": "FlowFiles that do not match any user-define expression will be routed here",
                        "autoTerminate": true
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": true,
                "supportsBatching": true,
                "persistsState": false,
                "restricted": false,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_REQUIRED",
                "config": {
                    "properties": {
                        "Routing Strategy": "Route to Property name",
                        "elasticsearch": "${searchengine:equals('elasticsearch')}",
                        "solr": "${searchengine:equals('solr')}"
                    },
                    "descriptors": {
                        "Routing Strategy": {
                            "name": "Routing Strategy",
                            "displayName": "Routing Strategy",
                            "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                            "defaultValue": "Route to Property name",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "Route to Property name",
                                        "value": "Route to Property name",
                                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if all match",
                                        "value": "Route to 'match' if all match",
                                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "Route to 'matched' if any matches",
                                        "value": "Route to 'match' if any matches",
                                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "elasticsearch": {
                            "name": "elasticsearch",
                            "displayName": "elasticsearch",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        },
                        "solr": {
                            "name": "solr",
                            "displayName": "solr",
                            "description": "",
                            "required": false,
                            "sensitive": false,
                            "dynamic": true,
                            "supportsEl": true
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_REQUIRED",
            "status": {
                "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                "id": "e0dcd457-b712-354f-0211-14fa3aa641b7",
                "name": "Detect Search Engine",
                "runStatus": "Stopped",
                "statsLastRefreshed": "14:52:39 UTC",
                "aggregateSnapshot": {
                    "id": "e0dcd457-b712-354f-0211-14fa3aa641b7",
                    "groupId": "26c0856a-a494-3399-7804-4e6cf72dac75",
                    "name": "Detect Search Engine",
                    "type": "RouteOnAttribute",
                    "runStatus": "Stopped",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        },
        {
            "revision": {
                "version": 0
            },
            "id": "5cbb8675-ab2e-3424-665a-cfa26b41f131",
            "uri": "https://localhost:8179/nifi-api/processors/5cbb8675-ab2e-3424-665a-cfa26b41f131",
            "position": {
                "x": 476.0848189423923,
                "y": 590.5721942169075
            },
            "permissions": {
                "canRead": true,
                "canWrite": true
            },
            "bulletins": [],
            "component": {
                "id": "5cbb8675-ab2e-3424-665a-cfa26b41f131",
                "parentGroupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "position": {
                    "x": 476.0848189423923,
                    "y": 590.5721942169075
                },
                "name": "HDFS",
                "type": "org.apache.nifi.processors.hadoop.GetHDFS",
                "bundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-hadoop-nar",
                    "version": "1.6.0"
                },
                "state": "DISABLED",
                "style": {},
                "relationships": [
                    {
                        "name": "success",
                        "description": "All files retrieved from HDFS are transferred to this relationship",
                        "autoTerminate": false
                    }
                ],
                "supportsParallelProcessing": true,
                "supportsEventDriven": false,
                "supportsBatching": false,
                "persistsState": false,
                "restricted": true,
                "deprecated": false,
                "multipleVersionsAvailable": false,
                "inputRequirement": "INPUT_FORBIDDEN",
                "config": {
                    "properties": {
                        "Hadoop Configuration Resources": "/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml",
                        "kerberos-credentials-service": null,
                        "Kerberos Principal": null,
                        "Kerberos Keytab": null,
                        "Kerberos Relogin Period": "4 hours",
                        "Additional Classpath Resources": null,
                        "Directory": null,
                        "Recurse Subdirectories": "false",
                        "Keep Source File": "false",
                        "File Filter Regex": null,
                        "Filter Match Name Only": "true",
                        "Ignore Dotted Files": "true",
                        "Minimum File Age": "0 sec",
                        "Maximum File Age": null,
                        "Polling Interval": "0 sec",
                        "Batch Size": "100",
                        "IO Buffer Size": null,
                        "Compression codec": "NONE"
                    },
                    "descriptors": {
                        "Hadoop Configuration Resources": {
                            "name": "Hadoop Configuration Resources",
                            "displayName": "Hadoop Configuration Resources",
                            "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration. To use swebhdfs, see 'Additional Details' section of PutHDFS's documentation.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "kerberos-credentials-service": {
                            "name": "kerberos-credentials-service",
                            "displayName": "Kerberos Credentials Service",
                            "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "KeytabCredentialsService",
                                        "value": "618a3674-0165-1000-3e4e-f6dfd8dff05f"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false,
                            "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService",
                            "identifiesControllerServiceBundle": {
                                "group": "org.apache.nifi",
                                "artifact": "nifi-standard-services-api-nar",
                                "version": "1.6.0"
                            }
                        },
                        "Kerberos Principal": {
                            "name": "Kerberos Principal",
                            "displayName": "Kerberos Principal",
                            "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Kerberos Keytab": {
                            "name": "Kerberos Keytab",
                            "displayName": "Kerberos Keytab",
                            "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Kerberos Relogin Period": {
                            "name": "Kerberos Relogin Period",
                            "displayName": "Kerberos Relogin Period",
                            "description": "Period of time which should pass before attempting a kerberos relogin.\n\nThis property has been deprecated, and has no effect on processing. Relogins now occur automatically.",
                            "defaultValue": "4 hours",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Additional Classpath Resources": {
                            "name": "Additional Classpath Resources",
                            "displayName": "Additional Classpath Resources",
                            "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Directory": {
                            "name": "Directory",
                            "displayName": "Directory",
                            "description": "The HDFS directory from which files should be read",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": true
                        },
                        "Recurse Subdirectories": {
                            "name": "Recurse Subdirectories",
                            "displayName": "Recurse Subdirectories",
                            "description": "Indicates whether to pull files from subdirectories of the HDFS directory",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Keep Source File": {
                            "name": "Keep Source File",
                            "displayName": "Keep Source File",
                            "description": "Determines whether to delete the file from HDFS after it has been successfully transferred. If true, the file will be fetched repeatedly. This is intended for testing only.",
                            "defaultValue": "false",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "File Filter Regex": {
                            "name": "File Filter Regex",
                            "displayName": "File Filter Regex",
                            "description": "A Java Regular Expression for filtering Filenames; if a filter is supplied then only files whose names match that Regular Expression will be fetched, otherwise all files will be fetched",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Filter Match Name Only": {
                            "name": "Filter Match Name Only",
                            "displayName": "Filter Match Name Only",
                            "description": "If true then File Filter Regex will match on just the filename, otherwise subdirectory names will be included with filename in the regex comparison",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Ignore Dotted Files": {
                            "name": "Ignore Dotted Files",
                            "displayName": "Ignore Dotted Files",
                            "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                            "defaultValue": "true",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "true",
                                        "value": "true"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "false",
                                        "value": "false"
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Minimum File Age": {
                            "name": "Minimum File Age",
                            "displayName": "Minimum File Age",
                            "description": "The minimum age that a file must be in order to be pulled; any file younger than this amount of time (based on last modification date) will be ignored",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Maximum File Age": {
                            "name": "Maximum File Age",
                            "displayName": "Maximum File Age",
                            "description": "The maximum age that a file must be in order to be pulled; any file older than this amount of time (based on last modification date) will be ignored",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Polling Interval": {
                            "name": "Polling Interval",
                            "displayName": "Polling Interval",
                            "description": "Indicates how long to wait between performing directory listings",
                            "defaultValue": "0 sec",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Batch Size": {
                            "name": "Batch Size",
                            "displayName": "Batch Size",
                            "description": "The maximum number of files to pull in each iteration, based on run schedule.",
                            "defaultValue": "100",
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "IO Buffer Size": {
                            "name": "IO Buffer Size",
                            "displayName": "IO Buffer Size",
                            "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                            "required": false,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        },
                        "Compression codec": {
                            "name": "Compression codec",
                            "displayName": "Compression codec",
                            "description": "",
                            "defaultValue": "NONE",
                            "allowableValues": [
                                {
                                    "allowableValue": {
                                        "displayName": "NONE",
                                        "value": "NONE",
                                        "description": "No compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "DEFAULT",
                                        "value": "DEFAULT",
                                        "description": "Default ZLIB compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "BZIP",
                                        "value": "BZIP",
                                        "description": "BZIP compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "GZIP",
                                        "value": "GZIP",
                                        "description": "GZIP compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "LZ4",
                                        "value": "LZ4",
                                        "description": "LZ4 compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "LZO",
                                        "value": "LZO",
                                        "description": "LZO compression - it assumes LD_LIBRARY_PATH has been set and jar is available"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "SNAPPY",
                                        "value": "SNAPPY",
                                        "description": "Snappy compression"
                                    },
                                    "canRead": true
                                },
                                {
                                    "allowableValue": {
                                        "displayName": "AUTOMATIC",
                                        "value": "AUTOMATIC",
                                        "description": "Will attempt to automatically detect the compression codec."
                                    },
                                    "canRead": true
                                }
                            ],
                            "required": true,
                            "sensitive": false,
                            "dynamic": false,
                            "supportsEl": false
                        }
                    },
                    "schedulingPeriod": "0 sec",
                    "schedulingStrategy": "TIMER_DRIVEN",
                    "executionNode": "ALL",
                    "penaltyDuration": "30 sec",
                    "yieldDuration": "1 sec",
                    "bulletinLevel": "WARN",
                    "runDurationMillis": 0,
                    "concurrentlySchedulableTaskCount": 1,
                    "comments": "",
                    "lossTolerant": false,
                    "defaultConcurrentTasks": {
                        "TIMER_DRIVEN": "1",
                        "EVENT_DRIVEN": "0",
                        "CRON_DRIVEN": "1"
                    },
                    "defaultSchedulingPeriod": {
                        "TIMER_DRIVEN": "0 sec",
                        "CRON_DRIVEN": "* * * * * ?"
                    }
                },
                "extensionMissing": false
            },
            "inputRequirement": "INPUT_FORBIDDEN",
            "status": {
                "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                "id": "5cbb8675-ab2e-3424-665a-cfa26b41f131",
                "name": "HDFS",
                "runStatus": "Disabled",
                "statsLastRefreshed": "14:52:38 UTC",
                "aggregateSnapshot": {
                    "id": "5cbb8675-ab2e-3424-665a-cfa26b41f131",
                    "groupId": "4878034b-f035-3e9e-2b09-92510aca89d2",
                    "name": "HDFS",
                    "type": "GetHDFS",
                    "runStatus": "Disabled",
                    "executionNode": "ALL",
                    "bytesRead": 0,
                    "bytesWritten": 0,
                    "read": "0 bytes",
                    "written": "0 bytes",
                    "flowFilesIn": 0,
                    "bytesIn": 0,
                    "input": "0 (0 bytes)",
                    "flowFilesOut": 0,
                    "bytesOut": 0,
                    "output": "0 (0 bytes)",
                    "taskCount": 0,
                    "tasksDurationNanos": 0,
                    "tasks": "0",
                    "tasksDuration": "00:00:00.000",
                    "activeThreadCount": 0
                }
            }
        }
    ]
}